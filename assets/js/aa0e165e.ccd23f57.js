"use strict";(self.webpackChunkyana_github_io=self.webpackChunkyana_github_io||[]).push([[2755],{90770:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"dynamic-programming","metadata":{"permalink":"/algorithm/dynamic-programming","source":"@site/algorithm/2025-05-20-\u52a8\u6001\u89c4\u5212.md","title":"\u52a8\u6001\u89c4\u5212","description":"\u539f\u9898","date":"2025-05-20T00:00:00.000Z","tags":[{"inline":true,"label":"algorithm","permalink":"/algorithm/tags/algorithm"},{"inline":true,"label":"leetcode","permalink":"/algorithm/tags/leetcode"},{"inline":true,"label":"dynamic programming","permalink":"/algorithm/tags/dynamic-programming"},{"inline":true,"label":"DP","permalink":"/algorithm/tags/dp"}],"readingTime":20.45,"hasTruncateMarker":false,"authors":[{"name":"Yana Ching","title":"Front End Engineer","url":"https://yamadev.github.io/","imageURL":"https://github.com/yanadev.png","key":"yana","page":null}],"frontMatter":{"slug":"dynamic-programming","title":"\u52a8\u6001\u89c4\u5212","authors":"yana","tags":["algorithm","leetcode","dynamic programming","DP"]},"unlisted":false,"nextItem":{"title":"\u529b\u6263239-\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c","permalink":"/algorithm/max-sliding-window-239"}},"content":"## \u539f\u9898\\n\\n```text\\n70. \u722c\u697c\u68af\\n\\n\u5047\u8bbe\u4f60\u6b63\u5728\u722c\u697c\u68af\u3002\u9700\u8981 n \u9636\u4f60\u624d\u80fd\u5230\u8fbe\u697c\u9876\u3002\\n\\n\u6bcf\u6b21\u4f60\u53ef\u4ee5\u722c 1 \u6216 2 \u4e2a\u53f0\u9636\u3002\u4f60\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u5462\uff1f\\n\\n\\n\\n\u793a\u4f8b 1\uff1a\\n\\n\u8f93\u5165\uff1an = 2\\n\u8f93\u51fa\uff1a2\\n\u89e3\u91ca\uff1a\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002\\n1. 1 \u9636 + 1 \u9636\\n2. 2 \u9636\\n\u793a\u4f8b 2\uff1a\\n\\n\u8f93\u5165\uff1an = 3\\n\u8f93\u51fa\uff1a3\\n\u89e3\u91ca\uff1a\u6709\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u3002\\n1. 1 \u9636 + 1 \u9636 + 1 \u9636\\n2. 1 \u9636 + 2 \u9636\\n3. 2 \u9636 + 1 \u9636\\n\\n\\n\u63d0\u793a\uff1a\\n\\n1 <= n <= 45\\n```\\n\\n## \u4f2a\u4ee3\u7801\\n\\n```text\\n\u51fd\u6570 \u722c\u697c\u68af(\u53f0\u9636\u6570 n)\uff1a\\n    \u5982\u679c n \u662f 1\uff1a\\n        \u8fd4\u56de 1\\n    \u5982\u679c n \u662f 2\uff1a\\n        \u8fd4\u56de 2\\n    \u5426\u5219\uff1a\\n        \u8fd4\u56de \u722c\u697c\u68af(n-1) + \u722c\u697c\u68af(n-2)\\n\\n\\ndp[1] = 1\\ndp[2] = 2\\n\u4ece 3 \u5f00\u59cb\uff1a\\ndp[3] = dp[2] + dp[1]\\ndp[4] = dp[3] + dp[2]\\n\u2026\u2026\\ndp[n] = dp[n-1] + dp[n-2]\\n\\n```\\n\\n## \u7f16\u7801\\n\\n```js\\n/**\\n * \u63a8\u8350\u5199\u6cd5\uff0c\u4f18\u5316\u7a7a\u95f4\\n * @param {number} n\\n * @return {number}\\n */\\nvar climbStairs = function (n) {\\n  // \u52a8\u6001\u89c4\u5212\u81ea\u5e95\u5411\u4e0a\u8ba1\u7b97\uff0c\u4ece\u6700\u5c0f\u5c42\u7ea7\u5f00\u59cb\u8ba1\u7b97\\n  let arr = new Array(n + 1)\\n\\n  if (n == 1) return 1\\n  if (n == 2) return 2\\n\\n  let a = 1\\n  let b = 2\\n  let res = 0\\n\\n  for (let i = 3; i <= n; i++) {\\n    res = a + b\\n    a = b\\n    b = res\\n  }\\n\\n  return res\\n}\\n```\\n\\n```js\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar climbStairs = function (n) {\\n  if (n == 1) return 1\\n  if (n == 2) return 2\\n\\n  let dp = []\\n  dp[1] = 1\\n  dp[2] = 2\\n  for (let i = 3; i <= n; i++) {\\n    dp[i] = dp[i - 1] + dp[i - 2]\\n  }\\n\\n  return dp[n]\\n}\\n```\\n\\n# 198 \u6253\u5bb6\u52ab\u820d\\n\\n## \u539f\u9898\\n\\n```text\\n198. \u6253\u5bb6\u52ab\u820d\\n\\n\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u5c0f\u5077\uff0c\u8ba1\u5212\u5077\u7a83\u6cbf\u8857\u7684\u623f\u5c4b\u3002\u6bcf\u95f4\u623f\u5185\u90fd\u85cf\u6709\u4e00\u5b9a\u7684\u73b0\u91d1\uff0c\u5f71\u54cd\u4f60\u5077\u7a83\u7684\u552f\u4e00\u5236\u7ea6\u56e0\u7d20\u5c31\u662f\u76f8\u90bb\u7684\u623f\u5c4b\u88c5\u6709\u76f8\u4e92\u8fde\u901a\u7684\u9632\u76d7\u7cfb\u7edf\uff0c\u5982\u679c\u4e24\u95f4\u76f8\u90bb\u7684\u623f\u5c4b\u5728\u540c\u4e00\u665a\u4e0a\u88ab\u5c0f\u5077\u95ef\u5165\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u62a5\u8b66\u3002\\n\\n\u7ed9\u5b9a\u4e00\u4e2a\u4ee3\u8868\u6bcf\u4e2a\u623f\u5c4b\u5b58\u653e\u91d1\u989d\u7684\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u8ba1\u7b97\u4f60 \u4e0d\u89e6\u52a8\u8b66\u62a5\u88c5\u7f6e\u7684\u60c5\u51b5\u4e0b \uff0c\u4e00\u591c\u4e4b\u5185\u80fd\u591f\u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d\u3002\\n\\n\\n\\n\u793a\u4f8b 1\uff1a\\n\\n\u8f93\u5165\uff1a[1,2,3,1]\\n\u8f93\u51fa\uff1a4\\n\u89e3\u91ca\uff1a\u5077\u7a83 1 \u53f7\u623f\u5c4b (\u91d1\u989d = 1) \uff0c\u7136\u540e\u5077\u7a83 3 \u53f7\u623f\u5c4b (\u91d1\u989d = 3)\u3002\\n     \u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 1 + 3 = 4 \u3002\\n\u793a\u4f8b 2\uff1a\\n\\n\u8f93\u5165\uff1a[2,7,9,3,1]\\n\u8f93\u51fa\uff1a12\\n\u89e3\u91ca\uff1a\u5077\u7a83 1 \u53f7\u623f\u5c4b (\u91d1\u989d = 2), \u5077\u7a83 3 \u53f7\u623f\u5c4b (\u91d1\u989d = 9)\uff0c\u63a5\u7740\u5077\u7a83 5 \u53f7\u623f\u5c4b (\u91d1\u989d = 1)\u3002\\n     \u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d = 2 + 9 + 1 = 12 \u3002\\n\\n\\n\u63d0\u793a\uff1a\\n\\n1 <= nums.length <= 100\\n0 <= nums[i] <= 400\\n```\\n\\n## \u8bef\u533a\\n\\n\u5e76\u4e0d\u662f\u95f4\u9694\u5077\u5c31\u662f\u6700\u4f18\u89e3\\n\\n\u800c\u662f\u6c42\u6bcf\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u5077\u7a83\u7684\u6700\u4f18\u89e3\\n\\n\u62c6\u89e3\u5c31\u662f\\n\\n```text\\n\\n\\n1 2 3 1\\n\\n0 --- nums[0]\\n1 --- max(0) / nums[1]\\n2 --- max(1) / max(0) + nums[2]\\n3 --- max(2) / max(1) + nums[3]\\n\\n...\\n\\nn --- max(n-1) / max(n-2) + nums[n]\\n\\n```\\n\\n## \u4f2a\u4ee3\u7801\\n\\n```text\\n\u51fd\u6570 rob(nums):\\n    \u5982\u679c nums \u662f\u7a7a\uff0c\u8fd4\u56de 0\\n    \u5982\u679c \u53ea\u6709 1 \u4e2a\u623f\u5b50\uff0c\u8fd4\u56de nums[0]\\n\\n    \u521b\u5efa\u6570\u7ec4 dp\uff0c\u957f\u5ea6\u4e3a nums.length\\n    dp[0] = nums[0]\\n    dp[1] = max(nums[0], nums[1])\\n\\n    \u5bf9 i \u4ece 2 \u5230 nums.length - 1:\\n        dp[i] = max(dp[i - 1], dp[i - 2] + nums[i])\\n\\n    \u8fd4\u56de dp[\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e]\\n\\n```\\n\\n## \u7f16\u7801\\n\\n```js\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar rob = function (nums) {\\n  // \u52a8\u6001\u89c4\u5212\u7684\u9898\u76ee\u90fd\u8981\u624b\u52a8\u63a8\u5bfc\u4e00\u904d\uff0c\u627e\u51fa\u89c4\u5f8b\\n  if (nums.length == 1) return nums[0]\\n  if (nums.length == 2) return Math.max(nums[0], nums[1])\\n  let max = []\\n  max[0] = nums[0]\\n  max[1] = Math.max(nums[0], nums[1])\\n  for (let i = 2; i < nums.length; i++) {\\n    max[i] = Math.max(max[i - 1], max[i - 2] + nums[i])\\n  }\\n\\n  return max[nums.length - 1]\\n}\\n```\\n\\n# 746 \u4f7f\u7528\u6700\u5c0f\u82b1\u8d39\u722c\u697c\u68af\\n\\n## \u539f\u9898\\n\\n```text\\n\\n746. \u4f7f\u7528\u6700\u5c0f\u82b1\u8d39\u722c\u697c\u68af\\n\\n\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 cost \uff0c\u5176\u4e2d cost[i] \u662f\u4ece\u697c\u68af\u7b2c i \u4e2a\u53f0\u9636\u5411\u4e0a\u722c\u9700\u8981\u652f\u4ed8\u7684\u8d39\u7528\u3002\u4e00\u65e6\u4f60\u652f\u4ed8\u6b64\u8d39\u7528\uff0c\u5373\u53ef\u9009\u62e9\u5411\u4e0a\u722c\u4e00\u4e2a\u6216\u8005\u4e24\u4e2a\u53f0\u9636\u3002\\n\\n\u4f60\u53ef\u4ee5\u9009\u62e9\u4ece\u4e0b\u6807\u4e3a 0 \u6216\u4e0b\u6807\u4e3a 1 \u7684\u53f0\u9636\u5f00\u59cb\u722c\u697c\u68af\u3002\\n\\n\u8bf7\u4f60\u8ba1\u7b97\u5e76\u8fd4\u56de\u8fbe\u5230\u697c\u68af\u9876\u90e8\u7684\u6700\u4f4e\u82b1\u8d39\u3002\\n\\n\\n\\n\u793a\u4f8b 1\uff1a\\n\\n\u8f93\u5165\uff1acost = [10,15,20]\\n\u8f93\u51fa\uff1a15\\n\u89e3\u91ca\uff1a\u4f60\u5c06\u4ece\u4e0b\u6807\u4e3a 1 \u7684\u53f0\u9636\u5f00\u59cb\u3002\\n- \u652f\u4ed8 15 \uff0c\u5411\u4e0a\u722c\u4e24\u4e2a\u53f0\u9636\uff0c\u5230\u8fbe\u697c\u68af\u9876\u90e8\u3002\\n\u603b\u82b1\u8d39\u4e3a 15 \u3002\\n\u793a\u4f8b 2\uff1a\\n\\n\u8f93\u5165\uff1acost = [1,100,1,1,1,100,1,1,100,1]\\n\u8f93\u51fa\uff1a6\\n\u89e3\u91ca\uff1a\u4f60\u5c06\u4ece\u4e0b\u6807\u4e3a 0 \u7684\u53f0\u9636\u5f00\u59cb\u3002\\n- \u652f\u4ed8 1 \uff0c\u5411\u4e0a\u722c\u4e24\u4e2a\u53f0\u9636\uff0c\u5230\u8fbe\u4e0b\u6807\u4e3a 2 \u7684\u53f0\u9636\u3002\\n- \u652f\u4ed8 1 \uff0c\u5411\u4e0a\u722c\u4e24\u4e2a\u53f0\u9636\uff0c\u5230\u8fbe\u4e0b\u6807\u4e3a 4 \u7684\u53f0\u9636\u3002\\n- \u652f\u4ed8 1 \uff0c\u5411\u4e0a\u722c\u4e24\u4e2a\u53f0\u9636\uff0c\u5230\u8fbe\u4e0b\u6807\u4e3a 6 \u7684\u53f0\u9636\u3002\\n- \u652f\u4ed8 1 \uff0c\u5411\u4e0a\u722c\u4e00\u4e2a\u53f0\u9636\uff0c\u5230\u8fbe\u4e0b\u6807\u4e3a 7 \u7684\u53f0\u9636\u3002\\n- \u652f\u4ed8 1 \uff0c\u5411\u4e0a\u722c\u4e24\u4e2a\u53f0\u9636\uff0c\u5230\u8fbe\u4e0b\u6807\u4e3a 9 \u7684\u53f0\u9636\u3002\\n- \u652f\u4ed8 1 \uff0c\u5411\u4e0a\u722c\u4e00\u4e2a\u53f0\u9636\uff0c\u5230\u8fbe\u697c\u68af\u9876\u90e8\u3002\\n\u603b\u82b1\u8d39\u4e3a 6 \u3002\\n\\n\\n\u63d0\u793a\uff1a\\n\\n2 <= cost.length <= 1000\\n0 <= cost[i] <= 999\\n```\\n\\n## \u63a8\u5bfc\\n\\n```text\\n1 100 1 1 1 100 1 1 100 1\\n\u53ef\u4ee5\u722c1/2\u4e2a\u53f0\u9636\uff0c\u6240\u4ee5\u5982\u679c\u4ece\u6700\u5e95\u90e8\u5411\u4e0a\u722c\uff0c\u9700\u8981\u4ed8\u8d39\u4e3a 0\\n\u603b\u9636\u68af\u6570\u91cf \u82b1\u8d39\\n n = 0,  sum = 0\\n n = 1\uff0c sum = 0\\n n = 2\uff0c sum = 0\\n n = 3\uff0c sum = nums[0] / nums[1]  --- min\\n n = 4\uff0c sum = min(3) / min(2)\\n n = 5,  sum = min(4) / min(3)\\n\\n ...\\n\\n n       sum = min(n-1) / min(n - 2)\\n\\n```\\n\\n## \u4f2a\u4ee3\u7801\\n\\n```js\\nfunction minCostClimbingStairs(cost):\\n    n = length of cost\\n\\n    dp[0] = 0  // \u5230\u8fbe\u7b2c0\u9636\uff08\u8d77\u70b9\uff09\u4e0d\u82b1\u94b1\\n    dp[1] = 0  // \u5230\u8fbe\u7b2c1\u9636\uff08\u4e5f\u53ef\u4f5c\u4e3a\u8d77\u70b9\uff09\u4e0d\u82b1\u94b1\\n\\n    for i from 2 to n:\\n        // \u4f60\u53ef\u4ee5\u4ece i-1 \u8de8\u4e00\u6b65\uff0c\u6216\u8005\u4ece i-2 \u8de8\u4e24\u6b65\\n        dp[i] = min(\\n            dp[i - 1] + cost[i - 1],\\n            dp[i - 2] + cost[i - 2]\\n        )\\n\\n    return dp[n]\\n```\\n\\n## \u6211\u7684\u89e3\u6cd5\\n\\n| \u70b9            | \u4f60\u5199\u6cd5    | \u6b63\u786e\u5199\u6cd5              |\\n| ------------- | --------- | --------------------- |\\n| \u72b6\u6001\u5b9a\u4e49      | \u6b63\u786e \u2705   | \u6b63\u786e \u2705               |\\n| \u72b6\u6001\u8f6c\u79fb      | \u6b63\u786e \u2705   | \u6b63\u786e \u2705               |\\n| \u521d\u59cb\u5316 `dp`   | \u591a\u4f59 \u274c   | \u7cbe\u7b80 \u2705               |\\n| \u989d\u5916 `min[2]` | \u4e0d\u5fc5\u8981 \u274c | \u4e0d\u9700\u8981\uff0c\u5faa\u73af\u4e2d\u8ba1\u7b97 \u2705 |\\n\\n```js\\n/**\\n * @param {number[]} cost\\n * @return {number}\\n */\\nvar minCostClimbingStairs = function (cost) {\\n  // \u6c42\u6700\u5c0f\u82b1\u8d39 + \u6bcf\u6b21\u53ef\u4ee5\u8de81\u6216\u80052\u4e2a\u53f0\u9636\\n  // ==> \u6c42\u5230\u6700\u540e\u4e00\u4e2a\u53f0\u9636\u7684\u82b1\u8d39\\n  // ==> \u5012\u6570\u7b2c\u4e8c\u4e2a\u53f0\u9636+\u5230\u5012\u6570\u7b2c\u4e8c\u4e2a\u53f0\u9636\u7684\u82b1\u8d39  ~ \u5012\u6570\u7b2c\u4e00\u4e2a\u53f0\u9636+\u5230\u5012\u6570\u7b2c\u4e00\u4e2a\u53f0\u9636\u7684\u82b1\u8d39\\n  // ==> \u6c42\u4e24\u4e2a\u82b1\u8d39\u5f97\u6700\u5c0f\u503c\\n  if (cost.length <= 1) return 0\\n\\n  let min = []\\n  min[0] = 0\\n  min[1] = 0\\n  min[2] = Math.min(cost[0], cost[1])\\n\\n  for (let i = 3; i <= cost.length; i++) {\\n    min[i] = Math.min(min[i - 2] + cost[i - 2], min[i - 1] + cost[i - 1])\\n  }\\n  // console.log({ min, target: min[cost.length] })\\n  return min[cost.length]\\n}\\n```\\n\\n```js\\n/**\\n * @param {number[]} cost\\n * @return {number}\\n */\\nvar minCostClimbingStairs = function (cost) {\\n  if (cost.length <= 1) return 0\\n\\n  let min = [0, 0] // 0 1 \u4f4d\u7f6e\u7684\u6700\u5c0f\u82b1\u8d39\u90fd\u662f 0\\n  for (let i = 2; i <= cost.length; i++) {\\n    min[i] = Math.min(min[i - 2] + cost[i - 2], min[i - 1] + cost[i - 1])\\n  }\\n\\n  return min[cost.length]\\n}\\n```\\n\\n```js\\n/**\\n * @param {number[]} cost\\n * @return {number}\\n */\\nvar minCostClimbingStairs = function (cost) {\\n  if (cost.length <= 1) return 0\\n\\n  let prev = 0 // dp[i-2]\\n  let curr = 0 // dp[i-1]\\n  for (let i = 2; i <= cost.length; i++) {\\n    const next = Math.min(prev + cost[i - 2], curr + cost[i - 1])\\n    prev = curr\\n    curr = next\\n  }\\n\\n  return curr\\n}\\n```\\n\\n# 1137 \u7b2c N \u4e2a\u6590\u6ce2\u90a3\u5951\u6570\\n\\n## \u539f\u9898\\n\\n```text\\n\\n1137. \u7b2c N \u4e2a\u6cf0\u6ce2\u90a3\u5951\u6570\\n\\n\u63d0\u793a\\n\u6cf0\u6ce2\u90a3\u5951\u5e8f\u5217 Tn \u5b9a\u4e49\u5982\u4e0b\uff1a\\n\\nT0 = 0, T1 = 1, T2 = 1, \u4e14\u5728 n >= 0 \u7684\u6761\u4ef6\u4e0b Tn+3 = Tn + Tn+1 + Tn+2\\n\\n\u7ed9\u4f60\u6574\u6570 n\uff0c\u8bf7\u8fd4\u56de\u7b2c n \u4e2a\u6cf0\u6ce2\u90a3\u5951\u6570 Tn \u7684\u503c\u3002\\n\\n\\n\\n\u793a\u4f8b 1\uff1a\\n\\n\u8f93\u5165\uff1an = 4\\n\u8f93\u51fa\uff1a4\\n\u89e3\u91ca\uff1a\\nT_3 = 0 + 1 + 1 = 2\\nT_4 = 1 + 1 + 2 = 4\\n\u793a\u4f8b 2\uff1a\\n\\n\u8f93\u5165\uff1an = 25\\n\u8f93\u51fa\uff1a1389537\\n\\n\\n\u63d0\u793a\uff1a\\n\\n0 <= n <= 37\\n\u7b54\u6848\u4fdd\u8bc1\u662f\u4e00\u4e2a 32 \u4f4d\u6574\u6570\uff0c\u5373 answer <= 2^31 - 1\u3002\\n```\\n\\n## \u4f2a\u4ee3\u7801\\n\\n```js\\n\u51fd\u6570 Tribonacci(n):\\n    \u5982\u679c n \u7b49\u4e8e 0\uff0c\u8fd4\u56de 0\\n    \u5982\u679c n \u5c0f\u4e8e 3\uff0c\u8fd4\u56de 1\\n\\n    \u521d\u59cb\u5316\u6570\u7ec4 prev \u4e3a [0, 1, 1]\\n\\n    \u4ece i = 3 \u5230 n\uff0c\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\\n        prev[i] = prev[i - 3] + prev[i - 2] + prev[i - 1]\\n\\n    \u8fd4\u56de prev[n]\\n\\n```\\n\\n## \u7f16\u7801\\n\\n```js\\n/**\\n * @param {number} n\\n * @return {number}\\n */\\nvar tribonacci = function (n) {\\n  if (n == 0) return 0\\n  if (n < 3) return 1\\n  let prev = [0, 1, 1]\\n  for (let i = 3; i <= n; i++) {\\n    prev[i] = prev[i - 3] + prev[i - 2] + prev[i - 1]\\n  }\\n  return prev[n]\\n}\\n```\\n\\n# 213 \u6253\u5bb6\u52ab\u820d \u2161\\n\\n## \u539f\u9898\\n\\n```text\\n\\n```\\n\\n## \u4f2a\u4ee3\u7801\\n\\n```js\\n\u51fd\u6570 rob(nums):\\n    \u5982\u679c\u53ea\u6709 1 \u4e2a\u623f\u5b50\uff1a\\n        \u8fd4\u56de\u5b83\u7684\u94b1\\n\\n    \u60c5\u51b5\u4e00\uff1a\u5077\u7b2c 0 \u5230 n-2 \u53f7\u623f\u5b50\uff08\u4e0d\u5077\u6700\u540e\u4e00\u95f4\uff09\\n    \u60c5\u51b5\u4e8c\uff1a\u5077\u7b2c 1 \u5230 n-1 \u53f7\u623f\u5b50\uff08\u4e0d\u5077\u7b2c\u4e00\u95f4\uff09\\n\\n    \u5206\u522b\u8ba1\u7b97\u8fd9\u4e24\u79cd\u60c5\u51b5\u7684\u6700\u5927\u5077\u76d7\u91d1\u989d\uff1a\\n        max1 = \u5077[0, n-2] \u4e4b\u95f4\u7684\u6700\u5927\u91d1\u989d\\n        max2 = \u5077[1, n-1] \u4e4b\u95f4\u7684\u6700\u5927\u91d1\u989d\\n\\n    \u8fd4\u56de max(max1, max2)\\n\\n\u51fd\u6570 \u5077[start, end]:\\n    dp[i] \u8868\u793a\u5077\u5230\u7b2c i \u95f4\u623f\u5b50\u4e3a\u6b62\uff0c\u6700\u591a\u5077\u5230\u591a\u5c11\u94b1\\n\\n    dp[start] = nums[start]\\n    dp[start + 1] = max(nums[start], nums[start + 1])\\n\\n    \u4ece i = start + 2 \u5230 end\uff1a\\n        dp[i] = max(dp[i-1], dp[i-2] + nums[i])\\n\\n    \u8fd4\u56de dp[end]\\n\\n```\\n\\n## \u6ce8\u610f\u70b9\\n\\n- \u5982\u679c dp[i] \u8868\u793a\u7684\u662f\u5077\u5230\u7b2c i \u4e2a\u623f\u5b50\uff0c\u5c31\u76f4\u63a5\u7528 nums[i]\uff1b\\n- \u5982\u679c dp[i] \u8868\u793a\u7684\u662f\u5077\u5230\u7b2c i - 1 \u4e2a\u623f\u5b50\uff0c\u5c31\u7528 nums[i - 1]\u3002\\n\\n## \u7f16\u7801\\n\\n```js\\n/**\\n * \u5c0f\u5077\u4e13\u7528\u51fd\u6570\uff1a\u6253\u5bb6\u52ab\u820d II\uff08\u623f\u5b50\u56f4\u6210\u4e00\u5708\uff09\\n * @param {number[]} nums - \u6bcf\u95f4\u623f\u5b50\u7684\u73b0\u91d1\u5217\u8868\\n * @return {number} - \u6700\u591a\u80fd\u5077\u5230\u591a\u5c11\u94b1\\n */\\nvar rob = function (nums) {\\n  /**\\n   * \u5c0f\u5077\u7684\u52a9\u624b\u51fd\u6570\uff1a\u8d1f\u8d23\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u7684\u623f\u5b50\u91cc\u5077\u4e1c\u897f\\n   * @param {number[]} nums - \u6240\u6709\u623f\u5b50\u91cc\u7684\u73b0\u91d1\\n   * @param {number} start - \u4ece\u7b2c\u51e0\u4e2a\u623f\u5b50\u5f00\u59cb\\n   * @param {number} end - \u5077\u5230\u7b2c\u51e0\u4e2a\u623f\u5b50\u7ed3\u675f\\n   * @return {number} - \u4ece start \u5230 end \u4e4b\u95f4\u6700\u591a\u80fd\u5077\u591a\u5c11\u94b1\\n   */\\n  function rob_item(nums, start, end) {\\n    // \u5982\u679c\u623f\u5b50\u662f\u7a7a\u7684\uff0c\u5565\u90fd\u5077\u4e0d\u5230\\n    if (nums.length == 0) return 0\\n\\n    // \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u623f\u5b50\uff0c\u90a3\u5c31\u76f4\u63a5\u5077\u5b83\uff01\\n    if (nums.length == 1) return nums[0]\\n\\n    // \u5982\u679c start \u548c end \u662f\u540c\u4e00\u4e2a\u623f\u5b50\uff0c\u5c31\u53ea\u80fd\u5077\u8fd9\u4e00\u5bb6\\n    if (start == end) return nums[start]\\n\\n    // \u521b\u5efa\u4e00\u4e2a\u8bb0\u8d26\u672c dp\uff0c\u7528\u6765\u8bb0\u6bcf\u4e00\u6b65\u6700\u591a\u80fd\u5077\u591a\u5c11\u94b1\\n    let dp = []\\n\\n    // \u7b2c\u4e00\u4e2a\u80fd\u5077\u7684\u623f\u5b50\u662f start\uff0c\u628a\u5b83\u5077\u4e86\\n    dp[start] = nums[start]\\n\\n    // \u7b2c\u4e8c\u4e2a\u623f\u5b50\u662f start+1\uff0c\u8fd9\u65f6\u6211\u4eec\u8981\u9009\uff1a\u5077 start \u8fd8\u662f start+1\uff0c\u8c01\u94b1\u591a\u5077\u8c01\\n    dp[start + 1] = Math.max(nums[start], nums[start + 1])\\n\\n    // \u4ece\u7b2c\u4e09\u4e2a\u623f\u5b50\u5f00\u59cb\uff08\u4e5f\u5c31\u662f start + 2\uff09\uff0c\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u5f80\u540e\u770b\\n    for (let i = start + 2; i <= end; i++) {\\n      // \u6709\u4e24\u4e2a\u9009\u62e9\uff1a\\n      // 1. \u4e0d\u5077\u8fd9\u4e00\u5bb6\uff0c\u90a3\u5c31\u4fdd\u6301\u524d\u4e00\u4e2a\u7684\u5077\u6cd5\uff08dp[i - 1]\uff09\\n      // 2. \u5077\u8fd9\u4e00\u5bb6\uff0c\u90a3\u524d\u4e00\u5bb6\u4e0d\u80fd\u5077\uff0c\u6240\u4ee5\u662f dp[i - 2] + nums[i]\\n      // \u7136\u540e\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u9009\u9879\uff0c\u9009\u94b1\u591a\u7684\u90a3\u4e2a\\n      dp[i] = Math.max(dp[i - 2] + nums[i], dp[i - 1])\\n    }\\n\\n    // \u6700\u540e\u8fd4\u56de\u5077\u5230\u7b2c end \u5bb6\u65f6\u6700\u591a\u80fd\u5077\u591a\u5c11\u94b1\\n    return dp[end]\\n  }\\n\\n  const len = nums.length - 1\\n\\n  // \u7279\u522b\u60c5\u51b5\uff1a\u5982\u679c\u53ea\u6709\u4e00\u95f4\u623f\u5b50\uff0c\u90a3\u76f4\u63a5\u5077\u5b83\u5c31\u597d\\n  if (nums.length === 1) return nums[0]\\n\\n  // \u60c5\u51b5\u4e00\uff1a\u4e0d\u5077\u6700\u540e\u4e00\u5bb6 \u2192 \u5077\u7b2c 0 \u5230 len-1 \u5bb6\\n  const max1 = rob_item(nums, 0, len - 1)\\n\\n  // \u60c5\u51b5\u4e8c\uff1a\u4e0d\u5077\u7b2c\u4e00\u5bb6 \u2192 \u5077\u7b2c 1 \u5230 len \u5bb6\\n  const max2 = rob_item(nums, 1, len)\\n\\n  // \u6bd4\u8f83\u4e24\u4e2a\u65b9\u6848\u54ea\u4e2a\u5077\u7684\u94b1\u66f4\u591a\uff0c\u8fd4\u56de\u6700\u591a\u7684\u90a3\u4e2a\\n  const res = Math.max(max1, max2)\\n\\n  return res\\n}\\n```\\n\\n# 740 \u5220\u9664\u5e76\u83b7\u5f97\u70b9\u6570\\n\\n## \u539f\u9898\\n\\n```text\\n740. \u5220\u9664\u5e76\u83b7\u5f97\u70b9\u6570\\n\\n\u63d0\u793a\\n\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u4f60\u53ef\u4ee5\u5bf9\u5b83\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002\\n\\n\u6bcf\u6b21\u64cd\u4f5c\u4e2d\uff0c\u9009\u62e9\u4efb\u610f\u4e00\u4e2a nums[i] \uff0c\u5220\u9664\u5b83\u5e76\u83b7\u5f97 nums[i] \u7684\u70b9\u6570\u3002\u4e4b\u540e\uff0c\u4f60\u5fc5\u987b\u5220\u9664 \u6240\u6709 \u7b49\u4e8e nums[i] - 1 \u548c nums[i] + 1 \u7684\u5143\u7d20\u3002\\n\\n\u5f00\u59cb\u4f60\u62e5\u6709 0 \u4e2a\u70b9\u6570\u3002\u8fd4\u56de\u4f60\u80fd\u901a\u8fc7\u8fd9\u4e9b\u64cd\u4f5c\u83b7\u5f97\u7684\u6700\u5927\u70b9\u6570\u3002\\n\\n\\n\\n\u793a\u4f8b 1\uff1a\\n\\n\u8f93\u5165\uff1anums = [3,4,2]\\n\u8f93\u51fa\uff1a6\\n\u89e3\u91ca\uff1a\\n\u5220\u9664 4 \u83b7\u5f97 4 \u4e2a\u70b9\u6570\uff0c\u56e0\u6b64 3 \u4e5f\u88ab\u5220\u9664\u3002\\n\u4e4b\u540e\uff0c\u5220\u9664 2 \u83b7\u5f97 2 \u4e2a\u70b9\u6570\u3002\u603b\u5171\u83b7\u5f97 6 \u4e2a\u70b9\u6570\u3002\\n\u793a\u4f8b 2\uff1a\\n\\n\u8f93\u5165\uff1anums = [2,2,3,3,3,4]\\n\u8f93\u51fa\uff1a9\\n\u89e3\u91ca\uff1a\\n\u5220\u9664 3 \u83b7\u5f97 3 \u4e2a\u70b9\u6570\uff0c\u63a5\u7740\u8981\u5220\u9664\u4e24\u4e2a 2 \u548c 4 \u3002\\n\u4e4b\u540e\uff0c\u518d\u6b21\u5220\u9664 3 \u83b7\u5f97 3 \u4e2a\u70b9\u6570\uff0c\u518d\u6b21\u5220\u9664 3 \u83b7\u5f97 3 \u4e2a\u70b9\u6570\u3002\\n\u603b\u5171\u83b7\u5f97 9 \u4e2a\u70b9\u6570\u3002\\n\\n\\n\u63d0\u793a\uff1a\\n\\n1 <= nums.length <= 2 * 104\\n1 <= nums[i] <= 104\\n```\\n\\n## \u601d\u8def\\n\\n1.  \u7406\u89e3\u9898\u76ee\uff0c\u9009\u4e2d\u6570 i \u7684\u4e4b\u540e\uff0c`i-1` \u548c `i+1` \u4e5f\u8981\u88ab\u79fb\u9664\uff0c\u83b7\u5f97\u70b9\u6570 i\uff0c\u5373\uff0ci \u4e00\u65e6\u88ab\u79fb\u9664\u6389\uff0c\u65c1\u8fb9\u4e24\u4e2a\u6570\u503c\u4e5f\u5f97\u88ab\u79fb\u9664\u6389 ====>\\n    \u6570\u636e\u9700\u8981\u6309\u7167\u5927\u5c0f\u6392\u5217\uff0c\u60f3\u529e\u6cd5\u8ba9\u6570\u503c\u548c index \u5173\u8054\u8d77\u6765 ====> \u7528\u54c8\u5e0c\u8868\u5b58\u50a8\uff0c`key\u503c ~ value\u51fa\u73b0\u6b21\u6570`\\n2.  \u90a3\u4e48\uff0c\u5982\u679c\u5b58\u5728\u76f8\u540c\u7684 i \u5462\uff1f -----\x3e \u4e00\u65e6\u7b2c\u4e00\u4e2a i \u88ab\u79fb\u9664\u6389\uff0c\u5c31\u4f1a\u76f4\u63a5\u5220\u6389\u76f8\u90bb\u7684\u70b9\uff0c\u540e\u9762\u518d\u9047\u5230\u76f8\u540c\u7684 i \u4e0d\u9700\u8981\u518d\u5220\u9664\u76f8\u90bb\\n    \u70b9\u6570\u4e86\uff0c\u56e0\u6b64\u6709 x \u4e2a i\uff0c\u5c31\u6709 `x*i` \u7684\u70b9\u6570\\n\\n3.  \u6240\u4ee5\u7528\u4e8e\u6700\u540e\u8ba1\u7b97\u7684\u54c8\u5e0c\u8868\u8981\u548c\u603b\u5206\u6302\u94a9\uff0c\u7531 `key\u503c ~ value\u51fa\u73b0\u4e2a\u6570` \u5f97\u5230 `key\u503c ~ value\u603b\u5206`\\n4.  \u7136\u540e\u9010\u4e2a\u5206\u6790\u89c4\u5f8b\\n    1.  \u5904\u7406\u5230\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6700\u5927\u5f97\u5206\u662f dp[i] = nums[i]\\n    2.  \u5904\u7406\u5230\u7b2c\u4e8c\u4e2a\u5143\u7d20\u7684\u6700\u5927\u5f97\u5206\u662f dp[i] = max(dp[i-1], nums[i])\\n    3.  \u5904\u7406\u5230\u7b2c\u4e09\u4e2a\u5143\u7d20\u7684\u6700\u5927\u5f97\u5206\u662f dp[i] = max(dp[i-1], dp[i-2]+nums[i]) \u3010\u53ef\u80fd\u6700\u540e\u4e00\u4e2a\u9009\u4e2d\u7684\u503c\u662f nums[i] \uff0c\u4e5f\u53ef\u80fd\u662f\\n        num[i-1],\u5982\u679c\u6700\u540e\u4e00\u4e2a\u662f num[i-1] \u90a3\u4e48 nums[i] \u4f1a\u88ab\u5220\u9664\u4e0d\u5904\u7406\uff1b\u5982\u679c\u6700\u540e\u4e00\u4e2a\u662f num[i] \uff0c\u90a3\u5c31\u9700\u8981\u8ba1\u7b97\\n        dp[i-2]+nums[i]\u3011\\n5.  \u7531\u6b64\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u5176\u5b9e\u662f`\u6253\u5bb6\u52ab\u820d` \u95ee\u9898\u7684\u53d8\u5f62\\n\\n## \u8054\u60f3\\n\\n\u2705 \u8f6c\u5316\u4e3a\u6253\u5bb6\u52ab\u820d\u95ee\u9898\u5982\u679c\u4f60\u9009\u62e9\u4e86\u6570\u5b57 x\uff0c\u5c31\u4e0d\u80fd\u9009\u62e9 x-1 \u548c x+1 \u53ef\u4ee5\u5148\u628a\u540c\u4e00\u4e2a\u6570\u5b57\u7684\u603b\u5f97\u5206\u7b97\u51fa\u6765\uff0c\u6bd4\u5982\uff1a\\n\\n- nums = [2, 2, 3, 3, 3, 4] =>\\n- count[2] = 4 // 2 + 2\\n- count[3] = 9 // 3 + 3 + 3\\n- count[4] = 4 // 4\\n\\n\u7136\u540e\u4f60\u8981\u5728 count[i] \u4e0a\u505a\u9009\u62e9\uff1a\u9009 i \u5c31\u4e0d\u80fd\u9009 i-1\uff0c\u5c31\u6210\u4e86\u6253\u5bb6\u52ab\u820d\u95ee\u9898\u7684\u52a8\u6001\u89c4\u5212\u5f62\u5f0f\uff1a\\n`dp[i] = max(dp[i-1], dp[i-2] + count[i])`\\n\\n\u60f3\u8c61\u4f60\u5728\u201c\u5403\u7cd6\u679c\u201d\uff1a\\n\\n- \u6bcf\u79cd\u6570\u5b57\u662f\u4e00\u79cd\u7cd6\u679c\uff0c\u5403\u4e00\u4e2a\u6570\u5b57\u5c31\u628a\u5b83\u5168\u90fd\u5403\u5149\uff08\u5f97\u5206 = \u6570\u5b57 \xd7 \u6570\u91cf\uff09\\n- \u4f46\u5403\u6389\u4e00\u79cd\u7cd6\u679c\u4e4b\u540e\uff0c\u76f8\u90bb\u7684\u7cd6\u679c\u5c31\u4f1a\u88ab\u6254\u6389\uff08\u4e0d\u80fd\u518d\u5f97\u5206\uff09\\n- \u6240\u4ee5\u4f60\u8981\u806a\u660e\u5730\u5b89\u6392\u5148\u5403\u54ea\u4e9b\uff0c\u540e\u5403\u54ea\u4e9b\uff0c\u624d\u80fd\u5f97\u5230\u6700\u591a\u7cd6\u679c\uff01\\n\\n## \u7f16\u7801\\n\\n```js\\n/**\\n * @param {number[]} nums\\n * @return {number}\\n */\\nvar deleteAndEarn = function (nums) {\\n  // 1. \u8fb9\u754c\u5904\u7406\\n  if (nums.length == 0) return 0\\n  if (nums.length == 1) return nums[0]\\n\\n  // 2. \u4e0d\u5173\u6ce8\u6392\u5e8f\uff0c\u53ea\u5173\u6ce8\u6700\u5927\u503c\\n  const maxVal = Math.max(...nums)\\n  // 3. \u521d\u59cb\u5316\u603b\u6570\u6570\u7ec4\uff0c\u907f\u514d\u6570\u7ec4\u8d8a\u754c\\n  let count = new Array(maxVal + 1).fill(0)\\n  // 4. \u904d\u5386\u6570\u7ec4\uff0c\u83b7\u53d6 \u603b\u6570-\u4e0b\u6807 \u5173\u8054\u6570\u7ec4\\n  for (let num of nums) {\\n    count[num] += num\\n  }\\n\\n  let prev2 = count[0] // \u76f8\u5f53\u4e8e dp[i - 2]\\n  let prev1 = Math.max(count[0], count[1]) // \u76f8\u5f53\u4e8e dp[i - 1]\\n\\n  for (let i = 2; i <= maxVal; i++) {\\n    const curr = Math.max(prev1, prev2 + count[i])\\n    prev2 = prev1\\n    prev1 = curr\\n  }\\n\\n  return prev1\\n}\\n```\\n\\n# 62 \u4e0d\u540c\u7684\u8def\u5f84\\n\\n## \u539f\u9898\\n\\n```text\\n\\n```\\n\\n## \u95ee\u9898\u7406\u89e3\\n\\n- \u4e00\u4e2a m x n \u7684\u7f51\u683c\\n- \u673a\u5668\u4eba\u53ea\u80fd \u5411\u53f3 \u6216 \u5411\u4e0b \u79fb\u52a8\\n- \u8d77\u70b9\u662f\u5de6\u4e0a\u89d2 (0, 0)\uff0c\u7ec8\u70b9\u662f\u53f3\u4e0b\u89d2 (m-1, n-1)\\n- \u95ee\uff1a\u6709\u591a\u5c11\u79cd\u8def\u5f84\u4ece\u8d77\u70b9\u8d70\u5230\u7ec8\u70b9\uff1f\\n\\n## \u52a8\u6001\u89c4\u5212\u601d\u8def\\n\\n1. \u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 dp[i][j] \u8868\u793a\u4ece\u8d77\u70b9\u5230 (i, j) \u4f4d\u7f6e\u7684\u8def\u5f84\u603b\u6570\\n\\n2. \u521d\u59cb\u5316\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\uff1a\u673a\u5668\u4eba\u53ea\u80fd\u4e00\u76f4\u5f80\u53f3/\u5f80\u4e0b\u8d70\uff0c\u6240\u4ee5\u8def\u5f84\u6570\u90fd\u662f 1\\n\\n3. \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\\n\\n```js\\ndp[i][j] = dp[i-1][j] + dp[i][j-1] \u4ece\u4e0a\u9762\u6765\u4e00\u6b65\uff1adp[i-1][j]\\n```\\n\\n\u4ece\u5de6\u8fb9\u6765\u4e00\u6b65\uff1adp[i][j-1]\\n\\n\u6700\u7ec8\u7b54\u6848\u662f\uff1adp[m-1][n-1]\\n\\n## \u4f2a\u4ee3\u7801\\n\\n```js\\nfunction uniquePaths(m, n):\\n    \u521b\u5efa\u4e8c\u7ef4\u6570\u7ec4 dp\uff0c\u5927\u5c0f\u4e3a m x n\uff0c\u6240\u6709\u5143\u7d20\u521d\u59cb\u4e3a 1\\n\\n    for i \u4ece 1 \u5230 m-1:\\n        for j \u4ece 1 \u5230 n-1:\\n            dp[i][j] = dp[i-1][j] + dp[i][j-1]\\n\\n    \u8fd4\u56de dp[m-1][n-1]\\n\\n```\\n\\n## \u4e3e\u4f8b\u8bf4\u660e\uff08m = 3, n = 3\uff09\\n\\n\u521d\u59cb\u72b6\u6001\uff1a\\n\\n```text\\n1 1 1\\n1 ? ?\\n1 ? ?\\n```\\n\\n\u4e00\u6b65\u6b65\u586b\u5145\uff1a\\n\\n```text\\n1 1 1\\n1 2 3\\n1 3 6\\n```\\n\\n\u6700\u540e\u7684\u7b54\u6848\u662f\uff1a6\\n\\n## \u5206\u6790\\n\\n\u2705 \u6211\u4f7f\u7528\u7684\u5199\u6cd5\uff1a\u7528 Array.from() \u4e00\u6b65\u641e\u5b9a\\n\\n```js\\nconst dp = Array.from({ length: m }, () => Array(n).fill(1))\\n\\n\ud83d\udd0d \u5b83\u505a\u7684\u4e8b\u60c5\u5c31\u662f\uff1a\\n\\n- { length: m }\uff1a\u53ea\u662f\u544a\u8bc9 Array.from \u8981\u751f\u6210 m \u4e2a\u5143\u7d20\\n- () => Array(n).fill(1)\uff1a\u544a\u8bc9\u5b83\u6bcf\u4e00\u9879\u8be5\u586b\u5565 \u2014\u2014 \u5c31\u662f\u4e00\u4e2a n \u957f\u5ea6\u3001\u503c\u5168\u662f 1 \u7684\u6570\u7ec4\\n\\n```\\n\\n## \u7f16\u7801\\n\\n```js\\n/**\\n * @param {number} m\\n * @param {number} n\\n * @return {number}\\n */\\nvar uniquePaths = function (m, n) {\\n  let dp = Array.from({ length: m }, () => Array(n).fill(1))\\n  for (let i = 1; i < m; i++) {\\n    for (let j = 1; j < n; j++) {\\n      dp[i][j] = dp[i - 1][j] + dp[i][j - 1]\\n      // \u8ba1\u7b97\u5230 (i,j) \u7684\u8def\u5f84\uff0c\u9650\u5236\u53ea\u80fd\u5411\u53f3\u5411\u4e0b\\n      // \u6240\u4ee5\u53ef\u4ee5\u4ece dp[i-1][j]\uff0cdp[i][j-1] \u4e24\u4e2a\u70b9\u8fc7\u6765\\n    }\\n  }\\n\\n  return dp[m - 1][n - 1]\\n}\\n```"},{"id":"max-sliding-window-239","metadata":{"permalink":"/algorithm/max-sliding-window-239","source":"@site/algorithm/2025-05-14-\u529b\u6263239-\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c.md","title":"\u529b\u6263239-\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c","description":"\u539f\u9898","date":"2025-05-14T00:00:00.000Z","tags":[{"inline":true,"label":"algorithm","permalink":"/algorithm/tags/algorithm"},{"inline":true,"label":"leetcode","permalink":"/algorithm/tags/leetcode"},{"inline":true,"label":"maxSlidingWindow","permalink":"/algorithm/tags/max-sliding-window"}],"readingTime":5.41,"hasTruncateMarker":false,"authors":[{"name":"Yana Ching","title":"Front End Engineer","url":"https://yamadev.github.io/","imageURL":"https://github.com/yanadev.png","key":"yana","page":null}],"frontMatter":{"slug":"max-sliding-window-239","title":"\u529b\u6263239-\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c","authors":"yana","tags":["algorithm","leetcode","maxSlidingWindow"]},"unlisted":false,"prevItem":{"title":"\u52a8\u6001\u89c4\u5212","permalink":"/algorithm/dynamic-programming"},"nextItem":{"title":"\u529b\u62631438-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4","permalink":"/algorithm/longest-subarray-1438"}},"content":"## \u539f\u9898\\n\\n```text\\n\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums\uff0c\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a k \u7684\u6ed1\u52a8\u7a97\u53e3\u4ece\u6570\u7ec4\u7684\u6700\u5de6\u4fa7\u79fb\u52a8\u5230\u6570\u7ec4\u7684\u6700\u53f3\u4fa7\u3002\u4f60\u53ea\u53ef\u4ee5\u770b\u5230\u5728\u6ed1\u52a8\u7a97\u53e3\u5185\u7684 k \u4e2a\u6570\u5b57\u3002\u6ed1\u52a8\u7a97\u53e3\u6bcf\u6b21\u53ea\u5411\u53f3\u79fb\u52a8\u4e00\u4f4d\u3002\\n\\n\u8fd4\u56de \u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c \u3002\\n\\n\\n\\n\u793a\u4f8b 1\uff1a\\n\\n\u8f93\u5165\uff1anums = [1,3,-1,-3,5,3,6,7], k = 3\\n\u8f93\u51fa\uff1a[3,3,5,5,6,7]\\n\u89e3\u91ca\uff1a\\n\u6ed1\u52a8\u7a97\u53e3\u7684\u4f4d\u7f6e                \u6700\u5927\u503c\\n---------------               -----\\n[1  3  -1] -3  5  3  6  7       3\\n 1 [3  -1  -3] 5  3  6  7       3\\n 1  3 [-1  -3  5] 3  6  7       5\\n 1  3  -1 [-3  5  3] 6  7       5\\n 1  3  -1  -3 [5  3  6] 7       6\\n 1  3  -1  -3  5 [3  6  7]      7\\n\u793a\u4f8b 2\uff1a\\n\\n\u8f93\u5165\uff1anums = [1], k = 1\\n\u8f93\u51fa\uff1a[1]\\n\\n\\n\u63d0\u793a\uff1a\\n\\n1 <= nums.length <= 105\\n-104 <= nums[i] <= 104\\n1 <= k <= nums.length\\n```\\n\\n## \u89e3\u9898\u601d\u8def\\n\\n\u7406\u89e3\u9898\u76ee\u903b\u8f91\uff1a\u7a97\u53e3\u957f\u5ea6\u4e3a k\uff0c\u83b7\u53d6\u8be5\u7a97\u53e3\u4e0b\u6700\u5927\u7684\u503c\uff0c\u7a97\u53e3\u6536\u7f29\u4f1a\u51fa\u73b0\u591a\u4e2a\u53ef\u80fd\u7684\u5b50\u96c6\uff0c\u5728\u5b50\u96c6\u4e2d\u627e\u5230\u6700\u5927\u7684\u503c\\n\\n    1. \u904d\u5386\u6570\u7ec4 nums\uff0c\u5faa\u73af\u6267\u884c\u6761\u4ef6\u662f r < nums.length\\n    2. \u6bcf\u6b21\u79fb\u52a8\u53f3\u4fa7\u6307\u9488\u65f6\uff0c\u5c06 nums[r] \u4e0e\u5b58\u50a8\u6700\u503c\u5f97\u961f\u5217\u5c3e\u5df4\u5bf9\u6bd4\uff0c\u5982\u679c\u961f\u5217\u7684\u5c3e\u90e8\u5143\u7d20\u5c0f\u4e8e nums[r]\uff0c\u4e00\u76f4\u5c06\u961f\u5217\u5c3e\u90e8\u51fa\u961f\u76f4\u5230\u5c3e\u90e8\u5143\u7d20\u5927\u4e8e nums[r]\\n    3. \u4e00\u65e6 r - l + 1 > k\u5373\u7a97\u53e3\u957f\u5ea6\u8d85\u8fc7k\uff0c\u9700\u8981\u6536\u7f29 l\uff08l++\uff09\uff0c\u6536\u7f29\u4e4b\u524d\u5224\u65ad num[l] \u662f\u5426\u548c\u961f\u5217\u5934\u90e8\u5143\u7d20\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u51fa\u961f\u961f\u5217\u5934\u90e8\u5143\u7d20\\n\\n    PS: \u51fa\u961f\u5934\u90e8\u5143\u7d20\u4e0d\u5173\u6ce8 nums[l] \u5728\u961f\u5217\u4e2d\u90e8\u6216\u8005\u5c3e\u90e8\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u6709\u65b0\u7684 nums[r] \u5927\u4e8e\u961f\u5217\u9664\u4e86\u961f\u5934\u4ee5\u5916\u7684\u4efb\u610f\u4e00\u4e2a\u503c\uff0c\u961f\u5217\u5185\u7684\u5143\u7d20\u90fd\u6709\u53ef\u80fd\u88ab\u51fa\u961f\\n    \u6216\u8005\u7b80\u5355\u8bb0\u5fc6\uff08\u53ea\u5173\u6ce8\u6700\u5927\u503c\uff09\\n\\n    4. \u79fb\u52a8\u53f3\u6307\u9488\u4e4b\u524d\u5c06\u961f\u5934\u7684\u503c\u5b58\u50a8\u5f85\u5b9a\u7ed3\u679c\u96c6\\n    5. \u8fd4\u56de\u7ed3\u679c\u96c6\u4e2d\u7684\u6700\u5927\u503c\\n\\n    \u9519\u8bef\u70b9\uff1a\\n    1. \u5c06\u4e0d\u7b26\u5408\u7684\u7a97\u53e3\u533a\u95f4\u4e5f\u8bb0\u5f55\u4e0b\u6765\u4e86\uff08\u4e00\u5b9a\u786e\u4fdd [l,r] \u7a97\u53e3\u8981\u5408\u683c\u7ed3\u679c\u624d\u6709\u6548\uff09\\n    2. \u533a\u95f4\u5408\u683c\u6761\u4ef6\u9700\u8981\u6ce8\u610f k \u662f\u957f\u5ea6\uff0cr \u662f\u5e8f\u5217\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u6240\u4ee5\u533a\u95f4\u5408\u683c\u6761\u4ef6\u662f r >= k - 1\\n\\n## \u4ee3\u7801\\n\\n```js\\n/**\\n * @param {number[]} nums\\n * @param {number} k\\n * @return {number[]}\\n */\\nvar maxSlidingWindow = function (nums, k) {\\n  // \u7a97\u53e3\u957f\u5ea6\u4e3a k\uff0c\u4e00\u65e6\u7a97\u53e3\u957f\u5ea6\u8d85\u8fc7 k\uff0c\u5c31\u9700\u8981\u6536\u7f29\u5de6\u533a\u95f4\\n  // \u6bcf\u6b21\u79fb\u52a8\u53f3\u533a\u95f4\uff0c\u5224\u65ad\u533a\u95f4\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u5408\u6cd5\uff0c\u66f4\u65b0\u6700\u5927\u503c\\n  /**\\n    \u7406\u89e3\u9898\u76ee\u903b\u8f91\uff1a\u7a97\u53e3\u957f\u5ea6\u4e3a k\uff0c\u83b7\u53d6\u8be5\u7a97\u53e3\u4e0b\u6700\u5927\u7684\u503c\uff0c\u7a97\u53e3\u6536\u7f29\u4f1a\u51fa\u73b0\u591a\u4e2a\u53ef\u80fd\u7684\u5b50\u96c6\uff0c\u5728\u5b50\u96c6\u4e2d\u627e\u5230\u6700\u5927\u7684\u503c\\n \\n    1. \u904d\u5386\u6570\u7ec4 nums\uff0c\u5faa\u73af\u6267\u884c\u6761\u4ef6\u662f r < nums.length\\n    2. \u6bcf\u6b21\u79fb\u52a8\u53f3\u4fa7\u6307\u9488\u65f6\uff0c\u5c06 nums[r] \u4e0e\u5b58\u50a8\u6700\u503c\u5f97\u961f\u5217\u5c3e\u5df4\u5bf9\u6bd4\uff0c\u5982\u679c\u961f\u5217\u7684\u5c3e\u90e8\u5143\u7d20\u5c0f\u4e8e nums[r]\uff0c\u4e00\u76f4\u5c06\u961f\u5217\u5c3e\u90e8\u51fa\u961f\u76f4\u5230\u5c3e\u90e8\u5143\u7d20\u5927\u4e8e nums[r]\\n    3. \u4e00\u65e6 r - l + 1 > k\u5373\u7a97\u53e3\u957f\u5ea6\u8d85\u8fc7k\uff0c\u9700\u8981\u6536\u7f29 l\uff08l++\uff09\uff0c\u6536\u7f29\u4e4b\u524d\u5224\u65ad num[l] \u662f\u5426\u548c\u961f\u5217\u5934\u90e8\u5143\u7d20\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u51fa\u961f\u961f\u5217\u5934\u90e8\u5143\u7d20\\n\\n    PS: \u51fa\u961f\u5934\u90e8\u5143\u7d20\u4e0d\u5173\u6ce8 nums[l] \u5728\u961f\u5217\u4e2d\u90e8\u6216\u8005\u5c3e\u90e8\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u6709\u65b0\u7684 nums[r] \u5927\u4e8e\u961f\u5217\u9664\u4e86\u961f\u5934\u4ee5\u5916\u7684\u4efb\u610f\u4e00\u4e2a\u503c\uff0c\u961f\u5217\u5185\u7684\u5143\u7d20\u90fd\u6709\u53ef\u80fd\u88ab\u51fa\u961f\\n    \u6216\u8005\u7b80\u5355\u8bb0\u5fc6\uff08\u53ea\u5173\u6ce8\u6700\u5927\u503c\uff09\\n \\n    4. \u79fb\u52a8\u53f3\u6307\u9488\u4e4b\u524d\u5c06\u961f\u5934\u7684\u503c\u5b58\u50a8\u5f85\u5b9a\u7ed3\u679c\u96c6\\n    5. \u8fd4\u56de\u7ed3\u679c\u96c6\u4e2d\u7684\u6700\u5927\u503c\\n\\n    \u9519\u8bef\u70b9\uff1a\\n    1. \u5c06\u4e0d\u7b26\u5408\u7684\u7a97\u53e3\u533a\u95f4\u4e5f\u8bb0\u5f55\u4e0b\u6765\u4e86\uff08\u4e00\u5b9a\u786e\u4fdd [l,r] \u7a97\u53e3\u8981\u5408\u683c\u7ed3\u679c\u624d\u6709\u6548\uff09\\n    2. \u533a\u95f4\u5408\u683c\u6761\u4ef6\u9700\u8981\u6ce8\u610f k \u662f\u957f\u5ea6\uff0cr \u662f\u5e8f\u5217\uff08\u4ece0\u5f00\u59cb\uff09\uff0c\u6240\u4ee5\u533a\u95f4\u5408\u683c\u6761\u4ef6\u662f r >= k - 1\\n\\n     */\\n  let l = 0\\n  let r = 0\\n  let deque = []\\n  let res = []\\n  while (r < nums.length) {\\n    while (deque.length && nums[r] > deque[deque.length - 1]) {\\n      deque.pop()\\n    }\\n    deque.push(nums[r])\\n    while (r - l + 1 > k) {\\n      // \u6536\u7f29\u4e4b\u524d\u5224\u65ad\u5373\u5c06\u88ab\u6392\u9664\u7684\u5de6\u7aef\u5143\u7d20\u662f\u5426\u5728\u5355\u8c03\u9012\u51cf\u961f\u5217\u5934\u90e8\uff0c\u82e5\u5b58\u5728\uff0c\u79fb\u9664\u8be5\u5143\u7d20\\n      if (nums[l] == deque[0]) {\\n        deque.shift()\\n      }\\n      // \u6536\u7f29\u5de6\u4fa7\u6307\u9488\\n      l++\\n    }\\n    if (r >= k - 1) {\\n      // \u533a\u95f4\u5408\u683c\u7684\u65f6\u5019\uff0c\u961f\u5217\u6700\u5927\u503c\u624d\u6709\u610f\u4e49\\n      res.push(deque[0] || 0)\\n    }\\n    r++\\n  }\\n\\n  return res\\n}\\n```"},{"id":"longest-subarray-1438","metadata":{"permalink":"/algorithm/longest-subarray-1438","source":"@site/algorithm/2025-05-13-\u529b\u62631438-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4.md","title":"\u529b\u62631438-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4","description":"\u539f\u9898","date":"2025-05-13T00:00:00.000Z","tags":[{"inline":true,"label":"algorithm","permalink":"/algorithm/tags/algorithm"},{"inline":true,"label":"leetcode","permalink":"/algorithm/tags/leetcode"},{"inline":true,"label":"longestSubarray","permalink":"/algorithm/tags/longest-subarray"}],"readingTime":6.68,"hasTruncateMarker":false,"authors":[{"name":"Yana Ching","title":"Front End Engineer","url":"https://yamadev.github.io/","imageURL":"https://github.com/yanadev.png","key":"yana","page":null}],"frontMatter":{"slug":"longest-subarray-1438","title":"\u529b\u62631438-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4","authors":"yana","tags":["algorithm","leetcode","longestSubarray"]},"unlisted":false,"prevItem":{"title":"\u529b\u6263239-\u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c","permalink":"/algorithm/max-sliding-window-239"},"nextItem":{"title":"\u529b\u62631004-\u6700\u5927\u8fde\u7eed1\u7684\u4e2a\u6570 \u2162","permalink":"/algorithm/longest-ones-1004"}},"content":"## \u539f\u9898\\n\\n```text\\n\\n\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u548c\u4e00\u4e2a\u8868\u793a\u9650\u5236\u7684\u6574\u6570 limit\uff0c\u8bf7\u4f60\u8fd4\u56de\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u8be5\u5b50\u6570\u7ec4\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u7edd\u5bf9\u5dee\u5fc5\u987b\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8e limit \u3002\\n\\n\u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u5b50\u6570\u7ec4\uff0c\u5219\u8fd4\u56de 0 \u3002\\n\\n\\n\\n\u793a\u4f8b 1\uff1a\\n\\n\u8f93\u5165\uff1anums = [8,2,4,7], limit = 4\\n\u8f93\u51fa\uff1a2\\n\u89e3\u91ca\uff1a\u6240\u6709\u5b50\u6570\u7ec4\u5982\u4e0b\uff1a\\n[8] \u6700\u5927\u7edd\u5bf9\u5dee |8-8| = 0 <= 4.\\n[8,2] \u6700\u5927\u7edd\u5bf9\u5dee |8-2| = 6 > 4.\\n[8,2,4] \u6700\u5927\u7edd\u5bf9\u5dee |8-2| = 6 > 4.\\n[8,2,4,7] \u6700\u5927\u7edd\u5bf9\u5dee |8-2| = 6 > 4.\\n[2] \u6700\u5927\u7edd\u5bf9\u5dee |2-2| = 0 <= 4.\\n[2,4] \u6700\u5927\u7edd\u5bf9\u5dee |2-4| = 2 <= 4.\\n[2,4,7] \u6700\u5927\u7edd\u5bf9\u5dee |2-7| = 5 > 4.\\n[4] \u6700\u5927\u7edd\u5bf9\u5dee |4-4| = 0 <= 4.\\n[4,7] \u6700\u5927\u7edd\u5bf9\u5dee |4-7| = 3 <= 4.\\n[7] \u6700\u5927\u7edd\u5bf9\u5dee |7-7| = 0 <= 4.\\n\u56e0\u6b64\uff0c\u6ee1\u8db3\u9898\u610f\u7684\u6700\u957f\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a 2 \u3002\\n\u793a\u4f8b 2\uff1a\\n\\n\u8f93\u5165\uff1anums = [10,1,2,4,7,2], limit = 5\\n\u8f93\u51fa\uff1a4\\n\u89e3\u91ca\uff1a\u6ee1\u8db3\u9898\u610f\u7684\u6700\u957f\u5b50\u6570\u7ec4\u662f [2,4,7,2]\uff0c\u5176\u6700\u5927\u7edd\u5bf9\u5dee |2-7| = 5 <= 5 \u3002\\n\u793a\u4f8b 3\uff1a\\n\\n\u8f93\u5165\uff1anums = [4,2,2,2,4,4,2,2], limit = 0\\n\u8f93\u51fa\uff1a3\\n\\n\\n\u63d0\u793a\uff1a\\n\\n1 <= nums.length <= 10^5\\n1 <= nums[i] <= 10^9\\n0 <= limit <= 10^9\\n```\\n\\n## \u5206\u6790\\n\\n1. \u6c42\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u8003\u8651\u6ed1\u52a8\u7a97\u53e3\\n2. \u6c42\u5dee\u503c\u8003\u8651\u8fde\u7eed\u533a\u95f4\u5185\u7684\u6700\u5927\u3001\u6700\u5c0f\u503c[\u6bcf\u6b21\u66f4\u65b0\u6781\u503c\u4f1a\u628a\u4e0d\u7b26\u5408\u7684\u6570\u636e\u90fd\u6e05\u9664\u51fa\u53bb]\\n3. \u7a97\u53e3\u4e0d\u7b26\u5408\u65f6,\u68c0\u67e5\u6781\u7aef\u503c\u662f\u5426\u5305\u542b\u533a\u95f4\u503c\uff0c\u5982\u679c\u662f\uff0c\u79fb\u9664\u8fd9\u4e2a\u6781\u7aef\u503c\u961f\u5934\\n\\n## \u89e3\u9898\u601d\u8def\\n\\n```text\\n\\n\u6574\u7406\u9898\u76ee\uff1a \u6570\u7ec4 nums\uff0c\u8fde\u7eed\u5143\u7d20\u95f4\u7684\u7edd\u5bf9\u503c <= limit\uff0c\u8981\u6c42\u8fd4\u56de\u7b26\u5408\u7684\u7a97\u53e3\u957f\u5ea6\uff08max\uff09\\n\\n- \ud83d\udc49 \u7edd\u5bf9\u503c\u8003\u8651\u533a\u95f4\u7684\u6700\u5927\u6700\u5c0f\u503c\\n- \ud83d\udc49 \u4e24\u4e2a\u961f\u5217\u6765\u5206\u522b\u8bb0\u5f55\u533a\u95f4\u62e5\u6709\u7684\u6700\u5927\u3001\u6700\u5c0f\u503c\\n- \ud83d\udc49 \u6ca1\u6709\u957f\u5ea6\u9650\u5236\uff0c\u56e0\u6b64\u66f4\u65b0\u7edd\u5bf9\u503c\u6ca1\u6709\u9650\u5b9a\u6761\u4ef6\uff0c\u6bcf\u6b21\u79fb\u52a8\u53f3\u6307\u9488\u90fd\u9700\u8981\u66f4\u65b0\\n- \u5173\u6ce8\uff1a\u4f55\u65f6\u6536\u7f29\u5de6\u6307\u9488\\n- \ud83d\udc49 \u4e00\u65e6\u7edd\u5bf9\u503c > limit \u5c31\u9700\u8981\u6536\u7f29\u5de6\u6307\u9488\\n\\n- \u6536\u7f29\u5de6\u6307\u9488\u6ce8\u610f\u4e8b\u9879\uff1a\\n\\n\u5224\u65ad\u5de6\u6307\u9488\u5bf9\u5e94\u5143\u7d20\u662f\u5426\u5728\u4e24\u4e2a\u961f\u5217\u7684\u961f\u5934\uff0c\u5982\u679c\u5728\uff0c\u5c06\u961f\u5217\u5934\u90e8\u51fa\u961f\uff08\u5355\u8c03\u961f\u5217\u53ea\u5173\u6ce8\u961f\u5934\uff0cnums[l] \u51fa \u73b0\u5728\u961f\u4e2d\u6216\u8005\u961f\u5c3e\uff0c\u4e00\u65e6\u6709\\n\u65b0\u7684\u66f4\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u5165\u961f\uff0c\u968f\u65f6\u4f1a\u88ab\u51fa\u961f\uff0c\u56e0\u6b64\u4e0d\u5173\u6ce8\uff09\\n\\n1. \u904d\u5386\u6574\u4e2a nums\uff0c\u5faa\u73af\u7ed3\u675f\u6761\u4ef6\u662f r < nums.length\\n2. \u5224\u65ad\u6781\u503c\u961f\u5217\u4e2d\u4e0d\u4e3a\u7a7a\uff0c\u5c06\u961f\u5217\u5c3e\u90e8\u5927\u4e8e/\u5c0f\u4e8e nums[r] \u7684\u5143\u7d20\u79fb\u9664\u51fa\u961f\\n3. \u5206\u522b\u5c06 nums[r] \u538b\u5165\u961f\u5217\\n4. while \u5faa\u73af\u8bbe\u7f6e\u6536\u7f29\u5de6\u6307\u9488\u7684\u903b\u8f91 Math.abs(max-min) > k \u65f6\uff0c\u6536\u7f29\u5de6\u6307\u9488 l+\u3010\u6536\u7f29\u4e4b\u524d\u67e5\u770b\u5373\u5c06\u88ab\u6392\u9664\u7684 nums[l] \u662f\u5426\u5728\u6781\u503c\u961f\\n   \u5217\u7684\u961f\u5934\u5f71\u54cd\u7ed3\u679c\uff0c\u5982\u679c\u5728\uff0c\u5c06\u961f\u5217\u961f\u5934\u5143\u7d20\u51fa\u961f\u3011\\n```\\n\\n## \u4f2a\u4ee3\u7801\\n\\n```js\\nnums = [8, 2, 4, 7]\\nlimit = 4\\n```\\n\\n| right | nums\\\\[right] | maxDeque | minDeque          | max-min | left | res | \u5f53\u524d\u7a97\u53e3 |\\n| ----- | ------------ | -------- | ----------------- | ------- | ---- | --- | -------- |\\n| 0     | 8            | \\\\[8]     | \\\\[8]              | 0       | 0    | 1   | \\\\[8]     |\\n| 1     | 2            | \\\\[8,2]   | \\\\[2]              | 6       | 1    | 1   | \\\\[2]     |\\n| 2     | 4            | \\\\[4]     | \\\\[2,4]            | 2       | 1    | 2   | \\\\[2,4]   |\\n| 3     | 7            | \\\\[7]     | \\\\[2,4,7] \u2192 \\\\[2,4] | 5       | 2    | 2   | \\\\[4,7]   |\\n\\n## \u4ee3\u7801\\n\\n```js\\n/**\\n * @param {number[]} nums\\n * @param {number} limit\\n * @return {number}\\n */\\nvar longestSubarray = function (nums, limit) {\\n  /**\\n    \u6574\u7406\u9898\u76ee\uff1a\\n    \u6570\u7ec4 nums\uff0c\u8fde\u7eed\u5143\u7d20\u95f4\u7684\u7edd\u5bf9\u503c <= limit\uff0c\u8981\u6c42\u8fd4\u56de\u7b26\u5408\u7684\u7a97\u53e3\u957f\u5ea6\uff08max\uff09\\n    \ud83d\udc49 \u7edd\u5bf9\u503c\u8003\u8651\u533a\u95f4\u7684\u6700\u5927\u6700\u5c0f\u503c\\n    \ud83d\udc49 \u4e24\u4e2a\u961f\u5217\u6765\u5206\u522b\u8bb0\u5f55\u533a\u95f4\u62e5\u6709\u7684\u6700\u5927\u3001\u6700\u5c0f\u503c\\n    \ud83d\udc49 \u6ca1\u6709\u957f\u5ea6\u9650\u5236\uff0c\u56e0\u6b64\u66f4\u65b0\u7edd\u5bf9\u503c\u6ca1\u6709\u9650\u5b9a\u6761\u4ef6\uff0c\u6bcf\u6b21\u79fb\u52a8\u53f3\u6307\u9488\u90fd\u9700\u8981\u66f4\u65b0\\n    \u5173\u6ce8\uff1a\u4f55\u65f6\u6536\u7f29\u5de6\u6307\u9488 \ud83d\udc49 \u4e00\u65e6\u7edd\u5bf9\u503c > limit \u5c31\u9700\u8981\u6536\u7f29\u5de6\u6307\u9488\\n    \u6536\u7f29\u5de6\u6307\u9488\u6ce8\u610f\u4e8b\u9879\uff1a\\n    \u5224\u65ad\u5de6\u6307\u9488\u5bf9\u5e94\u5143\u7d20\u662f\u5426\u5728\u4e24\u4e2a\u961f\u5217\u7684\u961f\u5934\uff0c\u5982\u679c\u5728\uff0c\u5c06\u961f\u5217\u5934\u90e8\u51fa\u961f\uff08\u5355\u8c03\u961f\u5217\u53ea\u5173\u6ce8\u961f\u5934\uff0cnums[l] \u51fa\u73b0\u5728\u961f\u4e2d\u6216\u8005\u961f\u5c3e\uff0c\u4e00\u65e6\u6709\u65b0\u7684\u66f4\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u5165\u961f\uff0c\u968f\u65f6\u4f1a\u88ab\u51fa\u961f\uff0c\u56e0\u6b64\u4e0d\u5173\u6ce8\uff09\\n\\n    1. \u904d\u5386\u6574\u4e2a nums\uff0c\u5faa\u73af\u7ed3\u675f\u6761\u4ef6\u662f r < nums.length\\n    2. \u5224\u65ad\u6781\u503c\u961f\u5217\u4e2d\u4e0d\u4e3a\u7a7a\uff0c\u5c06\u961f\u5217\u5c3e\u90e8\u5927\u4e8e/\u5c0f\u4e8e nums[r] \u7684\u5143\u7d20\u79fb\u9664\u51fa\u961f\\n    2. \u5206\u522b\u5c06 nums[r] \u538b\u5165\u961f\u5217\\n    3. while \u5faa\u73af\u8bbe\u7f6e\u6536\u7f29\u5de6\u6307\u9488\u7684\u903b\u8f91 Math.abs(max-min) > k \u65f6\uff0c\u6536\u7f29\u5de6\u6307\u9488 l+\u3010\u6536\u7f29\u4e4b\u524d\u67e5\u770b\u5373\u5c06\u88ab\u6392\u9664\u7684 nums[l] \u662f\u5426\u5728\u6781\u503c\u961f\u5217\u7684\u961f\u5934\u5f71\u54cd\u7ed3\u679c\uff0c\u5982\u679c\u5728\uff0c\u5c06\u961f\u5217\u961f\u5934\u5143\u7d20\u51fa\u961f\u3011 \\n    */\\n  let l = 0\\n  let r = 0\\n  let queueMax = []\\n  let queueMin = []\\n\\n  let res = 0\\n  while (r < nums.length) {\\n    while (queueMax.length && nums[r] > queueMax[queueMax.length - 1]) {\\n      queueMax.pop()\\n    }\\n    queueMax.push(nums[r])\\n\\n    while (queueMin.length && nums[r] < queueMin[queueMin.length - 1]) {\\n      queueMin.pop()\\n    }\\n\\n    queueMin.push(nums[r])\\n\\n    // l \u6536\u7f29\u903b\u8f91\\n    if (queueMax.length && queueMin.length && Math.abs(queueMax[0] - queueMin[0]) > limit) {\\n      // \u6536\u7f29\u4e4b\u524d\u68c0\u67e5(\u68c0\u67e5\u4e00\u6b21\u5c31\u884c\uff0c\u4e0d\u9700\u8981\u7528 while)\\n      if (queueMax[0] == nums[l]) {\\n        queueMax.shift()\\n      }\\n      if (queueMin[0] == nums[l]) {\\n        queueMin.shift()\\n      }\\n\\n      // \u6536\u7f29\u533a\u95f4\\n      l++\\n    }\\n\\n    res = Math.max(r - l + 1, res)\\n    r++\\n  }\\n  console.log({ res })\\n  return res\\n}\\n```\\n\\n## \u63a8\u8350\u5173\u8054\uff08easy -> hard\uff09\\n\\n- 1004 \u57fa\u7840\u6ed1\u52a8\u7a97\u53e3\\n- 239 \u5355\u8c03\u961f\u5217\\n- 1438 \u6ed1\u52a8\u7a97\u53e3 + \u5355\u8c03\u961f\u5217\\n- 1696/862 \u5355\u8c03\u961f\u5217\u4f18\u5316 DP\\n- 480 \u4e2d\u4f4d\u6570\u7a97\u53e3\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\u7ef4\u62a4"},{"id":"longest-ones-1004","metadata":{"permalink":"/algorithm/longest-ones-1004","source":"@site/algorithm/2025-05-12-\u529b\u62631004-\u6700\u5927\u8fde\u7eed1\u7684\u4e2a\u6570III.md","title":"\u529b\u62631004-\u6700\u5927\u8fde\u7eed1\u7684\u4e2a\u6570 \u2162","description":"\u539f\u9898","date":"2025-05-12T00:00:00.000Z","tags":[{"inline":true,"label":"algorithm","permalink":"/algorithm/tags/algorithm"},{"inline":true,"label":"leetcode","permalink":"/algorithm/tags/leetcode"},{"inline":true,"label":"longestOnes","permalink":"/algorithm/tags/longest-ones"}],"readingTime":4.15,"hasTruncateMarker":false,"authors":[{"name":"Yana Ching","title":"Front End Engineer","url":"https://yamadev.github.io/","imageURL":"https://github.com/yanadev.png","key":"yana","page":null}],"frontMatter":{"slug":"longest-ones-1004","title":"\u529b\u62631004-\u6700\u5927\u8fde\u7eed1\u7684\u4e2a\u6570 \u2162","authors":"yana","tags":["algorithm","leetcode","longestOnes"]},"unlisted":false,"prevItem":{"title":"\u529b\u62631438-\u7edd\u5bf9\u5dee\u4e0d\u8d85\u8fc7\u9650\u5236\u7684\u6700\u957f\u8fde\u7eed\u5b50\u6570\u7ec4","permalink":"/algorithm/longest-subarray-1438"},"nextItem":{"title":"intro","permalink":"/algorithm/intro"}},"content":"## \u539f\u9898\\n\\n```text\\n\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 k\uff0c\u5047\u8bbe\u6700\u591a\u53ef\u4ee5\u7ffb\u8f6c k \u4e2a 0 \uff0c\u5219\u8fd4\u56de\u6267\u884c\u64cd\u4f5c\u540e \u6570\u7ec4\u4e2d\u8fde\u7eed 1 \u7684\u6700\u5927\u4e2a\u6570 \u3002\\n\\n\\n\\n\u793a\u4f8b 1\uff1a\\n\\n\u8f93\u5165\uff1anums = [1,1,1,0,0,0,1,1,1,1,0], K = 2\\n\u8f93\u51fa\uff1a6\\n\u89e3\u91ca\uff1a[1,1,1,0,0,1,1,1,1,1,1]\\n\u7c97\u4f53\u6570\u5b57\u4ece 0 \u7ffb\u8f6c\u5230 1\uff0c\u6700\u957f\u7684\u5b50\u6570\u7ec4\u957f\u5ea6\u4e3a 6\u3002\\n\u793a\u4f8b 2\uff1a\\n\\n\u8f93\u5165\uff1anums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3\\n\u8f93\u51fa\uff1a10\\n\u89e3\u91ca\uff1a[0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]\\n\u7c97\u4f53\u6570\u5b57\u4ece 0 \u7ffb\u8f6c\u5230 1\uff0c\u6700\u957f\u7684\u5b50\u6570\u7ec4\u957f\u5ea6\u4e3a 10\u3002\\n\\n\\n\u63d0\u793a\uff1a\\n\\n1 <= nums.length <= 105\\nnums[i] \u4e0d\u662f 0 \u5c31\u662f 1\\n0 <= k <= nums.length\\n```\\n\\n## \u5206\u6790\\n\\n1. \u95ee\u9898\u8f6c\u6362\\n\\n```text\\n\u53ef\u4ee5\u7ffb\u8f6c k \u4e2a 0 \u540e\u6570\u7ec4\u4e2d\u6700\u957f\u7684\u8fde\u7eed 1 \u7684\u957f\u5ea6\\n\ud83d\udc47\\n\u53ea\u80fd\u5305\u542b k \u4e2a 0 \u7684\u8fde\u7eed 1 \u7684\u6570\u7ec4\\n\ud83d\udc47\\n\u6ed1\u52a8\u7a97\u53e3\u8bb0\u5f55\u5305\u542b k \u4e2a 0 \u7684\u7ed3\u679c\u96c6\uff0c\u8fd4\u56de\u6700\u957f\u7684\u7ed3\u679c\u96c6\u7684\u957f\u5ea6\\n\\n```\\n\\n## \u89e3\u9898\u601d\u8def\\n\\n1. \u8fde\u7eed + \u6700\u957f ==> \u8003\u8651\u6ed1\u52a8\u7a97\u53e3\\n2. \u7ffb\u8f6c k \u4e2a 0 \u4e3a 1 \u5f97\u5230\u8fde\u7eed 1 \u7684\u6700\u957f\u957f\u5ea6 ==> \\"\u5305\u542b k \u4e2a 0 \u7684\u6700\u957f 1 \u7ec4\u6210\u7684\u6700\u957f\u957f\u5ea6\\"\\n   - \u4e00\u6b21\u904d\u5386\uff0c\u9047\u5230 1 \u53f3\u7aef\u6269\u5f20 r++\\n   - \u9047\u5230 0 \u8bb0\u5f55 0 \u7684\u4e2a\u6570\\n   - \u4e00\u65e6 0 \u7684\u4e2a\u6570\u8d85\u8fc7 k\uff08count > k\uff09\uff0c\u6536\u7f29\u5de6\u8fb9\uff08\u6536\u7f29\u4e4b\u524d\u5de6\u7aef\u5143\u7d20\u4e3a 0\uff0c\u66f4\u65b0\u7a97\u53e3\u4e2d 0 \u7684\u4e2a\u6570 - 1 \uff09\\n   - \u6bcf\u6b21\u79fb\u52a8\u53f3\u6307\u9488\u4e4b\u540e\u90fd\u8bb0\u5f55\u5f53\u524d\u7a97\u53e3\u7684\u957f\u5ea6\uff08\u7ed3\u679c\u7684\u5b50\u96c6\uff09\\n\\n## \u4f2a\u4ee3\u7801\\n\\n## \u4ee3\u7801\\n\\n### for \u5faa\u73af\\n\\n```js\\n/**\\n * @param {number[]} nums\\n * @param {number} k\\n * @return {number}\\n */\\nvar longestOnes = function (nums, k) {\\n  // \u7ffb\u8f6c k \u4e2a 0 \u5f97\u5230\u6700\u957f\u8fde\u7eed 1 \u7684\u957f\u5ea6\\n  // \u628a\u6700\u957f\u8fde\u7eed1\u770b\u4f5c\u7a97\u53e3\uff0c\u5185\u90e8\u53ea\u80fd\u5305\u542b <= k \u4e2a\uff0c\u5426\u5219\u7a97\u53e3\u4e0d\u5408\u6cd5\uff08>k)\uff0c\u5c31\u9700\u8981\u6536\u7f29\u5de6\u533a\u95f4\\n  // \u76f4\u5230\u5185\u90e80\u7684\u4e2a\u6570 < k\u4e4b\u524d\uff0c\u90fd\u4e00\u76f4\u6536\u7f29\u5de6\u533a\u95f4\\n  // \u6bcf\u6b21\u79fb\u52a8\u53f3\u6307\u9488\u90fd\u8bb0\u5f55\u5f53\u524d\u8fde\u7eed 1 \u7684\u957f\u5ea6\\n\\n  let l = 0\\n  let count = 0\\n  let len = 0\\n  for (let r = 0; r < nums.length; r++) {\\n    if (nums[r] == 0) {\\n      // \u53f3\u6307\u9488\u904d\u5386\u7684\u65f6\u5019\u9047\u5230 0 \u5c31\u66f4\u65b0\u5f53\u524d\u7a97\u53e3\u4e2d 0 \u7684\u4e2a\u6570\\n      count++\\n    }\\n    while (count > k) {\\n      // \u7a97\u53e3\u4e2d 0 \u7684\u4e2a\u6570\u8d85\u8fc7\u9898\u76ee\u9650\u5236\u7684 k \uff0c\u6536\u7f29\u5de6\u533a\u95f4\u786e\u4fdd\u7a97\u53e3\u662f\u5408\u6cd5\u7684\\n      if (nums[l] == 0) count--\\n      // \u53f3\u79fb\u5de6\u6307\u9488\\n      l++\\n    }\\n    // \u6bcf\u6b21\u79fb\u52a8\u53f3\u6307\u9488\u7684\u65f6\u5019\uff0c\u8bb0\u5f55\u5f53\u524d\u7a97\u53e3\u7684\u957f\u5ea6\\n    len = Math.max(r - l + 1, len)\\n  }\\n  return len\\n}\\n```\\n\\n### while \u5faa\u73af\\n\\n```js\\n/**\\n * @param {number[]} nums\\n * @param {number} k\\n * @return {number}\\n */\\nvar longestOnes = function (nums, k) {\\n  // \u7ffb\u8f6c k \u4e2a 0 \u5f97\u5230\u6700\u957f\u8fde\u7eed 1 \u7684\u957f\u5ea6\\n  // \u628a\u6700\u957f\u8fde\u7eed1\u770b\u4f5c\u7a97\u53e3\uff0c\u5185\u90e8\u53ea\u80fd\u5305\u542b <= k \u4e2a\uff0c\u5426\u5219\u7a97\u53e3\u4e0d\u5408\u6cd5\uff08>k)\uff0c\u5c31\u9700\u8981\u6536\u7f29\u5de6\u533a\u95f4\\n  // \u76f4\u5230\u5185\u90e80\u7684\u4e2a\u6570 < k\u4e4b\u524d\uff0c\u90fd\u4e00\u76f4\u6536\u7f29\u5de6\u533a\u95f4\\n  // \u6bcf\u6b21\u79fb\u52a8\u53f3\u6307\u9488\u90fd\u8bb0\u5f55\u5f53\u524d\u8fde\u7eed 1 \u7684\u957f\u5ea6\\n\\n  let l = 0\\n  let r = 0\\n  let count = 0\\n  let len = 0\\n  while (r < nums.length) {\\n    // \u9047\u5230 0 \u66f4\u65b0 count\\n    if (nums[r] == 0) count++\\n    // \u4e00\u65e6 count > k \u6536\u7f29\u5de6\u6307\u9488\\n    while (count > k) {\\n      // \u6536\u7f29\u4e4b\u524d\u5224\u65ad\uff0c\u5373\u5c06\u88ab\u6392\u9664\u7684\u5143\u7d20\u662f\u5426\u4e3a0\uff0c\u662f\u5219\u66f4\u65b0 count\\n      if (nums[l] == 0) count--\\n      l++\\n    }\\n    // \u79fb\u52a8\u53f3\u6307\u9488\u4e4b\u524d\u8bb0\u5f55\u5f53\u524d\u533a\u95f4\u7684\u957f\u5ea6\\n    len = Math.max(len, r - l + 1)\\n    // \u6269\u5f20\u53f3\u533a\u95f4\\n    r++\\n  }\\n  console.log({ len })\\n  return len\\n}\\n```"},{"id":"intro","metadata":{"permalink":"/algorithm/intro","source":"@site/algorithm/2024-10-09-intro.md","title":"intro","description":"\u6211\u7684\u7b97\u6cd5\u7ec3\u4e60\u5c0f\u8bb0","date":"2024-10-09T00:00:00.000Z","tags":[],"readingTime":0.045,"hasTruncateMarker":false,"authors":[{"name":"Yana Ching","title":"Front End Engineer","url":"https://yamadev.github.io/","imageURL":"https://github.com/yanadev.png","key":"yana","page":null}],"frontMatter":{"slug":"intro","title":"intro","authors":"yana","tags":[]},"unlisted":false,"prevItem":{"title":"\u529b\u62631004-\u6700\u5927\u8fde\u7eed1\u7684\u4e2a\u6570 \u2162","permalink":"/algorithm/longest-ones-1004"},"nextItem":{"title":"\u529b\u626335-\u641c\u7d22\u63d2\u5165\u4f4d\u7f6e[\u4e8c\u5206\u6cd5]","permalink":"/algorithm/binary-search-35"}},"content":"## \u6211\u7684\u7b97\u6cd5\u7ec3\u4e60\u5c0f\u8bb0"},{"id":"binary-search-35","metadata":{"permalink":"/algorithm/binary-search-35","source":"@site/algorithm/2024-10-09-\u529b\u626335-\u641c\u7d22\u63d2\u5165\u4f4d\u7f6e.md","title":"\u529b\u626335-\u641c\u7d22\u63d2\u5165\u4f4d\u7f6e[\u4e8c\u5206\u6cd5]","description":"\u539f\u9898","date":"2024-10-09T00:00:00.000Z","tags":[{"inline":true,"label":"algorithm","permalink":"/algorithm/tags/algorithm"},{"inline":true,"label":"leetcode","permalink":"/algorithm/tags/leetcode"},{"inline":true,"label":"BinarySearch","permalink":"/algorithm/tags/binary-search"},{"inline":true,"label":"BS","permalink":"/algorithm/tags/bs"}],"readingTime":3.285,"hasTruncateMarker":false,"authors":[{"name":"Yana Ching","title":"Front End Engineer","url":"https://yamadev.github.io/","imageURL":"https://github.com/yanadev.png","key":"yana","page":null}],"frontMatter":{"slug":"binary-search-35","title":"\u529b\u626335-\u641c\u7d22\u63d2\u5165\u4f4d\u7f6e[\u4e8c\u5206\u6cd5]","authors":"yana","tags":["algorithm","leetcode","BinarySearch","BS"]},"unlisted":false,"prevItem":{"title":"intro","permalink":"/algorithm/intro"},"nextItem":{"title":"\u529b\u626334-\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e[\u4e8c\u5206\u6cd5]","permalink":"/algorithm/binary-search-34"}},"content":"## \u539f\u9898\\n\\n```text\\n\u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u6570\u7ec4\u548c\u4e00\u4e2a\u76ee\u6807\u503c\uff0c\u5728\u6570\u7ec4\u4e2d\u627e\u5230\u76ee\u6807\u503c\uff0c\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002\u5982\u679c\u76ee\u6807\u503c\u4e0d\u5b58\u5728\u4e8e\u6570\u7ec4\u4e2d\uff0c\u8fd4\u56de\u5b83\u5c06\u4f1a\u88ab\u6309\u987a\u5e8f\u63d2\u5165\u7684\u4f4d\u7f6e\u3002\\n\\n\u8bf7\u5fc5\u987b\u4f7f\u7528\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(log n) \u7684\u7b97\u6cd5\u3002\\n\\n\\n\u793a\u4f8b 1:\\n\\n> \u8f93\u5165: nums = [1,3,5,6], target = 5\\n> \u8f93\u51fa: 2\\n\\n\u793a\u4f8b 2:\\n\\n> \u8f93\u5165: nums = [1,3,5,6], target = 2\\n> \u8f93\u51fa: 1\\n\\n\u793a\u4f8b 3:\\n\\n> \u8f93\u5165: nums = [1,3,5,6], target = 7\\n> \u8f93\u51fa: 4\\n```\\n\\n:::tip\\n\\n- `1 <= nums.length <= 10\u2074`\\n- `-10\u2074 <= nums[i] <= 10\u2074`\\n- nums \u4e3a \u65e0\u91cd\u590d\u5143\u7d20 \u7684 \u5347\u5e8f \u6392\u5217\u6570\u7ec4\\n- `-10\u2074 <= target <= 10\u2074`\\n\\n:::\\n\\n## \u89e3\u9898\u601d\u8def\\n\\n**\u5df2\u77e5**\\n\\n- \u6709\u5e8f\u6570\u7ec4\\n- \u76ee\u6807\u503c target\\n\\n**\u6c42**\\n\\n- \u82e5\u6709 target\uff0c\u8fd4\u56de\u7d22\u5f15\\n- \u82e5\u65e0 target \u8fd4\u56de\u987a\u5e8f\u63d2\u5165\u4f4d\u7f6e\uff08right \u4f4d\u7f6e\uff09\\n\\n**\u7a7a\u72b6\u6001\u5904\u7406**\\n\\n- \u7a7a\u6570\u7ec4\uff0c\u8fd4\u56de 0\\n\\n## \u89e3\u9898\u8fc7\u7a0b\\n\\n1. \u521d\u59cb\u5316\u5de6\u53f3\u6307\u9488\uff1aleft = 0, right = len(nums) - 1\\n   - \uff08\u5047\u8bbe\u533a\u95f4\u4e3a `[l, r]` \u5de6\u53f3\u5747\u95ed\u5408\u533a\u95f4\uff0c\u7ed3\u675f\u5916\u5c42\u5faa\u73af\u65f6: l > r\uff0c\u5f53 target \u6bd4 l \u5c0f\u7684\u65f6\u5019\uff0cl \u6307\u5411\u6570\u7ec4\u5934\uff1b\u5f53 target < r\\n     \u65f6\uff0cl \u6307\u5411\u6570\u7ec4\u5c3e\uff09\\n   - \uff08\u5047\u8bbe\u533a\u95f4\u4e3a `[l, r)` \u5de6\u95ed\u53f3\u5f00\u533a\u95f4\uff0c\u7ed3\u675f\u5916\u5c42\u5faa\u73af\u65f6: l == r\uff0c\u76f4\u63a5\u8fd4\u56de r \u6216\u8005 l \u90fd\u884c \uff09\\n2. \u7a7a\u6570\u7ec4\uff0c\u8fd4\u56de 0\\n3. \u4e8c\u5206\u67e5\u627e target\\n   - \u627e\u5230\u5339\u914d\u7684 target\uff0c\u8fd4\u56de target \u7d22\u5f15\\n   - \u627e\u4e0d\u5230\u5339\u914d\u7684 target\uff0c\u8fd4\u56de right \u6307\u9488\u4f4d\u7f6e\\n\\n## \u590d\u6742\u5ea6\\n\\n## \u4ee3\u7801\\n\\n### [l,r]\\n\\n```javascript\\n/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number}\\n */\\nvar searchInsert = function (nums, target) {\\n  // [l, r]\\n  const n = nums.length\\n  let l = 0\\n  let r = n - 1\\n  // l <= r \u6761\u4ef6\uff0c\u5faa\u73af\u7ed3\u675f\u7684\u65f6\u5019 r > l,\u6b64\u65f6 r \u4e3a\u5de6\u8fb9\u754c\uff0c\u9002\u5408\u5904\u7406\u63d2\u5165\u5c3e\u90e8\u7684\u64cd\u4f5c\u548c\u7a7a\u6570\u7ec4\u7684\u60c5\u51b5\\n  // l < r \u6761\u4ef6\uff0c\u5faa\u73af\u7ed3\u675f\u7684\u65f6\u5019 r == l,\u6b64\u65f6\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\\n  while (l <= r) {\\n    mid = (l + r) >>> 1\\n    if (target === nums[mid]) {\\n      return mid\\n    } else if (target > nums[mid]) {\\n      l = mid + 1\\n    } else {\\n      r = mid - 1\\n    }\\n  }\\n  return r + 1\\n}\\n```\\n\\n### `[l,r)`\\n\\n```javascript\\n/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number}\\n */\\nvar searchInsert = function (nums, target) {\\n  // [l, r]\\n  const n = nums.length\\n  let l = 0\\n  let r = n\\n  // l <= r \u6761\u4ef6\uff0c\u5faa\u73af\u7ed3\u675f\u7684\u65f6\u5019 r > l,\u6b64\u65f6 r \u4e3a\u5de6\u8fb9\u754c\uff0c\u9002\u5408\u5904\u7406\u63d2\u5165\u5c3e\u90e8\u7684\u64cd\u4f5c\u548c\u7a7a\u6570\u7ec4\u7684\u60c5\u51b5\\n  // l < r \u6761\u4ef6\uff0c\u5faa\u73af\u7ed3\u675f\u7684\u65f6\u5019 r == l,\u6b64\u65f6\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\\n  while (l < r) {\\n    mid = (l + r) >>> 1\\n    if (target === nums[mid]) {\\n      return mid\\n    } else if (target > nums[mid]) {\\n      l = mid + 1\\n    } else {\\n      r = mid\\n    }\\n  }\\n  return r\\n  // return l \u90fd\u662f\u53ef\u4ee5\u7684\\n}\\n```"},{"id":"binary-search-34","metadata":{"permalink":"/algorithm/binary-search-34","source":"@site/algorithm/2024-10-08-\u529b\u626334-\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e.md","title":"\u529b\u626334-\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e[\u4e8c\u5206\u6cd5]","description":"\u539f\u9898","date":"2024-10-08T00:00:00.000Z","tags":[{"inline":true,"label":"algorithm","permalink":"/algorithm/tags/algorithm"},{"inline":true,"label":"leetcode","permalink":"/algorithm/tags/leetcode"},{"inline":true,"label":"BinarySearch","permalink":"/algorithm/tags/binary-search"},{"inline":true,"label":"BS","permalink":"/algorithm/tags/bs"}],"readingTime":4.74,"hasTruncateMarker":false,"authors":[{"name":"Yana Ching","title":"Front End Engineer","url":"https://yamadev.github.io/","imageURL":"https://github.com/yanadev.png","key":"yana","page":null}],"frontMatter":{"slug":"binary-search-34","title":"\u529b\u626334-\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e[\u4e8c\u5206\u6cd5]","authors":"yana","tags":["algorithm","leetcode","BinarySearch","BS"]},"unlisted":false,"prevItem":{"title":"\u529b\u626335-\u641c\u7d22\u63d2\u5165\u4f4d\u7f6e[\u4e8c\u5206\u6cd5]","permalink":"/algorithm/binary-search-35"},"nextItem":{"title":"\u529b\u6263704-\u4e8c\u5206\u67e5\u627e","permalink":"/algorithm/binary-search"}},"content":"## \u539f\u9898\\n\\n```text\\n\u7ed9\u4f60\u4e00\u4e2a\u6309\u7167\u975e\u9012\u51cf\u987a\u5e8f\u6392\u5217\u7684\u6574\u6570\u6570\u7ec4 nums\uff0c\u548c\u4e00\u4e2a\u76ee\u6807\u503c target\u3002\\n\\n\u8bf7\u4f60\u627e\u51fa\u7ed9\u5b9a\u76ee\u6807\u503c\u5728\u6570\u7ec4\u4e2d\u7684\u5f00\u59cb\u4f4d\u7f6e\u548c\u7ed3\u675f\u4f4d\u7f6e\u3002\\n\\n\u5982\u679c\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u76ee\u6807\u503c target\uff0c\u8fd4\u56de [-1, -1]\u3002\\n\\n\u4f60\u5fc5\u987b\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(log n) \u7684\u7b97\u6cd5\u89e3\u51b3\u6b64\u95ee\u9898\u3002\\n\\n\\n\u793a\u4f8b 1\uff1a\\n\\n> \u8f93\u5165\uff1anums = [5,7,7,8,8,10], target = 8\\n> \u8f93\u51fa\uff1a[3,4]\\n\\n\u793a\u4f8b 2\uff1a\\n\\n> \u8f93\u5165\uff1anums = [5,7,7,8,8,10], target = 6\\n> \u8f93\u51fa\uff1a[-1,-1]\\n\\n\u793a\u4f8b 3\uff1a\\n\\n> \u8f93\u5165\uff1anums = [], target = 0\\n> \u8f93\u51fa\uff1a[-1,-1] :::tip\\n```\\n\\n:::tip\\n\\n- `0 <= nums.length <= 10\u2075`\\n\\n- `-10\u2079 <= nums[i] <= 10\u2079`\\n\\n- nums \u662f\u4e00\u4e2a\u975e\u9012\u51cf\u6570\u7ec4\\n\\n- `-10\u2079 <= target <= 10\u2079`\\n\\n:::\\n\\n## \u89e3\u9898\u601d\u8def\\n\\n**\u5df2\u77e5\uff1a**\\n\\n1. \u6570\u7ec4**\u6709\u5e8f** - \u5b9a\u4f4d `\u4e8c\u5206\u6cd5`\\n2. nums\\n3. target \u503c\\n4. \u6709\u53ef\u80fd\u6709**\u91cd\u590d\u5143\u7d20**\\n\\n**\u6c42\uff1a**\\n\\n1. target \u51fa\u73b0\u7684**\u7b2c\u4e00\u4e2a**\u51fa\u73b0\u7684\u4f4d\u7f6e\\n2. target \u51fa\u73b0\u7684**\u6700\u540e\u4e00\u4e2a**\u51fa\u73b0\u4f4d\u7f6e\\n\\n**\u5bfb\u627e\u6700\u5de6\uff1a**\\n\\n1.  \u627e\u5230 mid \u7b26\u5408 target \u4e4b\u540e\uff0c\u66f4\u65b0 LBoder \u4e3a mid\\n2.  \u5c06 **r \u79fb\u52a8\u5230 mid \u5de6\u8fb9\uff0c\u5bfb\u627e\u66f4\u5de6\u4fa7\u7684 target**\\n3.  \u6709\u5c31\u7ee7\u7eed\u6536\u7f29\uff0c\u6ca1\u6709\u76f4\u63a5\u8fd4\u56de -1\\n\\n**\u5bfb\u627e\u6700\u53f3\uff1a**\\n\\n1.  \u627e\u5230 mid \u7b26\u5408 target \u4e4b\u540e\uff0c\u66f4\u65b0 RBoder \u4e3a mid\\n2.  \u5c06 **l \u79fb\u52a8\u5230 mid \u53f3\u8fb9\uff0c\u5bfb\u627e\u66f4\u53f3\u4fa7\u7684 target**\\n3.  \u6709\u5c31\u7ee7\u7eed\u6536\u7f29\uff0c\u6ca1\u6709\u76f4\u63a5\u8fd4\u56de -1\\n\\n**\u660e\u786e\u9690\u85cf\u6761\u4ef6\uff1a**\\n\\n1. \u82e5\u627e\u4e0d\u5230 first\uff0c\u90a3\u4e48 last \u4e5f\u662f\u4e0d\u5b58\u5728\uff0c\u56e0\u6b64**\u9996\u6b21\u5224\u65ad first \u5b58\u5728\u4e0e\u5426\u518d\u51b3\u5b9a\u662f\u5426\u5bfb\u627e last**\\n2. \u5f53\u80fd\u627e\u5230 first \u65f6\uff0clast \u6700\u5c0f\u4e5f\u53ea\u80fd\u662f first\uff0c\u4e0d\u4f1a\u51fa\u73b0 -1\\n3. \u68c0\u67e5\u7a7a\u6570\u7ec4\uff0c\u7a7a\u6570\u7ec4\u76f4\u63a5\u8fd4\u56de [-1, -1]\\n\\n## \u89e3\u9898\u8fc7\u7a0b\\n\\n1. \u521d\u59cb\u5316\u5de6\u53f3\u6307\u9488\uff1aleft = 0, right = len(nums) - 1\\n2. \u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\\n   - \u5982\u679c\u627e\u5230\u5339\u914d\u7684 target\uff0c\u5c06 right \u6307\u9488\u79fb\u5230\u4e2d\u70b9\u7684\u5de6\u4fa7\u7ee7\u7eed\u67e5\u627e\uff0c\u76f4\u5230\u9501\u5b9a\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684 target\u3002\\n3. \u4e8c\u5206\u67e5\u627e\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\\n   - \u5982\u679c\u627e\u5230\u5339\u914d\u7684 target\uff0c\u5c06 left \u6307\u9488\u79fb\u5230\u4e2d\u70b9\u7684\u53f3\u4fa7\u7ee7\u7eed\u67e5\u627e\uff0c\u76f4\u5230\u9501\u5b9a\u6700\u540e\u4e00\u4e2a\u51fa\u73b0\u7684 target\u3002\\n4. \u8fd4\u56de\u7ed3\u679c\uff1a\u5982\u679c\u6ca1\u6709\u627e\u5230\u76ee\u6807\u503c\uff0c\u8fd4\u56de [-1, -1]\\n\\n## \u590d\u6742\u5ea6\\n\\n- \u65f6\u95f4\u590d\u6742\u5ea6: O(logN)\\n\\n- \u7a7a\u95f4\u590d\u6742\u5ea6: O(1)\\n\\n## \u4ee3\u7801\\n\\n```js\\n/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number[]}\\n */\\nvar searchRange = function (nums, target) {\\n  // \u76f4\u63a5\u68c0\u67e5\u7a7a\u6570\u7ec4\\n  const n = nums.length\\n  if (n === 0) return [-1, -1]\\n\\n  function getFirst(nums, target, n) {\\n    // [l, r]\\n    let l = 0\\n    let r = n - 1\\n    let first = -1\\n    while (l <= r) {\\n      const mid = (l + r) >>> 1\\n      // \u627e\u5230 target \u4f4d\u7f6e\u540e\u66f4\u65b0 first \u4f4d\u7f6e\uff0c\u6536\u7f29\u53f3\u8fb9\u754c\uff0c\u7ee7\u7eed\u5411mid\u5de6\u8fb9\u5bfb\u627e\u662f\u5426\u6709\u66f4\u5de6\u503c\\n      if (target === nums[mid]) {\\n        first = mid\\n        r = mid - 1\\n      } else if (target > nums[mid]) {\\n        l = mid + 1\\n      } else {\\n        r = mid - 1\\n      }\\n    }\\n    return first\\n  }\\n\\n  function getLast(nums, target, n) {\\n    // [l, r]\\n    let l = 0\\n    let r = n - 1\\n    let last = -1\\n    while (l <= r) {\\n      const mid = (l + r) >>> 1\\n      // \u627e\u5230 target \u4f4d\u7f6e\u540e\u66f4\u65b0 last \u4f4d\u7f6e\uff0c\u6536\u7f29\u5de6\u8fb9\u754c\uff0c\u7ee7\u7eed\u5411mid\u53f3\u8fb9\u5bfb\u627e\u662f\u5426\u6709\u66f4\u53f3\u503c\\n      if (target === nums[mid]) {\\n        last = mid\\n        l = mid + 1\\n      } else if (target > nums[mid]) {\\n        l = mid + 1\\n      } else {\\n        r = mid - 1\\n      }\\n    }\\n    return last\\n  }\\n  let first = getFirst(nums, target, n)\\n  // \u5982\u679c\u627e\u4e0d\u5230\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8bf4\u660e\u6570\u7ec4\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e5f\u662f\u627e\u4e0d\u5230\u7684\\n  // \u5faa\u73af\u6761\u4ef6\u4e0a\u7406\u89e3\u5219\u662f \u4e00\u65e6 left \u4e3a -1\u4e86\uff0c\u5728\u5faa\u73af\u6761\u4ef6 left <= right\u8fd9\u4e2a\u4e0a\uff0c right\u4e5f\u53ea\u80fd\u662f -1 \u4e86\\n  if (first === -1) return [-1, -1]\\n  // \u4e00\u65e6\u80fd\u591f\u627e\u5230\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48 last \u6700\u5c0f\u4e5f\u53ea\u80fd\u662f first\\n  // \u5faa\u73af\u6761\u4ef6\u4e0a\u7406\u89e3\u5219\u662f \u4e00\u65e6 left > 0 \u4e86\uff0c\u5728\u5faa\u73af\u6761\u4ef6 left <= right\u8fd9\u4e2a\u4e0a\uff0c right\u4e5f\u53ea\u80fd\u662f > 0 \u4e86\\n  let last = getLast(nums, target, n)\\n  return [first, last]\\n}\\n```"},{"id":"binary-search","metadata":{"permalink":"/algorithm/binary-search","source":"@site/algorithm/2024-10-08-\u529b\u6263704-\u4e8c\u5206\u67e5\u627e.md","title":"\u529b\u6263704-\u4e8c\u5206\u67e5\u627e","description":"\u4e8c\u5206\u6cd5","date":"2024-10-08T00:00:00.000Z","tags":[{"inline":true,"label":"algorithm","permalink":"/algorithm/tags/algorithm"},{"inline":true,"label":"leetcode","permalink":"/algorithm/tags/leetcode"},{"inline":true,"label":"BinarySearch","permalink":"/algorithm/tags/binary-search"},{"inline":true,"label":"BS","permalink":"/algorithm/tags/bs"}],"readingTime":8.485,"hasTruncateMarker":true,"authors":[{"name":"Yana Ching","title":"Front End Engineer","url":"https://yamadev.github.io/","imageURL":"https://github.com/yanadev.png","key":"yana","page":null}],"frontMatter":{"slug":"binary-search","title":"\u529b\u6263704-\u4e8c\u5206\u67e5\u627e","authors":"yana","tags":["algorithm","leetcode","BinarySearch","BS"]},"unlisted":false,"prevItem":{"title":"\u529b\u626334-\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e[\u4e8c\u5206\u6cd5]","permalink":"/algorithm/binary-search-34"},"nextItem":{"title":"\u529b\u6263209 - \u957f\u5ea6\u6700\u5c0f\u5b50\u6570\u7ec4[\u6ed1\u52a8\u7a97\u53e3]","permalink":"/algorithm/minimun-size-subarray-sum"}},"content":"## \u4e8c\u5206\u6cd5\\n\\n1. \u9002\u7528\u4e8e**\u6709\u5e8f**\u6570\u636e\u96c6\u5408\u6216\u8005**\u5355\u8c03**\u95ee\u9898\uff0c\u7528\u4e8e\u5feb\u901f\u67e5\u627e target\u3001min\u3001max\\n2. **\u4e0d\u9002\u5408**\u52a8\u6001\u6570\u636e\u7ed3\u6784\uff08\u94fe\u8868\u3001\u6811\uff09\u3001\u5c0f\u89c4\u6a21\u6570\u636e\\n\\n[\u529b\u6263 704-\u4e8c\u5206\u6cd5 \ud83d\udd17](https://leetcode.cn/problems/binary-search/)\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u4f7f\u7528\u8303\u56f4\\n\\n1. \u5728\u5df2\u6392\u5e8f\u7684\u6570\u7ec4\u6216\u94fe\u8868\u4e2d\u67e5\u627e **\u76ee\u6807\u503c\u7684\u4f4d\u7f6e** \u6216 **\u9a8c\u8bc1\u8be5\u503c\u662f\u5426\u5b58\u5728**\\n2. \u533a\u95f4\u5185\u5bfb\u627e\u6700\u5927/\u5c0f\u503c\uff08max/min\uff09\\n\\n## \u9650\u5236\\n\\n1. \u5fc5\u987b\u6709\u5e8f\uff0c\u82e5\u6570\u636e\u65e0\u5e8f\uff0c\u9700\u8981\u5148\u6392\u5e8f\u4f1a\u589e\u52a0\u65f6\u95f4\u590d\u6742\u5ea6\\n2. \u4e0d\u662f\u52a8\u6001\u6570\u636e\u7ed3\u6784\uff08\u94fe\u8868\u3001\u6811\u7b49\uff09\uff0c**\u4e8c\u5206\u6cd5\u8981\u6c42\u76f4\u63a5\u8bbf\u95ee\u4e2d\u95f4\u5143\u7d20**\\n3. \u4e0d\u9002\u5408\u89c4\u6a21\u5c0f\u7684\u96c6\u5408\uff0c**\u5c11\u91cf\u6570\u636e\u7ebf\u6027\u67e5\u627e\u66f4\u52a0\u7b80\u5355\u76f4\u63a5**\\n\\n## \u624b\u5199\u4ee3\u7801\u6ce8\u610f\\n\\n### 1. \u786e\u4fdd\u4e2d\u95f4\u5143\u7d20\u4e0b\u6807\u4e3a\u6574\u578b\uff08integer\uff09\\n\\n### 2. \u660e\u786e\u533a\u95f4\u7684\u5b9a\u4e49\uff0c\u4fdd\u8bc1\u4ee3\u7801\u6574\u4f53\u4fdd\u6301\u8fd9\u4e2a\u533a\u95f4\u539f\u5219\\n\\n### 3. \u5916\u90e8 while \u5faa\u73af\u6761\u4ef6\u6ce8\u610f\u4e0d\u80fd\u8fdd\u53cd\u533a\u95f4\u5b9a\u4e49\\n\\n\u5982\u679c\u5047\u8bbe\u533a\u95f4\u4e3a`[left, right]`\uff0c \u5de6\u53f3\u5747\u95ed\u5408\u7684\u533a\u95f4\u5b58\u5728\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u56e0\u6b64 while \u6761\u4ef6\u53ef\u4ee5\u6709\u76f8\u7b49\u7684\u60c5\u51b5\\n\\n\u5982\u679c\u5047\u8bbe\u533a\u95f4\u4e3a `[left, right)`\u3001`\uff08left, right]`\uff0c \u5219\u5de6\u53f3\u76f8\u7b49\u7684\u60c5\u51b5\u662f\u76f8\u6096\u4e8e\u8fd9\u4e2a\u5047\u8bbe\u7684\u533a\u95f4\u5b9a\u4e49\u7684\uff0c\u4e0d\u5b58\u5728\u76f8\u7b49\u7684\u60c5\u51b5\\n\\n### 4. \u5185\u90e8\u5faa\u73af\u5224\u65ad nums[mid] \u4e0e target \u7684\u5927\u5c0f\u5173\u7cfb\u65f6\uff0c\u660e\u786e nums[mid] \u53ef\u5426\u52a0\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\\n\\n\u5982\u679c\u5c06\u5df2\u7ecf\u6392\u9664\u7684 nums[mid] \u91cd\u65b0\u7f6e\u5165\u5faa\u73af\u4e2d\uff0c\u6709\u5bfc\u81f4\u6574\u4e2a\u7b97\u6cd5\u6b7b\u5faa\u73af\u7684\u98ce\u9669\uff0c\u56e0\u6b64\u66f4\u65b0 left\u3001right \u8303\u56f4\u7684\u65f6\u5019\uff0c\u9700\u8981\u660e\u786e\\nnums[mid] \u672c\u8eab\u662f\u5426\u53ef\u4ee5\u7ee7\u7eed\u52a0\u5165\u4e0b\u4e00\u4e2a\u5faa\u73af\\n\\n## \u4f18\u5316\u70b9\uff1a\u786e\u4fdd\u4e2d\u95f4\u5143\u7d20\u7684\u4e0b\u6807 mid \u4e3a\u6574\u578b\uff08int\uff09\\n\\n- \u4f7f\u7528 Math.floor() \u5411\u4e0b\u53d6\u6574 ---- \u6700\u5e38\u89c1\u3001\u53ef\u8bfb\u6027\u9ad8\\n\\n- \u4f7f\u7528\u4f4d\u64cd\u4f5c\u7684\u53f3\u79fb\u8fd0\u7b97\u7b26 `>>1` ---- \u6027\u80fd\u6700\u4f18\\n\\n  - (left + right) >> 1 \u76f8\u5f53\u4e8e (left + right) / 2 \u5e76\u53d6\u6574\uff0c\u540c\u65f6\u6027\u80fd\u66f4\u4f18\\n\\n- left + Math.floor((right - left) / 2) ---- \u907f\u514d left\u3001right \u975e\u5e38\u5927\u7684\u65f6\u5019\u6574\u6570\u6ea2\u51fa\\n\\n- parseInt((left + right) / 2) ---- \u76f8\u6bd4 Math.floor\u3001\u4f4d\u64cd\u4f5c\u7b26\u6027\u80fd\u7a0d\u5dee\\n\\n- Math.trunc((left + right) / 2) ---- \u65e0\u8bba\u6b63\u6570\u8d1f\u6570\uff0c\u76f4\u63a5\u53bb\u9664\u5c0f\u6570\u90e8\u5206\uff0c\u76f8\u6bd4\u4f4d\u64cd\u4f5c\u6027\u80fd\u7a0d\u5dee\\n\\n> \u5982\u679c\u9700\u8981\u6700\u7b80\u5355\u3001\u76f4\u89c2\u7684\u6574\u6570\u622a\u65ad\uff08\u7279\u522b\u662f\u8d1f\u6570\u65f6\uff09\uff0cMath.trunc() \u662f\u7406\u60f3\u9009\u62e9\u3002\\n>\\n> \u5982\u679c\u4e3b\u8981\u5904\u7406\u6b63\u6570\u4e14\u6027\u80fd\u8981\u6c42\u4e0d\u9ad8\uff0cMath.floor() \u4e5f\u662f\u5e38\u7528\u7684\u9009\u62e9\u3002\\n>\\n> \u5982\u679c\u9700\u8981\u6781\u9ad8\u7684\u6027\u80fd\u6216\u5bf9\u4f4d\u8fd0\u7b97\u6709\u7279\u6b8a\u9700\u6c42\uff0c\u4f4d\u79fb\u64cd\u4f5c\u7b26 >> \u66f4\u9ad8\u6548\u3002\\n\\n## \u4e3a\u4ec0\u4e48\u91c7\u53d6 Math.floor() \u5411\u4e0b\u53d6\u6574\uff0c\u800c\u975e\u5411\u4e0a\u53d6\u6574 Math.ceil()\\n\\n1. \u907f\u514d\u6b7b\u5faa\u73af\\n\\n\u4e00\u4e9b\u60c5\u51b5\u4e0b\u5411\u4e0a\u53d6\u6574\u5bfc\u81f4 **\u6c38\u8fdc\u65e0\u6cd5\u7f29\u5c0f** \u5de6\u53f3\u533a\u95f4\\n\\n\uff08\u5c24\u5176\u662f\u6570\u7ec4\u957f\u5ea6\u4e3a **\u5947\u6570** \u65f6\uff0c\u5411\u4e0a\u53d6\u6574\u4f1a\u5bfc\u81f4\u989d\u5916\u7684\u590d\u6742\u6027\uff09\\n\\n2. \u5e73\u8861\u6027\uff08\u7a33\u5b9a\u6027\u4e0e\u53ef\u9884\u6d4b\u6027\uff09\\n\\nMath.floor() \u4fdd\u8bc1\u5de6\u53f3\u533a\u95f4\u5212\u5206\u5747\u8861\\n\\nMath.floor()\uff1a\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u5de6\u533a\u95f4\u53ef\u80fd\u6bd4\u53f3\u533a\u95f4\u7a0d\u5927\uff0c\u4f46\u53d8\u5316\u662f\u4e00\u81f4\u7684\uff0c\u5212\u5206\u7684\u8fc7\u7a0b\u662f\u53ef\u9884\u6d4b\u548c\u7a33\u5b9a\u7684\u3002\\n\\nMath.ceil()\uff1a\u5de6\u53f3\u533a\u95f4\u7684\u5212\u5206\u6709\u65f6\u5de6\u5927\uff0c\u6709\u65f6\u53f3\u5927\uff0c\u53d8\u5316\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u5c24\u5176\u5728\u5947\u6570\u957f\u5ea6\u7684\u533a\u95f4\u91cc\uff0c\u53f3\u4fa7\u4f1a\u6bd4\u5de6\u4fa7\u66f4\u5c0f\u3002\\n\\n3. \u5b9e\u8df5\u9a8c\u8bc1\\n\\n\u957f\u671f\u65f6\u95f4\u9a8c\u8bc1\uff0cMath.floor() \u76f8\u5bf9\u4e8e Math.ceil() \u5728\u5904\u7406\u8fb9\u754c\u503c\u548c\u66f4\u65b0\u5de6\u53f3\u6307\u9488\u65f6\u7684\u590d\u6742\u5ea6\u660e\u663e\u4e0b\u964d\\n\\n## `>>` \u4e0e `>>>` \u6709\u4ec0\u4e48\u533a\u522b\uff1f\\n\\n1. `>>` \u6709\u7b26\u53f7\u53f3\u79fb\uff0c\u4f1a\u6839\u636e\u7b26\u53f7\u4f4d\u586b\u5145\u9ad8\u4f4d\uff0c\u4fdd\u7559\u8d1f\u6570\u7684\u7b26\u53f7\u3010\u9ad8\u4f4d\u6b63\u6570\u8865 0\u3001\u8d1f\u6570\u8865 1\u3011\\n2. `>>>` \u65e0\u7b26\u53f7\u53f3\u79fb\uff0c\u4e0d\u7ba1\u7b26\u53f7\uff0c\u603b\u662f\u7528 0 \u586b\u5145\u9ad8\u4f4d\uff0c\u56e0\u6b64\u8d1f\u6570\u4f1a\u53d8\u6210\u8f83\u5927\u7684\u6b63\u6570\\n\\n## \u4ee3\u7801\\n\\n### `[l, r]` \u5de6\u53f3\u95ed\u5408\u5199\u6cd5\\n\\n```javascript\\n/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number}\\n */\\nvar search = function (nums, target) {\\n  const n = nums.length\\n  let l = 0\\n  let mid = 0\\n  let r = n - 1 // \u95ed\u5408\u533a\u95f4\u4e2d r \u662f\u5305\u542b\uff0c\u6b64\u65f6 nums.length \u4e0b\u6807\u8d85\u51fa\u4e86\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u9700\u8981-1\\n\\n  // \u5047\u8bbe\u533a\u95f4\u4e3a [l, r],\u5de6\u53f3\u533a\u95f4\u90fd\u662f\u95ed\u5408\u7684\uff0c\u56e0\u6b64\u6709\u53ef\u80fd\u51fa\u73b0 l==r \u8fd9\u79cd\u60c5\u51b5\\n  while (l <= r) {\\n    mid = (l + r) >>> 1 // \u8fd9\u91cc\u76f8\u5f53\u4e8e ( l + r ) / 2 \u4e4b\u540e\u53d6\u6574\uff0c\u786e\u4fdd\u6700\u7ec8 mid \u8fd8\u662f\u6574\u578b\\n\\n    if (nums[mid] === target) return mid\\n\\n    if (nums[mid] > target) {\\n      // \u4e0d\u80fd\u8bbe\u7f6e r = mid\uff0c\u5df2\u7ecf\u660e\u786e nums[mid] > target \u5373 \u6b64\u65f6\u7684 mid \u7edd\u5bf9\u4e0d\u5305\u542b target\\n      // \u82e5\u91cd\u65b0\u5c06\u8fd9\u4e2a\u4e0d\u7b26\u5408\u7684\u8303\u56f4\u7eb3\u5165\u5faa\u73af\uff0c\u6709\u53ef\u80fd\u5f15\u8d77\u6b7b\u5faa\u73af\\n      r = mid - 1\\n    } else {\\n      l = mid + 1\\n    }\\n  }\\n  return -1\\n}\\n```\\n\\n### `[l, r)` \u5de6\u95ed\u53f3\u5f00\u5199\u6cd5\\n\\n```javascript\\n/**\\n * @param {number[]} nums\\n * @param {number} target\\n * @return {number}\\n */\\nvar search = function (nums, target) {\\n  // \u5047\u8bbe\u533a\u95f4\u4e3a [l, r)\\n  let mid = 0\\n  let l = 0\\n  let r = nums.length // \u6b64\u65f6\u53f3\u533a\u95f4\u662f\u4e0d\u5305\u542b\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u51cf 1\\n\\n  // \u5347\u5e8f\u6570\u7ec4\uff0c[l, r) \u533a\u95f4\uff0cl == r \u8fd9\u79cd\u60c5\u51b5\u4e0e\u533a\u95f4\u5b9a\u4e49\u76f8\u6096\uff0c\u56e0\u6b64\u5faa\u73af\u6761\u4ef6\u4e3a l < r\\n  while (l < r) {\\n    mid = (l + r) >>> 1\\n    if (nums[mid] === target) return mid\\n    // \u4e2d\u4f4d\u6570\u4e0e target \u7684\u5173\u7cfb\u753b\u56fe\u4f1a\u66f4\u52a0\u6e05\u6670\\n    if (nums[mid] > target) {\\n      r = mid // \u53f3\u533a\u95f4\u662f\u5f00\u5408\u7684\uff0c\u56e0\u6b64 mid \u672c\u8eab\u662f\u4e0d\u5305\u542b\u7684\uff0c\u4e0d\u9700\u8981\u51cf\u4e00\u6392\u9664\\n    } else {\\n      l = mid + 1\\n    }\\n  }\\n  return -1\\n}\\n```\\n\\n### \u53d6\u4e2d\u4f4d\u6570\u7684\u5199\u6cd5\\n\\n```javascript\\nlet mid = (l + r) >>> 1\\n\\n/**\\n * \u6cd5\u4e00\uff1a\u65e0\u7b26\u53f7\u53f3\u79fb\u64cd\u4f5c\u7b26\uff0c\u76f8\u5f53\u4e8e l + r \u9664\u4ee5 2 \u4e4b\u540e\u53d6\u6574\\n *\\n * \u4f18\uff1a\u907f\u514d\u6ea2\u51fa\uff1b\u6548\u7387\u4e0a\u6bd4\u6570\u5b66\u8fd0\u7b97\u66f4\u5feb\uff08\u73b0\u4ee3JS\u5f15\u64ce\u5dee\u5f02\u5fae\u4e4e\u5176\u5fae\uff09\\n *\\n * \u52a3\uff1a\u53ef\u8bfb\u6027\u5dee\uff0c\u5bf9\u4e8e\u4e0d\u719f\u6089\u4f4d\u8fd0\u7b97\u7684\u5f00\u53d1\u8005\u800c\u8a00\uff0c\u4e0d\u5982\u6570\u5b66\u8fd0\u7b97\u76f4\u89c2\\n */\\n```\\n\\n```javascript\\nlet mid = Math.floor((l + r) / 2)\\n\\n/**\\n * \u6cd5\u4e8c\uff1a\u8ba1\u7b97\u5e73\u5747\u503c\u4e4b\u540e\u5411\u4e0b\u53d6\u6574\\n *\\n * \u4f18\uff1a\u53ef\u8bfb\u6027\u9ad8\uff0c\u76f4\u89c2\u6613\u7406\u89e3\\n *\\n * \u52a3\uff1al\u3001r\u8fc7\u5927\u65f6\u6709\u6574\u6570\u6ea2\u51fa\u98ce\u9669\uff1b\u6027\u80fd\u76f8\u5bf9\u4e8e\u4f4d\u64cd\u4f5c\u7b26\u7565\u900a\u4e00\u7b79\uff08\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5f71\u54cd\u5fae\u4e4e\u5176\u5fae\uff09\\n */\\n```\\n\\n```javascript\\nlet mid = l + Math.floor((r - l) / 2)\\n\\n/**\\n * \u6cd5\u4e09\uff1a\u8ba1\u7b97 r-l \u4e2d\u4f4d\u6570\uff0c\u518d\u52a0\u4e0a\u5de6\u533a\u95f4\\n *\\n * \u4f18\uff1a\u907f\u514d\u6574\u6570\u6ea2\u51fa\uff1b\u6e05\u6670\uff1a\u8ba1\u7b97\u533a\u95f4\u4e2d\u4f4d\u6570\uff0c\u518d\u52a0\u4e0a\u5de6\u533a\u95f4\\n *\\n * \u52a3\uff1a\u5bf9\u6bd4\u76f4\u63a5\u76f8\u52a0\u53d6\u4e2d\u4f4d\u6570\uff0c\u7a0d\u663e\u590d\u6742\\n */\\n```\\n\\n### \u603b\u7ed3\\n\\n\u9009\u62e9\u4f7f\u7528\u54ea\u79cd\u5199\u6cd5\u4e3b\u8981\u53d6\u51b3\u4e8e\u4ee5\u4e0b\u51e0\u4e2a\u56e0\u7d20\uff1a\\n\\n- \u53ef\u8bfb\u6027\uff1a\u5728\u56e2\u961f\u4e2d\uff0c\u9009\u62e9\u66f4\u6613\u8bfb\u7684\u5199\u6cd5\u53ef\u80fd\u66f4\u53d7\u6b22\u8fce\uff0c\u5c24\u5176\u662f\u65b0\u624b\u5f00\u53d1\u8005\u3002\\n- \u6027\u80fd\uff1a\u5728\u6027\u80fd\u8981\u6c42\u9ad8\u7684\u573a\u666f\u4e0b\uff0c\u53ef\u80fd\u4f1a\u503e\u5411\u4e8e\u4f7f\u7528\u4f4d\u8fd0\u7b97\u3002\\n- \u907f\u514d\u6ea2\u51fa\uff1a\u5982\u679c\u62c5\u5fc3 l + r \u4f1a\u5bfc\u81f4\u6ea2\u51fa\uff0c\u4f7f\u7528 l + Math.floor((r - l) / 2) \u662f\u66f4\u5b89\u5168\u7684\u9009\u62e9\u3002\\n\\n## \u76f8\u5173\u9898\u76ee\\n\\n- [\u529b\u6263 34-\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e \ud83d\udd17](https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/description/)\\n- [\u529b\u6263 35-\u641c\u7d22\u63d2\u5165\u4f4d\u7f6e \ud83d\udd17](https://leetcode.cn/problems/search-insert-position/description/)\\n- [\u529b\u6263 69-x \u7684\u5e73\u65b9\u6839 \ud83d\udd17](https://leetcode.cn/problems/sqrtx/description/)\\n- [\u529b\u6263 367-\u6709\u6548\u7684\u5b8c\u5168\u5e73\u65b9\u6570 \ud83d\udd17](https://leetcode.cn/problems/valid-perfect-square/description/)"},{"id":"minimun-size-subarray-sum","metadata":{"permalink":"/algorithm/minimun-size-subarray-sum","source":"@site/algorithm/2024-03-18-\u529b\u6263209-\u957f\u5ea6\u6700\u5c0f\u5b50\u6570\u7ec4.md","title":"\u529b\u6263209 - \u957f\u5ea6\u6700\u5c0f\u5b50\u6570\u7ec4[\u6ed1\u52a8\u7a97\u53e3]","description":"\u539f\u9898\u63cf\u8ff0","date":"2024-03-18T00:00:00.000Z","tags":[{"inline":true,"label":"\u6ed1\u52a8\u7a97\u53e3","permalink":"/algorithm/tags/\u6ed1\u52a8\u7a97\u53e3"},{"inline":true,"label":"algorithm","permalink":"/algorithm/tags/algorithm"},{"inline":true,"label":"leetcode","permalink":"/algorithm/tags/leetcode"}],"readingTime":3.21,"hasTruncateMarker":false,"authors":[{"name":"Yana Ching","title":"Front End Engineer","url":"https://yamadev.github.io/","imageURL":"https://github.com/yanadev.png","key":"yana","page":null}],"frontMatter":{"slug":"minimun-size-subarray-sum","title":"\u529b\u6263209 - \u957f\u5ea6\u6700\u5c0f\u5b50\u6570\u7ec4[\u6ed1\u52a8\u7a97\u53e3]","authors":"yana","tags":["\u6ed1\u52a8\u7a97\u53e3","algorithm","leetcode"]},"unlisted":false,"prevItem":{"title":"\u529b\u6263704-\u4e8c\u5206\u67e5\u627e","permalink":"/algorithm/binary-search"}},"content":"## \u539f\u9898\u63cf\u8ff0\\n\\n:::tip\\n\\n\u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709 n \u4e2a\u6b63\u6574\u6570\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u6b63\u6574\u6570 target \u3002\\n\\n\u627e\u51fa\u8be5\u6570\u7ec4\u4e2d\u6ee1\u8db3\u5176\u603b\u548c\u5927\u4e8e\u7b49\u4e8e target \u7684\u957f\u5ea6\u6700\u5c0f\u7684 \u8fde\u7eed\u5b50\u6570\u7ec4 [numsl, numsl+1, ..., numsr-1, numsr] \uff0c\u5e76\u8fd4\u56de\u5176\u957f\u5ea6\u3002\u5982\u679c\\n\u4e0d\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de 0 \u3002\\n\\n:::\\n\\n```js\\n\\n\u793a\u4f8b 1\uff1a\\n\\n\u8f93\u5165\uff1atarget = 7, nums = [2,3,1,2,4,3]\\n\u8f93\u51fa\uff1a2\\n\u89e3\u91ca\uff1a\u5b50\u6570\u7ec4 [4,3] \u662f\u8be5\u6761\u4ef6\u4e0b\u7684\u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4\u3002\\n\u793a\u4f8b 2\uff1a\\n\\n\u8f93\u5165\uff1atarget = 4, nums = [1,4,4]\\n\u8f93\u51fa\uff1a1\\n\u793a\u4f8b 3\uff1a\\n\\n\u8f93\u5165\uff1atarget = 11, nums = [1,1,1,1,1,1,1,1]\\n\u8f93\u51fa\uff1a0\\n\\n\u63d0\u793a\uff1a\\n\\n* 1 <= target <= 109\\n* 1 <= nums.length <= 105\\n* 1 <= nums[i] <= 105\\n\\n```\\n\\n## \u6ed1\u52a8\u7a97\u53e3\u89e3\u6cd5\\n\\n\u6574\u4f53\u7684\u89e3\u9898\u601d\u8def\u662f\\n\\n1. \u904d\u5386 t \u4e2d\u6240\u6709\u5b57\u7b26\uff0c\u8bb0\u5f55\u6240\u6709\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\\n2. \u5224\u65ad left-right \u533a\u95f4\u5185\u7684\u503c\u662f\u5426\u5305\u542b t \u4e2d\u6240\u6709\u7684\u5143\u7d20\\n3. \u5982\u679c\u5305\u542b\u4e86\uff0c\u5224\u65ad\u5f53\u524d\u5b57\u4e32\u4e0e\u5df2\u8bb0\u5f55\u7684\u6700\u5c0f\u5b57\u4e32\uff0c\u7b26\u5408\u66f4\u5c0f\u6807\u51c6\u5219\u66f4\u65b0 minL \u548c minStart\\n4. \u5728\u5df2\u7ecf\u5305\u542b\u6240\u6709 t \u4e2d\u5143\u7d20\u7684\u57fa\u7840\u4e0a\uff0c\u79fb\u52a8\u5de6\u6307\u9488\uff0c\u79fb\u52a8\u5de6\u6307\u9488\u4e4b\u524d\u5c06\u5de6\u6307\u9488\u5143\u7d20\u52a0\u5230\u539f\u6765\u7684\u54c8\u5e0c\u8868\u4e2d\uff08\u4e0d\u5f71\u54cd\uff0c\u56e0\u4e3a\u4e0d\u5728 t \u4e2d\u5143\u7d20\\n   \u5728\u54c8\u5e0c\u8868\u4e2d\u67e5\u8be2\u7684\u7ed3\u679c\u662f undefined\uff0c\u6b64\u65f6\u76f4\u63a5\u52a0 1\uff0c\u7ed3\u679c\u5c31\u662f NaN\uff0c\u4e0d\u5f71\u54cd\u7b97\u6cd5\u7ed3\u679c\uff09\\n\\n\u4f18\u5316\u70b9\uff1a\\n\\n1. \u53ea\u7528\u4e86\u4e00\u4e2a\u54c8\u5e0c\u8868\uff08\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0a\u51cf\u5c0f\u4e86\uff09\\n2. \u6bcf\u6b21\u53ea\u66f4\u65b0\u5b50\u4e32\u7684\u5934\u8282\u70b9\u548c\u957f\u5ea6\uff0c\u4ec5\u5728\u6700\u540e\u7ed3\u679c\u65f6\u5019\u505a\u5b57\u7b26\u4e32\u622a\u53d6\\n\\n```js\\n/**\\n * @param {string} s\\n * @param {string} t\\n * @return {string}\\n */\\nfunction minWindow(s, t) {\\n  let left = 0\\n  let right = 0\\n  let required = t.length\\n  let minL = Infinity\\n  let minStart = 0\\n  const ht = {}\\n  for (let ct of t) {\\n    ht[ct] = (ht[ct] || 0) + 1\\n  }\\n\\n  let n = s.length\\n  while (right < n) {\\n    // right \u6307\u9488\u8d70\u5b8c s \u7684\u957f\u5ea6\u4e3a\u6b62\\n    let retR = s[right]\\n    if (ht[retR] > 0) {\\n      // \u5982\u679c\u662ft\u4e2d\u5143\u7d20\u7684\u8bdd\uff0c\u503c\u4e3a\u6570\u503c\uff0c\u800c\u4e0d\u662f undefined\\n      required--\\n    }\\n    ht[retR]-- // \u65e0\u8bba\u662f\u5426\u4e3a t \u4e2d\u5143\u7d20\uff0c\u76f4\u63a5\u81ea\u51cf\u53bb\u54c8\u5e0c\u503c undefined - 1 = NaN\\n    right++\\n\\n    while (required === 0) {\\n      // \u5224\u65ad\u533a\u95f4\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e minL\uff0c\u5982\u679c\u5c0f\u4e8e\u5219\u66f4\u65b0 minL\u3001minStart\\n      if (right - left < minL) {\\n        minL = right - left\\n        minStart = left\\n      }\\n      // \u53f3\u79fb\u5de6\u6307\u9488\uff0c\u6bcf\u6b21\u79fb\u52a8\u90fd\u76f4\u63a5\u589e\u52a0\u54c8\u5e0c\u8868\u4e2d\u8be5\u5143\u7d20\u503c\uff08undefined + 1 = NaN \u4e0d\u5f71\u54cd\u7b97\u6cd5\uff09\\n      let retL = s[left]\\n      ht[retL]++\\n      // \u82e5\u662f\u8be5\u54c8\u5e0c\u503c\u5927\u4e8e\u96f6\uff0c\u5219 left \u6240\u6307\u7684\u5143\u7d20\u662f t \u4e2d\u503c\\n      if (ht[retL] > 0) required++\\n      left++\\n    }\\n  }\\n  return minL === Infinity ? \'\' : s.substring(minStart, minStart + minL)\\n}\\n```"}]}}')}}]);