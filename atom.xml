<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanaChen</title>
  
  <subtitle>_踩坑_填坑_日常</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yanadev.github.io/"/>
  <updated>2022-05-22T19:40:13.438Z</updated>
  <id>https://yanadev.github.io/</id>
  
  <author>
    <name>Yana</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>webpack-demo</title>
    <link href="https://yanadev.github.io/2022/03/31/webpack-demo/"/>
    <id>https://yanadev.github.io/2022/03/31/webpack-demo/</id>
    <published>2022-03-31T08:14:59.000Z</published>
    <updated>2022-05-22T19:40:13.438Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么要使用webpack？"><a href="#为什么要使用webpack？" class="headerlink" title="为什么要使用webpack？"></a>为什么要使用webpack？</h1><ol><li>模块化，把复杂文件细分成小文件</li><li>将ES6、ES7等文件格式转换成浏览器可以解析的格式，less、sess文件预处理</li></ol><h1 id="webpack是什么？"><a href="#webpack是什么？" class="headerlink" title="webpack是什么？"></a>webpack是什么？</h1><p><code>webpack</code>：打包模块化<code>Javascript</code>的工具</p><p><code>核心</code>：一切文件皆模块</p><p><code>转换文件</code> - <code>注入钩子</code> - <code>输出模块组成的文件</code>（<code>Loader转换文件</code> - <code>Plugin注入钩子</code> - <code>输出</code>）</p><a id="more"></a><h1 id="使用-webpack-构建基本项目"><a href="#使用-webpack-构建基本项目" class="headerlink" title="使用 webpack 构建基本项目"></a>使用 webpack 构建基本项目</h1><h2 id="初始化项目：会生成-package-json-和-package-lock-json两个文件"><a href="#初始化项目：会生成-package-json-和-package-lock-json两个文件" class="headerlink" title="初始化项目：会生成 package.json 和 package-lock.json两个文件"></a>初始化项目：会生成 <code>package.json</code> 和 <code>package-lock.json</code>两个文件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init <span class="comment">// 初始化项目，按需求输入项目的基本信息</span></span><br></pre></td></tr></table></figure><p><img src="//yanadev.github.io/2022/03/31/webpack-demo/image-20200617123113284.png" alt="image-20200617123113284"></p><h2 id="安装webpack"><a href="#安装webpack" class="headerlink" title="安装webpack"></a>安装<code>webpack</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i webpack webpack-cli -D <span class="comment">// -D开发依赖，同时安装webpack和webpack-cli</span></span><br><span class="line"><span class="comment">/* cli（Command-Line Interface命令行接口）*/</span></span><br></pre></td></tr></table></figure><p><img src="//yanadev.github.io/2022/03/31/webpack-demo/image-20200617124017005.png" alt="image-20200617124017005"></p><h2 id="尝试打包"><a href="#尝试打包" class="headerlink" title="尝试打包"></a>尝试打包</h2><p><img src="//yanadev.github.io/2022/03/31/webpack-demo/image-20200617131533962.png" alt="image-20200617131533962"></p><p><img src="//yanadev.github.io/2022/03/31/webpack-demo/image-20200617132116086.png" alt="image-20200617132116086"></p><h1 id="使用module-：匹配第三方模块（处理次序：由下到上，由右到左）"><a href="#使用module-：匹配第三方模块（处理次序：由下到上，由右到左）" class="headerlink" title="使用module ：匹配第三方模块（处理次序：由下到上，由右到左）"></a>使用<code>module</code> ：匹配第三方模块（处理次序：由下到上，由右到左）</h1><p><img src="//yanadev.github.io/2022/03/31/webpack-demo/image-20200617133411154.png" alt="image-20200617133411154"></p><p><img src="//yanadev.github.io/2022/03/31/webpack-demo/image-20200617140022383.png" alt="image-20200617140022383"></p><h1 id="使用-html-webpack-plugin-打包html文件"><a href="#使用-html-webpack-plugin-打包html文件" class="headerlink" title="使用 html-webpack-plugin 打包html文件"></a>使用 <code>html-webpack-plugin</code> 打包html文件</h1><p>默认创建一个空的<code>HTML</code>，自动引入打包输出的所有资源（JS/CSS）</p><p><img src="//yanadev.github.io/2022/03/31/webpack-demo/image-20200617170658303.png" alt="image-20200617170658303"></p><h2 id="处理图片文件"><a href="#处理图片文件" class="headerlink" title="处理图片文件"></a>处理图片文件</h2><p><img src="//yanadev.github.io/2022/03/31/webpack-demo/image-20200617164335025.png" alt="image-20200617164335025"></p><h2 id="处理其他文件"><a href="#处理其他文件" class="headerlink" title="处理其他文件"></a>处理其他文件</h2><p><img src="//yanadev.github.io/2022/03/31/webpack-demo/image-20200618105220645.png" alt="image-20200618105220645"></p><h1 id="使用DevServer实现自动编译"><a href="#使用DevServer实现自动编译" class="headerlink" title="使用DevServer实现自动编译"></a>使用<code>DevServer</code>实现自动编译</h1><ul><li>安装</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i webpack-dev-server -D <span class="comment">// 下载 webpack-dev-server 的包</span></span><br></pre></td></tr></table></figure><ul><li>webpack.config.js文件：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    ...</span><br><span class="line">    devServer: &#123;</span><br><span class="line">    contentBase: resolve(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    port: <span class="number">3000</span>,</span><br><span class="line">    open: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>命令行</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">webpack <span class="comment">// 打包</span></span><br><span class="line">npx webpack-dev-server <span class="comment">// 仅在内存中编译打包，不会有任何输出</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;为什么要使用webpack？&quot;&gt;&lt;a href=&quot;#为什么要使用webpack？&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用webpack？&quot;&gt;&lt;/a&gt;为什么要使用webpack？&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;模块化，把复杂文件细分成小文件&lt;/li&gt;
&lt;li&gt;将ES6、ES7等文件格式转换成浏览器可以解析的格式，less、sess文件预处理&lt;/li&gt;
&lt;/ol&gt;&lt;h1 id=&quot;webpack是什么？&quot;&gt;&lt;a href=&quot;#webpack是什么？&quot; class=&quot;headerlink&quot; title=&quot;webpack是什么？&quot;&gt;&lt;/a&gt;webpack是什么？&lt;/h1&gt;&lt;p&gt;&lt;code&gt;webpack&lt;/code&gt;：打包模块化&lt;code&gt;Javascript&lt;/code&gt;的工具&lt;/p&gt;&lt;p&gt;&lt;code&gt;核心&lt;/code&gt;：一切文件皆模块&lt;/p&gt;&lt;p&gt;&lt;code&gt;转换文件&lt;/code&gt; - &lt;code&gt;注入钩子&lt;/code&gt; - &lt;code&gt;输出模块组成的文件&lt;/code&gt;（&lt;code&gt;Loader转换文件&lt;/code&gt; - &lt;code&gt;Plugin注入钩子&lt;/code&gt; - &lt;code&gt;输出&lt;/code&gt;）&lt;/p&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="https://yanadev.github.io/categories/webpack/"/>
    
    
      <category term="webpack" scheme="https://yanadev.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>NodeJS</title>
    <link href="https://yanadev.github.io/2022/03/31/NodeJS/"/>
    <id>https://yanadev.github.io/2022/03/31/NodeJS/</id>
    <published>2022-03-31T07:29:21.000Z</published>
    <updated>2022-05-22T19:46:55.914Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是node"><a href="#什么是node" class="headerlink" title="什么是node"></a>什么是node</h1><ul><li>是一个运行环境</li><li>非框架</li></ul><h1 id="REPL环境"><a href="#REPL环境" class="headerlink" title="REPL环境"></a>REPL环境</h1><ul><li><p>类似 chrome 浏览器的 console 面板</p></li><li><p>直接输入 node 即可进入 node 运行环境</p></li></ul><h1 id="查询-node-版本号"><a href="#查询-node-版本号" class="headerlink" title="查询 node 版本号"></a>查询 node 版本号</h1><ul><li>node -v</li></ul><h1 id="模块导入"><a href="#模块导入" class="headerlink" title="模块导入"></a>模块导入</h1><ul><li>导入模块的变量名与模块名保持一致</li></ul><h1 id="服务器模块使用"><a href="#服务器模块使用" class="headerlink" title="服务器模块使用"></a>服务器模块使用</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么是node&quot;&gt;&lt;a href=&quot;#什么是node&quot; class=&quot;headerlink&quot; title=&quot;什么是node&quot;&gt;&lt;/a&gt;什么是node&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;是一个运行环境&lt;/li&gt;
&lt;li&gt;非框架&lt;/li&gt;
&lt;/ul&gt;&lt;h1 id=&quot;REPL环
      
    
    </summary>
    
    
      <category term="nodejs" scheme="https://yanadev.github.io/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="https://yanadev.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>JS整理</title>
    <link href="https://yanadev.github.io/2020/10/16/JS%E6%95%B4%E7%90%86/"/>
    <id>https://yanadev.github.io/2020/10/16/JS%E6%95%B4%E7%90%86/</id>
    <published>2020-10-15T19:16:20.000Z</published>
    <updated>2022-05-22T19:48:40.914Z</updated>
    
    <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><ul><li>松散类型</li></ul><h2 id="var-与-let"><a href="#var-与-let" class="headerlink" title="var 与 let"></a>var 与 let</h2><blockquote><ul><li>var操作符<ul><li>最小作用域是函数内部，函数内部var定义的变量，在退出函数之后就会被销毁</li></ul></li><li>let操作符<ul><li>最小作用域是花括号，变量没有预解析，因此在定义变量之前使用该变量会报错</li></ul></li></ul></blockquote><p>事件传播和浏览器的事件处理</p><ul><li>事件传播：捕获阶段 - 目标阶段 - 冒泡阶段（整个过程从外到里，再由里到外）</li><li>ele.addEventListener(type, listener, useCaptrue)</li></ul><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- type 事件类型</span><br><span class="line">- listener 处理函数</span><br><span class="line">- useCaptrue 事件在捕获阶段触发</span><br></pre></td></tr></table></figure><blockquote><p>三个盒子嵌套关系：div1 &gt; div2 &gt; div3</p><p>其中绑定监听事件如下：</p><ul><li>div1.addEventListener(‘click’, function(){alert(‘1’)}, true)</li><li>div2.addEventListener(‘click’, function(){alert(‘2’)}, false)</li><li>div3.addEventListener(‘click’, function(){alert(‘3’)}, true)</li></ul><p>因此：</p><ul><li>点击div3的时候，由于设置了div1在事件传播的捕获阶段触发，因此会先弹出1，div2则没有设置在事件的捕获阶段触发，因此会弹出3，在弹出2，最终顺序：1 3 2</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;松散类型&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;var-与-let&quot;&gt;&lt;a href=&quot;#var-与-let&quot; class=&quot;headerlink&quot; title=&quot;var 与 let&quot;&gt;&lt;/a&gt;var 与 let&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;var操作符&lt;ul&gt;
&lt;li&gt;最小作用域是函数内部，函数内部var定义的变量，在退出函数之后就会被销毁&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;let操作符&lt;ul&gt;
&lt;li&gt;最小作用域是花括号，变量没有预解析，因此在定义变量之前使用该变量会报错&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;&lt;p&gt;事件传播和浏览器的事件处理&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;事件传播：捕获阶段 - 目标阶段 - 冒泡阶段（整个过程从外到里，再由里到外）&lt;/li&gt;
&lt;li&gt;ele.addEventListener(type, listener, useCaptrue)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JS" scheme="https://yanadev.github.io/categories/JS/"/>
    
    
      <category term="JS" scheme="https://yanadev.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yanadev.github.io/2020/06/16/Webpack%E7%90%86%E8%A7%A3/"/>
    <id>https://yanadev.github.io/2020/06/16/Webpack%E7%90%86%E8%A7%A3/</id>
    <published>2020-06-16T09:55:59.819Z</published>
    <updated>2022-05-22T19:34:57.744Z</updated>
    
    <content type="html"><![CDATA[<p>﻿</p><hr><p>title: webpack理解<br>date: 2020-03-31 16:14:59<br>tags: webpack<br>categories: webpack</p><hr><p>﻿# Webpack是什么？</p><ol><li><code>Webpack</code>：是一个打包模块化JavaScript的工具</li><li><code>打包模块化</code>：webpack中一切文件皆模块 <code>转换文件</code> - <code>注入钩子</code> - <code>输出模块组成的文件</code><br>① 通过<code>Loader</code>转换文件<br>② 通过 <code>Plugin</code>注入钩子<br>③ 输出由多个模块组合成的文件<h1 id="使用Webpack创建一个项目"><a href="#使用Webpack创建一个项目" class="headerlink" title="使用Webpack创建一个项目"></a>使用Webpack创建一个项目</h1><h2 id="使用-npm-cnpm包管理器初始化项目"><a href="#使用-npm-cnpm包管理器初始化项目" class="headerlink" title="使用 npm / cnpm包管理器初始化项目"></a>使用 <code>npm</code> / <code>cnpm</code>包管理器初始化项目</h2><h2 id="输入项目的基本信息"><a href="#输入项目的基本信息" class="headerlink" title="输入项目的基本信息"></a>输入项目的基本信息</h2><img src="//yanadev.github.io/2020/06/16/Webpack理解/image-20200616175642255.png" alt="image-20200616175642255"></li></ol><a id="more"></a><ul><li>其中<code>node_modules</code>用来存放项目开发过程中下载的各种包</li></ul><p><img src="//yanadev.github.io/2020/06/16/Webpack理解/image-20200616181952743.png" alt="image-20200616181952743"></p><h2 id="解读package-josn文件-和-package-lock-json文件"><a href="#解读package-josn文件-和-package-lock-json文件" class="headerlink" title="解读package.josn文件 和 package-lock.json文件"></a>解读<code>package.josn</code>文件 和 <code>package-lock.json</code>文件</h2><blockquote><ul><li><code>package.json</code> 就是前面填写信息的<code>json</code>格式表示</li><li><code>package-lock.json</code> 则是用来记录当前状态下安装的各个 <code>npm package</code> 的具体来源和版本号</li></ul></blockquote><p><img src="//yanadev.github.io/2020/06/16/Webpack理解/image-20200616180433153.png" alt="image-20200616180433153"></p><p><img src="//yanadev.github.io/2020/06/16/Webpack理解/image-20200616182353443.png" alt="image-20200616182353443"></p><h1 id="安装webpack"><a href="#安装webpack" class="headerlink" title="安装webpack"></a>安装<code>webpack</code></h1><p><img src="//yanadev.github.io/2020/06/16/Webpack理解/image-20200616204859394.png" alt="image-20200616204859394"></p><h1 id="安装-fullPage（全屏滚动）-插件"><a href="#安装-fullPage（全屏滚动）-插件" class="headerlink" title="安装 fullPage（全屏滚动） 插件"></a>安装 <code>fullPage（全屏滚动）</code> 插件</h1><ul><li><code>package-lock.json</code>即可写入了安装的包的详细信息</li></ul><p><img src="//yanadev.github.io/2020/06/16/Webpack理解/image-20200616183840367.png" alt="image-20200616183840367"></p><h1 id="创建-webpack-config-js-文件"><a href="#创建-webpack-config-js-文件" class="headerlink" title="创建 webpack.config.js 文件"></a>创建 <code>webpack.config.js</code> 文件</h1><p><img src="//yanadev.github.io/2020/06/16/Webpack理解/image-20200616203008715.png" alt="image-20200616203008715"></p><h1 id="webpack手动打包"><a href="#webpack手动打包" class="headerlink" title="webpack手动打包"></a>webpack手动打包</h1><p><img src="//yanadev.github.io/2020/06/16/Webpack理解/image-20200617005302141.png" alt="image-20200617005302141"></p><p><img src="//yanadev.github.io/2020/06/16/Webpack理解/image-20200617010356047.png" alt="image-20200617010356047"></p><p><img src="//yanadev.github.io/2020/06/16/Webpack理解/image-20200617011315420.png" alt="image-20200617011315420"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;﻿&lt;/p&gt;&lt;hr&gt;&lt;p&gt;title: webpack理解&lt;br&gt;date: 2020-03-31 16:14:59&lt;br&gt;tags: webpack&lt;br&gt;categories: webpack&lt;/p&gt;&lt;hr&gt;&lt;p&gt;﻿# Webpack是什么？&lt;/p&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Webpack&lt;/code&gt;：是一个打包模块化JavaScript的工具&lt;/li&gt;
&lt;li&gt;&lt;code&gt;打包模块化&lt;/code&gt;：webpack中一切文件皆模块 &lt;code&gt;转换文件&lt;/code&gt; - &lt;code&gt;注入钩子&lt;/code&gt; - &lt;code&gt;输出模块组成的文件&lt;/code&gt;&lt;br&gt;① 通过&lt;code&gt;Loader&lt;/code&gt;转换文件&lt;br&gt;② 通过 &lt;code&gt;Plugin&lt;/code&gt;注入钩子&lt;br&gt;③ 输出由多个模块组合成的文件&lt;h1 id=&quot;使用Webpack创建一个项目&quot;&gt;&lt;a href=&quot;#使用Webpack创建一个项目&quot; class=&quot;headerlink&quot; title=&quot;使用Webpack创建一个项目&quot;&gt;&lt;/a&gt;使用Webpack创建一个项目&lt;/h1&gt;&lt;h2 id=&quot;使用-npm-cnpm包管理器初始化项目&quot;&gt;&lt;a href=&quot;#使用-npm-cnpm包管理器初始化项目&quot; class=&quot;headerlink&quot; title=&quot;使用 npm / cnpm包管理器初始化项目&quot;&gt;&lt;/a&gt;使用 &lt;code&gt;npm&lt;/code&gt; / &lt;code&gt;cnpm&lt;/code&gt;包管理器初始化项目&lt;/h2&gt;&lt;h2 id=&quot;输入项目的基本信息&quot;&gt;&lt;a href=&quot;#输入项目的基本信息&quot; class=&quot;headerlink&quot; title=&quot;输入项目的基本信息&quot;&gt;&lt;/a&gt;输入项目的基本信息&lt;/h2&gt;&lt;img src=&quot;//yanadev.github.io/2020/06/16/Webpack理解/image-20200616175642255.png&quot; alt=&quot;image-20200616175642255&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yanadev.github.io/2020/06/16/elementUI%E7%BB%84%E4%BB%B6%E5%BA%93%E4%BD%BF%E7%94%A8/Webpack%E7%90%86%E8%A7%A3/"/>
    <id>https://yanadev.github.io/2020/06/16/elementUI%E7%BB%84%E4%BB%B6%E5%BA%93%E4%BD%BF%E7%94%A8/Webpack%E7%90%86%E8%A7%A3/</id>
    <published>2020-06-16T09:55:50.206Z</published>
    <updated>2020-06-16T09:53:08.277Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Webpack是什么？"><a href="#Webpack是什么？" class="headerlink" title="Webpack是什么？"></a>Webpack是什么？</h2><ol><li><code>Webpack</code>：是一个打包模块化JavaScript的工具</li><li><code>打包模块化</code>：webpack中一切文件皆模块 <code>转换文件</code> - <code>注入钩子</code> - <code>输出模块组成的文件</code><br>① 通过<code>Loader</code>转换文件<br>② 通过 <code>Plugin</code>注入钩子<br>③ 输出由多个模块组合成的文件<h2 id="使用Webpack创建一个项目"><a href="#使用Webpack创建一个项目" class="headerlink" title="使用Webpack创建一个项目"></a>使用Webpack创建一个项目</h2><h4 id="1-使用-npm-cnpm包管理器初始化项目"><a href="#1-使用-npm-cnpm包管理器初始化项目" class="headerlink" title="1. 使用 npm / cnpm包管理器初始化项目"></a>1. 使用 <code>npm</code> / <code>cnpm</code>包管理器初始化项目</h4><h4 id="2-输入项目的基本信息"><a href="#2-输入项目的基本信息" class="headerlink" title="2. 输入项目的基本信息"></a>2. 输入项目的基本信息</h4><img src="https://img-blog.csdnimg.cn/20200616175249884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1ZPSURfUG9pbnRlcl9H,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Webpack是什么？&quot;&gt;&lt;a href=&quot;#Webpack是什么？&quot; class=&quot;headerlink&quot; title=&quot;Webpack是什么？&quot;&gt;&lt;/a&gt;Webpack是什么？&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Webpack&lt;/code&gt;：是一个打包模块
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>参考一些内容管理系统</title>
    <link href="https://yanadev.github.io/2020/03/31/%E5%8F%82%E8%80%83%E4%B8%80%E4%BA%9B%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <id>https://yanadev.github.io/2020/03/31/%E5%8F%82%E8%80%83%E4%B8%80%E4%BA%9B%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-03-31T08:27:32.000Z</published>
    <updated>2022-05-22T19:59:49.266Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解压源码文件"><a href="#解压源码文件" class="headerlink" title="解压源码文件"></a>解压源码文件</h1><ul><li>将源文件放置到 <code>你想放的文件目录</code> 下</li></ul><p><img src="//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102154707960.png" alt="image-20200102154707960"></p><ol><li><p>配置虚拟主机</p><ul><li>打开 服务器软件 （我使用的是 Apache ）</li><li>在 <code>https-vhosts</code> 文件中设置配置信息</li></ul><p><img src="//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102155110873.png" alt="image-20200102155110873"></p><p><img src="//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102155640151.png" alt="image-20200102155640151"></p></li></ol><h1 id="在本地hosts文件中设置-IP-地址"><a href="#在本地hosts文件中设置-IP-地址" class="headerlink" title="在本地hosts文件中设置 IP 地址"></a>在本地hosts文件中设置 IP 地址</h1><ul><li>用记事本打开即可</li><li><img src="//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102155855941.png" alt="image-20200102155855941"></li><li><img src="//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102160019678.png" alt="image-20200102160019678"></li><li>保存文件</li></ul><ol><li><p>重启 Apache ，即可在浏览器中访问 <code>typecho.com</code></p></li><li><p>跟随提示接着往下执行</p><p><img src="//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102160524422.png" alt="image-20200102160524422"></p></li></ol><a id="more"></a><h1 id="要使用数据库适配器，需要开启-php-中的一些文件扩展"><a href="#要使用数据库适配器，需要开启-php-中的一些文件扩展" class="headerlink" title="要使用数据库适配器，需要开启 php 中的一些文件扩展-"></a>要使用<code>数据库适配器</code>，需要开启 <code>php</code> 中的一些文件扩展-</h1><ul><li>打开 <code>php.ini</code> 文件，打开所有带 <code>pdo</code> 的扩展</li><li><img src="//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102160917012.png" alt="image-20200102160917012"></li></ul><ol><li><p>改完配置文件之后 一定要重启  Apache</p></li><li><p>继续填写相关信息</p><ul><li>自行创建一个空的数据库即可，表的结构无需自己创建</li></ul><p><img src="//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102161959579.png" alt="image-20200102161959579"></p></li><li><p>直接访问即可</p><p><img src="//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102163311314.png" alt="image-20200102163311314"></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;解压源码文件&quot;&gt;&lt;a href=&quot;#解压源码文件&quot; class=&quot;headerlink&quot; title=&quot;解压源码文件&quot;&gt;&lt;/a&gt;解压源码文件&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;将源文件放置到 &lt;code&gt;你想放的文件目录&lt;/code&gt; 下&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102154707960.png&quot; alt=&quot;image-20200102154707960&quot;&gt;&lt;/p&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;配置虚拟主机&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开 服务器软件 （我使用的是 Apache ）&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;https-vhosts&lt;/code&gt; 文件中设置配置信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102155110873.png&quot; alt=&quot;image-20200102155110873&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102155640151.png&quot; alt=&quot;image-20200102155640151&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;&lt;h1 id=&quot;在本地hosts文件中设置-IP-地址&quot;&gt;&lt;a href=&quot;#在本地hosts文件中设置-IP-地址&quot; class=&quot;headerlink&quot; title=&quot;在本地hosts文件中设置 IP 地址&quot;&gt;&lt;/a&gt;在本地hosts文件中设置 IP 地址&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;用记事本打开即可&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102155855941.png&quot; alt=&quot;image-20200102155855941&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102160019678.png&quot; alt=&quot;image-20200102160019678&quot;&gt;&lt;/li&gt;
&lt;li&gt;保存文件&lt;/li&gt;
&lt;/ul&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;重启 Apache ，即可在浏览器中访问 &lt;code&gt;typecho.com&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;跟随提示接着往下执行&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;//yanadev.github.io/2020/03/31/参考一些内容管理系统/image-20200102160524422.png&quot; alt=&quot;image-20200102160524422&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Apache" scheme="https://yanadev.github.io/categories/Apache/"/>
    
      <category term="MySQL" scheme="https://yanadev.github.io/categories/Apache/MySQL/"/>
    
    
      <category term="Apache" scheme="https://yanadev.github.io/tags/Apache/"/>
    
      <category term="MySQL" scheme="https://yanadev.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>格式化工具与eslint之间的冲突</title>
    <link href="https://yanadev.github.io/2020/03/31/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B8%8Eeslint%E4%B9%8B%E9%97%B4%E7%9A%84%E5%86%B2%E7%AA%81/"/>
    <id>https://yanadev.github.io/2020/03/31/%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%B7%A5%E5%85%B7%E4%B8%8Eeslint%E4%B9%8B%E9%97%B4%E7%9A%84%E5%86%B2%E7%AA%81/</id>
    <published>2020-03-31T08:27:32.000Z</published>
    <updated>2022-05-22T19:58:06.279Z</updated>
    
    <content type="html"><![CDATA[<p>新建 <code>.prettierrc</code>配置文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"semi"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"singleQuote"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;新建 &lt;code&gt;.prettierrc&lt;/code&gt;配置文件&lt;/p&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
    
      <category term="debug" scheme="https://yanadev.github.io/categories/debug/"/>
    
      <category term="ESlint" scheme="https://yanadev.github.io/categories/debug/ESlint/"/>
    
    
      <category term="debug" scheme="https://yanadev.github.io/tags/debug/"/>
    
      <category term="ESlint" scheme="https://yanadev.github.io/tags/ESlint/"/>
    
  </entry>
  
  <entry>
    <title>econ项目后台数据接口</title>
    <link href="https://yanadev.github.io/2020/03/31/econ%E9%A1%B9%E7%9B%AE%E5%90%8E%E5%8F%B0%E6%95%B0%E6%8D%AE%E6%8E%A5%E5%8F%A3/"/>
    <id>https://yanadev.github.io/2020/03/31/econ%E9%A1%B9%E7%9B%AE%E5%90%8E%E5%8F%B0%E6%95%B0%E6%8D%AE%E6%8E%A5%E5%8F%A3/</id>
    <published>2020-03-31T08:26:22.000Z</published>
    <updated>2022-05-22T19:52:43.722Z</updated>
    
    <content type="html"><![CDATA[<h1 id="econ项目后台API接口文档"><a href="#econ项目后台API接口文档" class="headerlink" title="econ项目后台API接口文档"></a>econ项目后台API接口文档</h1><h1 id="API-接口说明"><a href="#API-接口说明" class="headerlink" title="API 接口说明"></a>API 接口说明</h1><ul><li>接口基准地址： <code>http:127.0.0.1:8080/admin/api</code></li><li>服务端已开启 CPOS 跨域支持</li><li>使用 HTTP Status Code 标识状态</li><li>数据返回格式统一使用 JSON</li></ul><h2 id="支持的请求方法"><a href="#支持的请求方法" class="headerlink" title="支持的请求方法"></a>支持的请求方法</h2><ul><li>GET：从服务器取出资源（一项或者多项）</li><li>POST：在服务器新建、删除、获取、修改一个资源</li></ul><a id="more"></a><h2 id="通用返回状态说明"><a href="#通用返回状态说明" class="headerlink" title="通用返回状态说明"></a>通用返回状态说明</h2><table><thead><tr><th><em>状态码</em></th><th><em>含义</em></th><th><em>说明</em></th></tr></thead><tbody><tr><td>200</td><td>OK</td><td>操作成功</td></tr><tr><td>400</td><td>BAD REQUEST</td><td>请求的地址不存在或者包含不支持的参数</td></tr><tr><td>401</td><td>UNAUTHORIZED</td><td>未授权</td></tr><tr><td>403</td><td>FORBIDDEN</td><td>被禁止访问</td></tr><tr><td>404</td><td>NOT FOUND</td><td>请求的资源不存在</td></tr><tr><td>422</td><td>Unprocesable entity</td><td>当创建一个对象时，发生一个验证错误</td></tr></tbody></table><hr><h1 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h1><h2 id="登录验证接口"><a href="#登录验证接口" class="headerlink" title="登录验证接口"></a>登录验证接口</h2><ul><li>请求路径：admin/api/login.php</li><li>请求方法：post</li><li>请求参数</li></ul><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>email</td><td>邮箱</td><td>不能为空</td></tr><tr><td>password</td><td>密码</td><td>不能为空</td></tr></tbody></table><ul><li>相应参数</li></ul><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>status</td><td>状态码</td><td></td></tr><tr><td>msg</td><td>状态信息</td><td></td></tr><tr><td>token</td><td>令牌</td><td>使用md5加密用户信息存储在数据库</td></tr></tbody></table><ul><li>响应数据</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        status: 200</span><br><span class="line">        msg: "登陆成功"</span><br><span class="line">        users: &#123;</span><br><span class="line">            token: "de96d338e32a0ef3e27953b18cc20f5f"</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><h2 id="用户数据列表"><a href="#用户数据列表" class="headerlink" title="用户数据列表"></a>用户数据列表</h2><ul><li>请求路径：admin/api/users.php</li><li>请求方法：get</li><li>请求参数</li></ul><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>query</td><td>查询参数</td><td>可以为空</td></tr><tr><td>pagenum</td><td>当前页码</td><td>不能为空</td></tr><tr><td>pagesize</td><td>每页显示条数</td><td>不能为空</td></tr></tbody></table><ul><li>响应参数</li></ul><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>pagenum</td><td>当前页码</td><td></td></tr><tr><td>total</td><td>总数据条数</td><td></td></tr><tr><td>msg</td><td>响应信息</td><td></td></tr><tr><td>status</td><td>响应码</td><td></td></tr><tr><td>users</td><td>用户数据</td><td>索引数组</td></tr></tbody></table><ul><li>响应数据</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        pagenum: 1</span><br><span class="line">        total: 25</span><br><span class="line">        msg: "获取用户数据成功"</span><br><span class="line">        status: 200</span><br><span class="line">        users: [</span><br><span class="line">                &#123;</span><br><span class="line">                  id: '68',</span><br><span class="line">                  slug: 'admin99999',</span><br><span class="line">                  email: 'admin@zce.me555',</span><br><span class="line">                  nickname: 'admin99999',</span><br><span class="line">                  status: 'activated',</span><br><span class="line">                  role: 'user'</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  id: '55',</span><br><span class="line">                  slug: 'adwwmin',</span><br><span class="line">                  email: 'adwwmin@zce.me',</span><br><span class="line">                  nickname: null,</span><br><span class="line">                  status: 'activated',</span><br><span class="line">                  role: 'user'</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  id: '53',</span><br><span class="line">                  slug: '6a6dmin',</span><br><span class="line">                  email: 'ad6mi6n@zce.me',</span><br><span class="line">                  nickname: null,</span><br><span class="line">                  status: 'activated',</span><br><span class="line">                  role: 'user'</span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改用户状态"><a href="#修改用户状态" class="headerlink" title="修改用户状态"></a>修改用户状态</h2><ul><li>请求路径：/admin/api/users-status.php</li><li>请求方法：post</li><li>请求参数</li></ul><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>id</td><td>用户 ID</td><td>不能为空，参数形式<code>params</code></td></tr><tr><td>status</td><td>用户状态</td><td>不能为空<code>携带在params中</code>，值为 activated 或者 unactivated</td></tr></tbody></table><ul><li>响应数据</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        status: 200,</span><br><span class="line">        msg: '更新状态成功'</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="根据-slug-查询用户信息"><a href="#根据-slug-查询用户信息" class="headerlink" title="根据 slug 查询用户信息"></a>根据 slug 查询用户信息</h2><ul><li>请求路径：admin/api/users.php</li><li>请求方法：get</li><li>请求参数</li></ul><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>query</td><td>查询参数，传入slug值</td><td>不能为空</td></tr><tr><td>pagenum</td><td>当前页码</td><td>不能为空</td></tr><tr><td>pagesize</td><td>每页显示条数</td><td>不能为空</td></tr></tbody></table><ul><li>响应参数</li></ul><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>pagenum</td><td>当前页码</td><td></td></tr><tr><td>total</td><td>总数据条数</td><td></td></tr><tr><td>msg</td><td>响应信息</td><td></td></tr><tr><td>status</td><td>响应码</td><td></td></tr><tr><td>users</td><td>用户数据</td><td>索引数组</td></tr></tbody></table><ul><li>响应数据</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        pagenum: 1</span><br><span class="line">        total: 11</span><br><span class="line">        msg: "获取用户数据成功"</span><br><span class="line">        status: 200</span><br><span class="line">        users: [&#123;</span><br><span class="line">                  id: '68',</span><br><span class="line">                  slug: 'admin99999',</span><br><span class="line">                  email: 'admin@zce.me555',</span><br><span class="line">                  nickname: 'admin99999',</span><br><span class="line">                  status: 'activated',</span><br><span class="line">                  role: 'user'</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  id: '55',</span><br><span class="line">                  slug: 'adwwmin',</span><br><span class="line">                  email: 'adwwmin@zce.me',</span><br><span class="line">                  nickname: null,</span><br><span class="line">                  status: 'activated',</span><br><span class="line">                  role: 'user'</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  id: '53',</span><br><span class="line">                  slug: '6a6dmin',</span><br><span class="line">                  email: 'ad6mi6n@zce.me',</span><br><span class="line">                  nickname: null,</span><br><span class="line">                  status: 'activated',</span><br><span class="line">                  role: 'user'</span><br><span class="line">                &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><ul><li>请求路径：/admin/api/users-add.php</li><li>请求方法：post</li><li>请求参数</li></ul><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>email</td><td>邮箱</td><td>不能为空</td></tr><tr><td>slug</td><td>域名</td><td>不能为空</td></tr><tr><td>password</td><td>密码</td><td>不能为空</td></tr></tbody></table><ul><li>响应参数</li></ul><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>status</td><td>请求状态</td><td></td></tr><tr><td>msg</td><td>响应信息</td><td></td></tr><tr><td>users</td><td>用户信息</td><td>只有成功才有值，否则为空</td></tr></tbody></table><ul><li>响应数据</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        status: 200,</span><br><span class="line">        msg: "添加用户成功",</span><br><span class="line">        users: [&#123;</span><br><span class="line">                  id: '68',</span><br><span class="line">                  slug: 'admin99999',</span><br><span class="line">                  email: 'admin@zce.me555',</span><br><span class="line">                  nickname: 'admin99999',</span><br><span class="line">                  status: 'activated',</span><br><span class="line">                  role: 'user'</span><br><span class="line">                &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">=================== 添加失败 ========================</span><br><span class="line">&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        status: 422</span><br><span class="line">        msg: "添加用户失败(域名或邮箱已存在)"</span><br><span class="line">        users: ""</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编辑修改用户信息"><a href="#编辑修改用户信息" class="headerlink" title="编辑修改用户信息"></a>编辑修改用户信息</h2><ul><li>请求路径： /admin/api/users-edit.php</li><li>请求方法： post</li><li>请求参数</li></ul><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>email</td><td>邮箱</td><td>不能为空</td></tr><tr><td>password</td><td>密码</td><td>不能为空</td></tr></tbody></table><ul><li>相应参数</li></ul><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>status</td><td>相应参数</td><td></td></tr><tr><td>msg</td><td>响应信息</td><td></td></tr></tbody></table><ul><li>响应数据</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        status: 200, </span><br><span class="line">        msg: "修改用户数据成功"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除单个用户信息"><a href="#删除单个用户信息" class="headerlink" title="删除单个用户信息"></a>删除单个用户信息</h2><ul><li>请求路径： /admin/api/users-delete.php        </li><li>请求方法： post</li><li>请求参数</li></ul><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>id</td><td>用户 ID</td><td></td></tr></tbody></table><p>请求参数</p><table><thead><tr><th>参数名</th><th>参数说明</th><th>备注</th></tr></thead><tbody><tr><td>status</td><td>相应参数</td><td></td></tr><tr><td>msg</td><td>响应信息</td><td></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;econ项目后台API接口文档&quot;&gt;&lt;a href=&quot;#econ项目后台API接口文档&quot; class=&quot;headerlink&quot; title=&quot;econ项目后台API接口文档&quot;&gt;&lt;/a&gt;econ项目后台API接口文档&lt;/h1&gt;&lt;h1 id=&quot;API-接口说明&quot;&gt;&lt;a href=&quot;#API-接口说明&quot; class=&quot;headerlink&quot; title=&quot;API 接口说明&quot;&gt;&lt;/a&gt;API 接口说明&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;接口基准地址： &lt;code&gt;http:127.0.0.1:8080/admin/api&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;服务端已开启 CPOS 跨域支持&lt;/li&gt;
&lt;li&gt;使用 HTTP Status Code 标识状态&lt;/li&gt;
&lt;li&gt;数据返回格式统一使用 JSON&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;支持的请求方法&quot;&gt;&lt;a href=&quot;#支持的请求方法&quot; class=&quot;headerlink&quot; title=&quot;支持的请求方法&quot;&gt;&lt;/a&gt;支持的请求方法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;GET：从服务器取出资源（一项或者多项）&lt;/li&gt;
&lt;li&gt;POST：在服务器新建、删除、获取、修改一个资源&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="实战" scheme="https://yanadev.github.io/categories/%E5%AE%9E%E6%88%98/"/>
    
      <category term="数据库" scheme="https://yanadev.github.io/categories/%E5%AE%9E%E6%88%98/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://yanadev.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="实战" scheme="https://yanadev.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>Accsee-Control-Allow-Headers导致跨域报错</title>
    <link href="https://yanadev.github.io/2020/03/31/Accsee-Control-Allow-Headers%E5%AF%BC%E8%87%B4%E8%B7%A8%E5%9F%9F%E6%8A%A5%E9%94%99/"/>
    <id>https://yanadev.github.io/2020/03/31/Accsee-Control-Allow-Headers%E5%AF%BC%E8%87%B4%E8%B7%A8%E5%9F%9F%E6%8A%A5%E9%94%99/</id>
    <published>2020-03-31T08:25:26.000Z</published>
    <updated>2022-05-22T19:56:01.331Z</updated>
    
    <content type="html"><![CDATA[<p><img src="//yanadev.github.io/2020/03/31/Accsee-Control-Allow-Headers导致跨域报错/image-20200318173832169.png" alt="image-20200318173832169"></p><h1 id="General"><a href="#General" class="headerlink" title="General"></a>General</h1><blockquote><p>Request URL: <a href="http://econ.com/login.php" target="_blank" rel="noopener">http://econ.com/login.php</a><br>Request Method: OPTIONS<br>Status Code: 200 OK<br>Remote Address: 127.0.0.1:80<br>Referrer Policy: no-referrer-when-downgrade</p></blockquote><a id="more"></a><h1 id="Response-Header"><a href="#Response-Header" class="headerlink" title="Response Header"></a>Response Header</h1><blockquote><p>Access-Control-Allow-Origin: <a href="http://localhost:8878" target="_blank" rel="noopener">http://localhost:8878</a><br>access-control-expose: Authorization<br>Connection: Keep-Alive<br>Content-Length: 126<br>Content-Type: text/html;charset=UTF-8<br>Date: Wed, 18 Mar 2020 09:33:01 GMT<br>Keep-Alive: timeout=5, max=100<br>Server: Apache/2.4.37 (Win64) OpenSSL/1.1.0i PHP/7.2.24<br>X-Powered-By: PHP/7.2.24</p></blockquote><p>解决方案，在服务端设置可接收请求的头信息</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'Access-Control-Allow-Headers: Content-Type,XFILENAME,XFILECATEGORY,XFILESIZE'</span>);</span><br></pre></td></tr></table></figure><blockquote><p>原理层面尚未理解</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;//yanadev.github.io/2020/03/31/Accsee-Control-Allow-Headers导致跨域报错/image-20200318173832169.png&quot; alt=&quot;image-20200318173832169&quot;&gt;&lt;/p&gt;&lt;h1 id=&quot;General&quot;&gt;&lt;a href=&quot;#General&quot; class=&quot;headerlink&quot; title=&quot;General&quot;&gt;&lt;/a&gt;General&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Request URL: &lt;a href=&quot;http://econ.com/login.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://econ.com/login.php&lt;/a&gt;&lt;br&gt;Request Method: OPTIONS&lt;br&gt;Status Code: 200 OK&lt;br&gt;Remote Address: 127.0.0.1:80&lt;br&gt;Referrer Policy: no-referrer-when-downgrade&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="跨域" scheme="https://yanadev.github.io/categories/%E8%B7%A8%E5%9F%9F/"/>
    
      <category term="HTTP协议" scheme="https://yanadev.github.io/categories/%E8%B7%A8%E5%9F%9F/HTTP%E5%8D%8F%E8%AE%AE/"/>
    
      <category term="Accsee-Control-Allow-Headers" scheme="https://yanadev.github.io/categories/%E8%B7%A8%E5%9F%9F/HTTP%E5%8D%8F%E8%AE%AE/Accsee-Control-Allow-Headers/"/>
    
    
      <category term="跨域" scheme="https://yanadev.github.io/tags/%E8%B7%A8%E5%9F%9F/"/>
    
      <category term="Accsee-Control-Allow-Headers" scheme="https://yanadev.github.io/tags/Accsee-Control-Allow-Headers/"/>
    
      <category term="HTTP 协议" scheme="https://yanadev.github.io/tags/HTTP-%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>ESLint语法规则</title>
    <link href="https://yanadev.github.io/2020/03/31/ESLint%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99/"/>
    <id>https://yanadev.github.io/2020/03/31/ESLint%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99/</id>
    <published>2020-03-31T08:24:23.000Z</published>
    <updated>2022-05-22T19:50:15.157Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ESLint的规则有三种级别"><a href="#ESLint的规则有三种级别" class="headerlink" title="ESLint的规则有三种级别"></a>ESLint的规则有三种级别</h1><ul><li>“off”或者0: 不启用这个规则</li><li>“warn”或者1: 出现问题会有警告</li><li>“error”或者2: 出现问题会报错</li></ul><p>eslint文件修改了一定要重新手动编译运行。</p><h1 id="修改-ESLint-空格检测"><a href="#修改-ESLint-空格检测" class="headerlink" title="修改 ESLint 空格检测"></a>修改 ESLint 空格检测</h1><p>修改 <code>.eslintrc.js</code> 文件，一定要编译运行，<code>ctrl+c</code>停止，<code>npm run serve</code>重新编译</p><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'no-irregular-whitespace'</span> : <span class="string">'off'</span><span class="comment">//这禁止掉 空格报错检查</span></span><br></pre></td></tr></table></figure><h1 id="没必要的返回语句"><a href="#没必要的返回语句" class="headerlink" title="没必要的返回语句"></a>没必要的返回语句</h1><blockquote><p>Unnecessary return statement  no-useless-return</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">login() &#123;</span><br><span class="line">  <span class="comment">// console.log(this)登陆时候的预校验。</span></span><br><span class="line">  <span class="keyword">this</span>.$refs.loginFormRef.validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!valid) <span class="keyword">return</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ========= 修改 ============</span></span><br><span class="line">login() &#123;</span><br><span class="line">  <span class="comment">// console.log(this)登陆时候的预校验。</span></span><br><span class="line">  <span class="keyword">this</span>.$refs.loginFormRef.validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!valid) <span class="keyword">return</span> <span class="literal">false</span> </span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ESLint的规则有三种级别&quot;&gt;&lt;a href=&quot;#ESLint的规则有三种级别&quot; class=&quot;headerlink&quot; title=&quot;ESLint的规则有三种级别&quot;&gt;&lt;/a&gt;ESLint的规则有三种级别&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;“off”或者0: 不启用这个规则&lt;/li&gt;
&lt;li&gt;“warn”或者1: 出现问题会有警告&lt;/li&gt;
&lt;li&gt;“error”或者2: 出现问题会报错&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;eslint文件修改了一定要重新手动编译运行。&lt;/p&gt;&lt;h1 id=&quot;修改-ESLint-空格检测&quot;&gt;&lt;a href=&quot;#修改-ESLint-空格检测&quot; class=&quot;headerlink&quot; title=&quot;修改 ESLint 空格检测&quot;&gt;&lt;/a&gt;修改 ESLint 空格检测&lt;/h1&gt;&lt;p&gt;修改 &lt;code&gt;.eslintrc.js&lt;/code&gt; 文件，一定要编译运行，&lt;code&gt;ctrl+c&lt;/code&gt;停止，&lt;code&gt;npm run serve&lt;/code&gt;重新编译&lt;/p&gt;
    
    </summary>
    
    
      <category term="规范" scheme="https://yanadev.github.io/categories/%E8%A7%84%E8%8C%83/"/>
    
      <category term="ESlint" scheme="https://yanadev.github.io/categories/%E8%A7%84%E8%8C%83/ESlint/"/>
    
    
      <category term="规范" scheme="https://yanadev.github.io/tags/%E8%A7%84%E8%8C%83/"/>
    
      <category term="ESLint" scheme="https://yanadev.github.io/tags/ESLint/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="https://yanadev.github.io/2020/03/31/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://yanadev.github.io/2020/03/31/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-03-31T08:23:21.000Z</published>
    <updated>2022-05-22T19:49:07.704Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="git" scheme="https://yanadev.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://yanadev.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Vue错误日志</title>
    <link href="https://yanadev.github.io/2020/03/31/Vue%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97/"/>
    <id>https://yanadev.github.io/2020/03/31/Vue%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97/</id>
    <published>2020-03-31T08:22:34.000Z</published>
    <updated>2022-05-22T19:41:26.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Trailing-spaces-not-allowed"><a href="#Trailing-spaces-not-allowed" class="headerlink" title="Trailing spaces not allowed"></a>Trailing spaces not allowed</h1><p>删除多余空行即可</p><h1 id="Newline-required-at-end-of-file-but-not-found"><a href="#Newline-required-at-end-of-file-but-not-found" class="headerlink" title="Newline required at end of file but not found"></a>Newline required at end of file but not found</h1><p> 文件末尾需要换行符，但找不到 </p><p>解决：=&gt; 在 <code>js</code> <code>css</code>等后面再加一行(空行) </p><h1 id="error-Extra-semicolon-semi"><a href="#error-Extra-semicolon-semi" class="headerlink" title="error  Extra semicolon  semi"></a>error  Extra semicolon  semi</h1><a id="more"></a><p>不使用分号</p><h1 id="多次引入-element-ui"><a href="#多次引入-element-ui" class="headerlink" title="多次引入 element-ui"></a>多次引入 element-ui</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span>:<span class="number">24</span>  error  <span class="string">'E:\Develop\Apache\htdocs\econ.com\node_modules\element-ui\lib\element-ui.common.js'</span> imported multiple times  <span class="keyword">import</span>/no-duplicates</span><br><span class="line"><span class="number">3</span>:<span class="number">32</span>  error  <span class="string">'E:\Develop\Apache\htdocs\econ.com\node_modules\element-ui\lib\element-ui.common.js'</span> imported multiple times  <span class="keyword">import</span>/no-duplicates</span><br><span class="line"><span class="number">4</span>:<span class="number">23</span>  error  <span class="string">'E:\Develop\Apache\htdocs\econ.com\node_modules\element-ui\lib\element-ui.common.js'</span> imported multiple times  <span class="keyword">import</span>/no-duplicates</span><br><span class="line"><span class="number">6</span>:<span class="number">1</span>   error  More than <span class="number">1</span> blank line not allowed                                                                            no-multiple-empty-lines</span><br></pre></td></tr></table></figure><p>解决方法：</p><p>使用一次 import 即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ========== before ===========</span></span><br><span class="line"><span class="keyword">import</span> &#123; Button &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> &#123; Form, FormItem &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> &#123; Input &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="comment">// ========== before ===========</span></span><br><span class="line"><span class="keyword">import</span> &#123; Button, Form, FormItem, Input &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br></pre></td></tr></table></figure><h1 id="tab四字节导致的错误"><a href="#tab四字节导致的错误" class="headerlink" title="tab四字节导致的错误"></a>tab四字节导致的错误</h1><blockquote><p>  31:1  error  Expected indentation of 4 spaces but found 0  indent<br>  33:1  error  Expected indentation of 6 spaces but found 4  indent<br>  34:1  error  Expected indentation of 8 spaces but found 4  indent<br>  35:1  error  Expected indentation of 8 spaces but found 4  indent<br>  36:1  error  Expected indentation of 6 spaces but found 4  indent<br>  37:1  error  Expected indentation of 4 spaces but found 0  indent<br>  38:1  error  Expected indentation of 2 spaces but found 0  indent</p></blockquote><p>修改编辑器<code>tab</code> 键字节数，修改设置<code>settings.json</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"editor.tabSize"</span>: <span class="number">4</span>：指定一个tab等于多少个空格，例如此处指定<span class="number">4</span>就像等于<span class="number">4</span>个空格，<span class="number">2</span>就等于两个空格</span><br><span class="line"><span class="string">"editor.detectIndentation"</span>:<span class="literal">false</span> ：必须指定！！否则指定的tab大小将不起效果</span><br></pre></td></tr></table></figure><h1 id="没必要的返回语句"><a href="#没必要的返回语句" class="headerlink" title="没必要的返回语句"></a>没必要的返回语句</h1><blockquote><p>Unnecessary return statement  no-useless-return</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">login() &#123;</span><br><span class="line">  <span class="comment">// console.log(this)登陆时候的预校验。</span></span><br><span class="line">  <span class="keyword">this</span>.$refs.loginFormRef.validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!valid) <span class="keyword">return</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ========= 修改 ============</span></span><br><span class="line">login() &#123;</span><br><span class="line">  <span class="comment">// console.log(this)登陆时候的预校验。</span></span><br><span class="line">  <span class="keyword">this</span>.$refs.loginFormRef.validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!valid) <span class="keyword">return</span> <span class="literal">false</span> </span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="vue-ui-启动可视化面板一片空白"><a href="#vue-ui-启动可视化面板一片空白" class="headerlink" title="vue ui 启动可视化面板一片空白"></a>vue ui 启动可视化面板一片空白</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">删除 C:\Users\Administrator 下的 <span class="string">'.vue-cli-ui'</span> 文件即可</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Trailing-spaces-not-allowed&quot;&gt;&lt;a href=&quot;#Trailing-spaces-not-allowed&quot; class=&quot;headerlink&quot; title=&quot;Trailing spaces not allowed&quot;&gt;&lt;/a&gt;Trailing spaces not allowed&lt;/h1&gt;&lt;p&gt;删除多余空行即可&lt;/p&gt;&lt;h1 id=&quot;Newline-required-at-end-of-file-but-not-found&quot;&gt;&lt;a href=&quot;#Newline-required-at-end-of-file-but-not-found&quot; class=&quot;headerlink&quot; title=&quot;Newline required at end of file but not found&quot;&gt;&lt;/a&gt;Newline required at end of file but not found&lt;/h1&gt;&lt;p&gt; 文件末尾需要换行符，但找不到 &lt;/p&gt;&lt;p&gt;解决：=&amp;gt; 在 &lt;code&gt;js&lt;/code&gt; &lt;code&gt;css&lt;/code&gt;等后面再加一行(空行) &lt;/p&gt;&lt;h1 id=&quot;error-Extra-semicolon-semi&quot;&gt;&lt;a href=&quot;#error-Extra-semicolon-semi&quot; class=&quot;headerlink&quot; title=&quot;error  Extra semicolon  semi&quot;&gt;&lt;/a&gt;error  Extra semicolon  semi&lt;/h1&gt;
    
    </summary>
    
    
      <category term="vue" scheme="https://yanadev.github.io/categories/vue/"/>
    
      <category term="debug" scheme="https://yanadev.github.io/categories/vue/debug/"/>
    
    
      <category term="debug" scheme="https://yanadev.github.io/tags/debug/"/>
    
      <category term="vue" scheme="https://yanadev.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>econ项目数据库结构</title>
    <link href="https://yanadev.github.io/2020/03/31/econ%E9%A1%B9%E7%9B%AE%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%84/"/>
    <id>https://yanadev.github.io/2020/03/31/econ%E9%A1%B9%E7%9B%AE%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%84/</id>
    <published>2020-03-31T08:21:52.000Z</published>
    <updated>2022-05-22T19:52:26.131Z</updated>
    
    <content type="html"><![CDATA[<h1 id="相册表（albums）"><a href="#相册表（albums）" class="headerlink" title="相册表（albums）"></a>相册表（albums）</h1><p>用于记录相册信息</p><table><thead><tr><th align="left">字段</th><th align="left">描述</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">🔑 主键</td><td align="left"></td></tr><tr><td align="left">slug</td><td align="left">URL 别名</td><td align="left"></td></tr><tr><td align="left">title</td><td align="left">相册标题</td><td align="left"></td></tr><tr><td align="left">feature</td><td align="left">特色图像</td><td align="left">图片 URL 路径</td></tr><tr><td align="left">description</td><td align="left">相册简介</td><td align="left"></td></tr><tr><td align="left">created</td><td align="left">创建时间</td><td align="left"></td></tr><tr><td align="left">views</td><td align="left">浏览次数</td><td align="left"></td></tr><tr><td align="left">likes</td><td align="left">点赞数</td><td align="left"></td></tr><tr><td align="left">status</td><td align="left">状态</td><td align="left">草稿（drafted）/ 已发布（published）/ 回收站（trashed）</td></tr><tr><td align="left">user_id</td><td align="left">🔗 用户 ID</td><td align="left">当前文章的作者 ID</td></tr></tbody></table><a id="more"></a><h1 id="收藏表（collections）"><a href="#收藏表（collections）" class="headerlink" title="收藏表（collections）"></a>收藏表（collections）</h1><p>用于记录用户收藏作品信息</p><table><thead><tr><th align="left">字段</th><th align="left">描述</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">🔑 主键</td><td align="left"></td></tr><tr><td align="left">post_id</td><td align="left">🔗 作品 ID</td><td align="left">收藏作品 ID</td></tr><tr><td align="left">user_id</td><td align="left">🔗 用户 ID</td><td align="left">收藏者 ID</td></tr><tr><td align="left">created</td><td align="left">创建时间</td><td align="left">第一次收藏时间</td></tr><tr><td align="left">status</td><td align="left">收藏状态</td><td align="left">0 - uncollect ；1 -  collect</td></tr></tbody></table><h1 id="点赞表（likes）"><a href="#点赞表（likes）" class="headerlink" title="点赞表（likes）"></a>点赞表（likes）</h1><p>用于记录用户点赞作品信息</p><table><thead><tr><th align="left">字段</th><th align="left">描述</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">🔑 主键</td><td align="left"></td></tr><tr><td align="left">post_id</td><td align="left">🔗 作品 ID</td><td align="left">点赞的作品 ID</td></tr><tr><td align="left">user_id</td><td align="left">🔗 用户 ID</td><td align="left">点赞者 ID</td></tr><tr><td align="left">created</td><td align="left">创建时间</td><td align="left">点赞状态创建时间</td></tr><tr><td align="left">status</td><td align="left">点赞状态</td><td align="left">0 - dislike；1 -  like</td></tr></tbody></table><h1 id="浏览表（views）"><a href="#浏览表（views）" class="headerlink" title="浏览表（views）"></a>浏览表（views）</h1><p>用于记录用户浏览作品信息</p><table><thead><tr><th align="left">字段</th><th align="left">描述</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">🔑 主键</td><td align="left"></td></tr><tr><td align="left">post_id</td><td align="left">🔗 作品 ID</td><td align="left">浏览的作品 ID</td></tr><tr><td align="left">user_id</td><td align="left">🔗 用户 ID</td><td align="left">浏览者 ID</td></tr><tr><td align="left">created</td><td align="left">创建时间</td><td align="left">浏览时间</td></tr><tr><td align="left">status</td><td align="left">浏览状态</td><td align="left">发布（published）/ 回收站（trashed）</td></tr></tbody></table><h1 id="用户表（users）"><a href="#用户表（users）" class="headerlink" title="用户表（users）"></a>用户表（users）</h1><p>用于记录用户信息</p><table><thead><tr><th align="left">字段</th><th align="left">描述</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">🔑 主键</td><td align="left"></td></tr><tr><td align="left">slug</td><td align="left">URL 别名</td><td align="left"></td></tr><tr><td align="left">email</td><td align="left">邮箱</td><td align="left">亦做登录名</td></tr><tr><td align="left">password</td><td align="left">密码</td><td align="left"></td></tr><tr><td align="left">nickname</td><td align="left">昵称</td><td align="left"></td></tr><tr><td align="left">avatar</td><td align="left">头像</td><td align="left">图片 URL 路径</td></tr><tr><td align="left">bio</td><td align="left">简介</td><td align="left">&amp;nbsp；</td></tr><tr><td align="left">status</td><td align="left">状态</td><td align="left">未激活（unactivated）/ 激活（activated）/ 禁止（forbidden）/ 回收站（trashed）</td></tr><tr><td align="left">feature</td><td align="left">背景图片</td><td align="left">图片 URL 路径</td></tr><tr><td align="left">fans</td><td align="left">粉丝数</td><td align="left"></td></tr><tr><td align="left">follows</td><td align="left">关注数</td><td align="left"></td></tr></tbody></table><h1 id="作品表（posts）"><a href="#作品表（posts）" class="headerlink" title="作品表（posts）"></a>作品表（posts）</h1><p>用于记录作品信息</p><table><thead><tr><th align="left">字段</th><th align="left">描述</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">🔑 主键</td><td align="left"></td></tr><tr><td align="left">slug</td><td align="left">URL 别名</td><td align="left"></td></tr><tr><td align="left">title</td><td align="left">作品标题</td><td align="left"></td></tr><tr><td align="left">feature</td><td align="left">特色图像</td><td align="left">图片 URL 路径 （图文封面 / 单图内容）</td></tr><tr><td align="left">type</td><td align="left">作品类型</td><td align="left">图片（photo）/ 图文（article），默认图片</td></tr><tr><td align="left">description</td><td align="left">作品简介</td><td align="left"></td></tr><tr><td align="left">created</td><td align="left">创建时间</td><td align="left"></td></tr><tr><td align="left">content</td><td align="left">内容</td><td align="left">如果 type = “photo”，该字段为 null</td></tr><tr><td align="left">views</td><td align="left">浏览次数</td><td align="left"></td></tr><tr><td align="left">likes</td><td align="left">点赞数</td><td align="left"></td></tr><tr><td align="left">collects</td><td align="left">收藏数</td><td align="left"></td></tr><tr><td align="left">status</td><td align="left">状态</td><td align="left">草稿（drafted）/ 已发布（published）/ 回收站（trashed）</td></tr><tr><td align="left">album_id</td><td align="left">🔗 相册 ID</td><td align="left">当前作品的相册 ID（图文默认为 null ）</td></tr><tr><td align="left">user_id</td><td align="left">🔗 用户 ID</td><td align="left">当前作品的作者 ID</td></tr><tr><td align="left">category_id</td><td align="left">🔗 分类 ID</td><td align="left">当前作品的分类 ID</td></tr></tbody></table><h1 id="评论表（comments）"><a href="#评论表（comments）" class="headerlink" title="评论表（comments）"></a>评论表（comments）</h1><p>用于记录作品评论信息</p><table><thead><tr><th align="left">字段</th><th align="left">描述</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">🔑 主键</td><td align="left"></td></tr><tr><td align="left">author</td><td align="left">作者</td><td align="left"></td></tr><tr><td align="left">email</td><td align="left">邮箱</td><td align="left"></td></tr><tr><td align="left">created</td><td align="left">创建时间</td><td align="left"></td></tr><tr><td align="left">content</td><td align="left">内容</td><td align="left"></td></tr><tr><td align="left">status</td><td align="left">状态</td><td align="left">待审核（held）/ 准许（approved）/ 拒绝（rejected）/ 回收站（trashed）</td></tr><tr><td align="left">post_id</td><td align="left">🔗 作品ID</td><td align="left"></td></tr><tr><td align="left">parent_id</td><td align="left">🔗 父级 ID</td><td align="left"></td></tr></tbody></table><h1 id="分类表（categories）"><a href="#分类表（categories）" class="headerlink" title="分类表（categories）"></a>分类表（categories）</h1><p>用于记录作品分类信息</p><table><thead><tr><th align="left">字段</th><th align="left">描述</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">🔑 主键</td><td align="left"></td></tr><tr><td align="left">slug</td><td align="left">URL 别名</td><td align="left"></td></tr><tr><td align="left">name</td><td align="left">分类名称</td><td align="left"></td></tr></tbody></table><h1 id="关注表-（follows）"><a href="#关注表-（follows）" class="headerlink" title="关注表 （follows）"></a>关注表 （follows）</h1><table><thead><tr><th align="left">字段</th><th align="left">描述</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">🔑 主键</td><td align="left"></td></tr><tr><td align="left">user_id</td><td align="left">🔗 用户 ID</td><td align="left"></td></tr><tr><td align="left">followed_user</td><td align="left">🔗被关注者 ID</td><td align="left"></td></tr><tr><td align="left">status</td><td align="left">状态</td><td align="left">关注（follow）/ 取关（unfollow）</td></tr><tr><td align="left">created</td><td align="left">创建时间</td><td align="left">第一次关注时间</td></tr><tr><td align="left">update</td><td align="left">更新时间</td><td align="left">关注状态改变时间</td></tr></tbody></table><h1 id="粉丝表（fans）"><a href="#粉丝表（fans）" class="headerlink" title="粉丝表（fans）"></a>粉丝表（fans）</h1><table><thead><tr><th align="left">字段</th><th align="left">描述</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">🔑 主键</td><td align="left"></td></tr><tr><td align="left">user_id</td><td align="left">🔗 用户 ID</td><td align="left"></td></tr><tr><td align="left">follower</td><td align="left">🔗粉丝 ID</td><td align="left"></td></tr><tr><td align="left">status</td><td align="left">状态</td><td align="left">关注（follow）/ 取关（unfollow）</td></tr><tr><td align="left">created</td><td align="left">创建时间</td><td align="left">第一次关注时间</td></tr><tr><td align="left">update</td><td align="left">更新时间</td><td align="left">关注状态改变时间</td></tr></tbody></table><h1 id="选项表（options）"><a href="#选项表（options）" class="headerlink" title="选项表（options）"></a>选项表（options）</h1><p>用于记录网站的一些配置属性信息，如：站点标题，站点描述等</p><table><thead><tr><th align="left">字段</th><th align="left">描述</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">🔑 主键</td><td align="left"></td></tr><tr><td align="left">key</td><td align="left">属性键</td><td align="left">snake_case</td></tr><tr><td align="left">value</td><td align="left">属性值</td><td align="left">JSON 格式</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;相册表（albums）&quot;&gt;&lt;a href=&quot;#相册表（albums）&quot; class=&quot;headerlink&quot; title=&quot;相册表（albums）&quot;&gt;&lt;/a&gt;相册表（albums）&lt;/h1&gt;&lt;p&gt;用于记录相册信息&lt;/p&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;字段&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;描述&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;id&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;🔑 主键&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;slug&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;URL 别名&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;title&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;相册标题&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;feature&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;特色图像&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;图片 URL 路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;description&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;相册简介&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;created&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;创建时间&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;views&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;浏览次数&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;likes&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;点赞数&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;status&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;状态&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;草稿（drafted）/ 已发布（published）/ 回收站（trashed）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;user_id&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;🔗 用户 ID&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;当前文章的作者 ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="实战" scheme="https://yanadev.github.io/categories/%E5%AE%9E%E6%88%98/"/>
    
      <category term="数据库" scheme="https://yanadev.github.io/categories/%E5%AE%9E%E6%88%98/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://yanadev.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="实战" scheme="https://yanadev.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>elementUI组件库使用</title>
    <link href="https://yanadev.github.io/2020/03/31/elementUI%E7%BB%84%E4%BB%B6%E5%BA%93%E4%BD%BF%E7%94%A8/"/>
    <id>https://yanadev.github.io/2020/03/31/elementUI%E7%BB%84%E4%BB%B6%E5%BA%93%E4%BD%BF%E7%94%A8/</id>
    <published>2020-03-31T08:20:15.000Z</published>
    <updated>2022-05-22T19:51:53.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于命令行方式手动安装"><a href="#基于命令行方式手动安装" class="headerlink" title="基于命令行方式手动安装"></a>基于命令行方式手动安装</h1><ul><li><p>安装依赖包 npm i element-ui –S </p></li><li><p>导入 Element-UI 相关资源</p><ul><li>完整导入</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在 main.js 入口文件中</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>按需导入</li></ul><p>修改 <code>src/plugins</code> 路径下的<code>element.js</code>文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="comment">// 导入样式表</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br><span class="line"><span class="comment">// 按需导入 element-ui</span></span><br><span class="line"><span class="keyword">import</span> &#123; Button, Form, FormItem, Input &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="comment">// 全局注册组件</span></span><br><span class="line">Vue.use(Button)</span><br><span class="line">Vue.use(Form)</span><br><span class="line">Vue.use(FormItem)</span><br><span class="line">Vue.use(Input)</span><br></pre></td></tr></table></figure><p>在入口文件 <code>main.js</code> 中引入 <code>element.js</code> ，即可全局使用<code>element-ui</code> 中的按需引入的组件了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'./plugins/element.js'</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form label-width=<span class="string">"0px"</span>&gt;</span><br><span class="line">                &lt;!-- 用户名 --&gt;</span><br><span class="line">                &lt;el-form-item&gt;</span><br><span class="line">                    &lt;el-input&gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line">                &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">                &lt;!-- 密码 --&gt;</span></span><br><span class="line"><span class="regexp">                &lt;el-form-item&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;el-input&gt;&lt;/</span>el-input&gt;</span><br><span class="line">                &lt;<span class="regexp">/el-form-item&gt;</span></span><br><span class="line"><span class="regexp">                &lt;el-form-item&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;el-button type="primary"&gt;登录&lt;/</span>el-button&gt;</span><br><span class="line">                    &lt;el-button type=<span class="string">"info"</span>&gt;重置&lt;<span class="regexp">/el-button&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>el-form-item&gt;</span><br><span class="line">            &lt;<span class="regexp">/el-form&gt;</span></span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="//yanadev.github.io/2020/03/31/elementUI组件库使用/image-20200317152526514.png" alt="image-20200317152526514"></p></li></ul><a id="more"></a><h1 id="基于图形化界面自动安装"><a href="#基于图形化界面自动安装" class="headerlink" title="基于图形化界面自动安装"></a>基于图形化界面自动安装</h1><p>① 运行 vue ui 命令，打开图形化界面 </p><p>② 通过 Vue 项目管理器，进入具体的项目配置面板 </p><p>③ 点击 插件 -&gt; 添加插件，进入插件查询面板 </p><p>④ 搜索 vue-cli-plugin-element 并安装 </p><p>⑤ 配置插件，实现按需导入，从而减少打包后项目的体积 </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基于命令行方式手动安装&quot;&gt;&lt;a href=&quot;#基于命令行方式手动安装&quot; class=&quot;headerlink&quot; title=&quot;基于命令行方式手动安装&quot;&gt;&lt;/a&gt;基于命令行方式手动安装&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装依赖包 npm i element-ui –S &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;导入 Element-UI 相关资源&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完整导入&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在 main.js 入口文件中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Vue &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ElementUI &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;element-ui&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;element-ui/lib/theme-chalk/index.css&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; App &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./App.vue&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vue.use(ElementUI);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Vue(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  el: &lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;h&lt;/span&gt; =&amp;gt;&lt;/span&gt; h(App)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;按需导入&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修改 &lt;code&gt;src/plugins&lt;/code&gt; 路径下的&lt;code&gt;element.js&lt;/code&gt;文件：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Vue &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 导入样式表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;element-ui/lib/theme-chalk/index.css&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 按需导入 element-ui&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; Button, Form, FormItem, Input &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;element-ui&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 全局注册组件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vue.use(Button)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vue.use(Form)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vue.use(FormItem)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vue.use(Input)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在入口文件 &lt;code&gt;main.js&lt;/code&gt; 中引入 &lt;code&gt;element.js&lt;/code&gt; ，即可全局使用&lt;code&gt;element-ui&lt;/code&gt; 中的按需引入的组件了&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./plugins/element.js&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;el-form label-width=&lt;span class=&quot;string&quot;&gt;&quot;0px&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;!-- 用户名 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;el-form-item&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;el-input&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;el-input&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;&lt;span class=&quot;regexp&quot;&gt;/el-form-item&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;                &amp;lt;!-- 密码 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;                &amp;lt;el-form-item&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;                    &amp;lt;el-input&amp;gt;&amp;lt;/&lt;/span&gt;el-input&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;&lt;span class=&quot;regexp&quot;&gt;/el-form-item&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;                &amp;lt;el-form-item&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;                    &amp;lt;el-button type=&quot;primary&quot;&amp;gt;登录&amp;lt;/&lt;/span&gt;el-button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;el-button type=&lt;span class=&quot;string&quot;&gt;&quot;info&quot;&lt;/span&gt;&amp;gt;重置&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/el-button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;                &amp;lt;/&lt;/span&gt;el-form-item&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;&lt;span class=&quot;regexp&quot;&gt;/el-form&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;//yanadev.github.io/2020/03/31/elementUI组件库使用/image-20200317152526514.png&quot; alt=&quot;image-20200317152526514&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="UI组件库" scheme="https://yanadev.github.io/categories/UI%E7%BB%84%E4%BB%B6%E5%BA%93/"/>
    
    
      <category term="ElementUI" scheme="https://yanadev.github.io/tags/ElementUI/"/>
    
      <category term="UI组件库" scheme="https://yanadev.github.io/tags/UI%E7%BB%84%E4%BB%B6%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.0脚手架</title>
    <link href="https://yanadev.github.io/2020/03/31/Vue3-0%E8%84%9A%E6%89%8B%E6%9E%B6/"/>
    <id>https://yanadev.github.io/2020/03/31/Vue3-0%E8%84%9A%E6%89%8B%E6%9E%B6/</id>
    <published>2020-03-31T08:19:45.000Z</published>
    <updated>2022-05-22T19:42:00.644Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue-脚手架基本用法"><a href="#Vue-脚手架基本用法" class="headerlink" title="Vue 脚手架基本用法"></a>Vue 脚手架基本用法</h2><p>快速生成 Vue 项目基础架构</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 安装 <span class="number">3.</span>x 版本的 Vue 脚手架</span><br><span class="line">npm install -g @vue/cli</span><br><span class="line"><span class="comment">// 或者 cnpm i @vue/cli -g</span></span><br><span class="line">- 检查安装成功与否（脚手架版本号）</span><br><span class="line">vue -V </span><br><span class="line"><span class="comment">// @vue/cli 4.2.3</span></span><br></pre></td></tr></table></figure><h2 id="基于-3-x-版本的脚手架创建-vue-项目"><a href="#基于-3-x-版本的脚手架创建-vue-项目" class="headerlink" title="基于 3.x 版本的脚手架创建 vue 项目"></a>基于 3.x 版本的脚手架创建 vue 项目</h2><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 法一：交互式命令行</span></span><br><span class="line">vue create my-project</span><br><span class="line"><span class="comment">// 法二：图形化界面</span></span><br><span class="line">vue ui</span><br><span class="line"><span class="comment">// 基于 2.x 的旧版本创建</span></span><br><span class="line">npm install -g @vue/cli-init</span><br><span class="line">vue init webpack my-project</span><br></pre></td></tr></table></figure><h2 id="图形化界面"><a href="#图形化界面" class="headerlink" title="图形化界面"></a>图形化界面</h2><p><img src="//yanadev.github.io/2020/03/31/Vue3-0脚手架/image-20200313172500044.png" alt="image-20200313172500044"></p><p><img src="//yanadev.github.io/2020/03/31/Vue3-0脚手架/image-20200313172710912.png" alt="image-20200313172710912"></p><p><img src="//yanadev.github.io/2020/03/31/Vue3-0脚手架/image-20200313172754560.png" alt="image-20200313172754560"></p><p><img src="//yanadev.github.io/2020/03/31/Vue3-0脚手架/image-20200313173051395.png" alt="image-20200313173051395"></p><p><img src="//yanadev.github.io/2020/03/31/Vue3-0脚手架/image-20200313173228996.png" alt="image-20200313173228996"></p><p><img src="//yanadev.github.io/2020/03/31/Vue3-0脚手架/image-20200313173331684.png" alt="image-20200313173331684"></p><p><img src="//yanadev.github.io/2020/03/31/Vue3-0脚手架/image-20200313173852182.png" alt="image-20200313173852182"></p><h2 id="Vue-脚手架生成地项目结构分析"><a href="#Vue-脚手架生成地项目结构分析" class="headerlink" title="Vue 脚手架生成地项目结构分析"></a>Vue 脚手架生成地项目结构分析</h2><p><img src="//yanadev.github.io/2020/03/31/Vue3-0脚手架/image-20200313174425820.png" alt="image-20200313174425820"></p><h2 id="通过-package-json-配置项目（不推荐）"><a href="#通过-package-json-配置项目（不推荐）" class="headerlink" title="通过 package.json 配置项目（不推荐）"></a>通过 package.json 配置项目（不推荐）</h2><p><img src="//yanadev.github.io/2020/03/31/Vue3-0脚手架/image-20200313175953548.png" alt="image-20200313175953548"></p><p><img src="//yanadev.github.io/2020/03/31/Vue3-0脚手架/image-20200313180147133.png" alt="image-20200313180147133"></p><h2 id="通过单独的配置文件配置项目-（推荐）"><a href="#通过单独的配置文件配置项目-（推荐）" class="headerlink" title="通过单独的配置文件配置项目 （推荐）"></a>通过单独的配置文件配置项目 （推荐）</h2><p><img src="//yanadev.github.io/2020/03/31/Vue3-0脚手架/image-20200313180422786.png" alt="image-20200313180422786"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Vue-脚手架基本用法&quot;&gt;&lt;a href=&quot;#Vue-脚手架基本用法&quot; class=&quot;headerlink&quot; title=&quot;Vue 脚手架基本用法&quot;&gt;&lt;/a&gt;Vue 脚手架基本用法&lt;/h2&gt;&lt;p&gt;快速生成 Vue 项目基础架构&lt;/p&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- 安装 &lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt;x 版本的 Vue 脚手架&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install -g @vue/cli&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 或者 cnpm i @vue/cli -g&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 检查安装成功与否（脚手架版本号）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vue -V &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// @vue/cli 4.2.3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&quot;基于-3-x-版本的脚手架创建-vue-项目&quot;&gt;&lt;a href=&quot;#基于-3-x-版本的脚手架创建-vue-项目&quot; class=&quot;headerlink&quot; title=&quot;基于 3.x 版本的脚手架创建 vue 项目&quot;&gt;&lt;/a&gt;基于 3.x 版本的脚手架创建 vue 项目&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="https://yanadev.github.io/categories/Vue/"/>
    
    
      <category term="Vue" scheme="https://yanadev.github.io/tags/Vue/"/>
    
      <category term="脚手架" scheme="https://yanadev.github.io/tags/%E8%84%9A%E6%89%8B%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>webpack错误日志</title>
    <link href="https://yanadev.github.io/2020/03/31/webpack%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97/"/>
    <id>https://yanadev.github.io/2020/03/31/webpack%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97/</id>
    <published>2020-03-31T08:19:05.000Z</published>
    <updated>2022-05-22T19:40:00.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Module-not-found-Error-Can’t-resolve-‘-XX-‘-in-‘-XXXX-‘"><a href="#Module-not-found-Error-Can’t-resolve-‘-XX-‘-in-‘-XXXX-‘" class="headerlink" title="Module not found: Error: Can’t resolve ‘ XX ‘ in ‘  XXXX  ‘"></a>Module not found: Error: Can’t resolve ‘ XX ‘ in ‘  XXXX  ‘</h1><p>解决方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i XX</span><br></pre></td></tr></table></figure><h1 id="Vue-warn-Cannot-find-element-app"><a href="#Vue-warn-Cannot-find-element-app" class="headerlink" title="[Vue warn]: Cannot find element: #app"></a>[Vue warn]: Cannot find element: #app</h1><p>打包好的 js（webpack中的 <code>bundle.js</code>） 文件要最后引入，因为要先有 #app 挂载的 div 元素，Vue 才能获取相应的元素 </p><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">原来的 JS 文件位置：&lt;head&gt;<span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/bundle.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="comment">// ================== 修正后位置 =================</span></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">"app"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &lt;!-- ...  --&gt;</span><br><span class="line">    &lt;script src=<span class="string">"/bundle.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br></pre></td></tr></table></figure><h1 id="webpack-p-打包报错"><a href="#webpack-p-打包报错" class="headerlink" title="webpack -p 打包报错"></a>webpack -p 打包报错</h1><blockquote><p>npm ERR! file D:\Z-work space\DOC\reading_IT\webpack-study\package.json<br>npm ERR! code EJSONPARSE<br>npm ERR! JSON.parse Failed to parse json<br>npm ERR! JSON.parse Unexpected token / in JSON at position 223 while parsing near ‘…entBase src –hot”, // 调试开发命令<br>npm ERR! JSON.parse     “dev1”…’<br>npm ERR! JSON.parse Failed to parse package.json data.<br>npm ERR! JSON.parse package.json must be actual JSON, not just JavaScript.</p></blockquote><p>原因：package.json 文件中不能添加 注释 ‘ // ‘</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">JSON</span> 文件中不能添加注释 </span><br><span class="line"><span class="comment">// 很多人利用注释来制定解析规则，这破坏了互操作性（Interoperability）,因此将其剔除</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Module-not-found-Error-Can’t-resolve-‘-XX-‘-in-‘-XXXX-‘&quot;&gt;&lt;a href=&quot;#Module-not-found-Error-Can’t-resolve-‘-XX-‘-in-‘-XXXX-‘&quot; class=&quot;headerlink&quot; title=&quot;Module not found: Error: Can’t resolve ‘ XX ‘ in ‘  XXXX  ‘&quot;&gt;&lt;/a&gt;Module not found: Error: Can’t resolve ‘ XX ‘ in ‘  XXXX  ‘&lt;/h1&gt;&lt;p&gt;解决方法：&lt;/p&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm i XX&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&quot;Vue-warn-Cannot-find-element-app&quot;&gt;&lt;a href=&quot;#Vue-warn-Cannot-find-element-app&quot; class=&quot;headerlink&quot; title=&quot;[Vue warn]: Cannot find element: #app&quot;&gt;&lt;/a&gt;[Vue warn]: Cannot find element: #app&lt;/h1&gt;&lt;p&gt;打包好的 js（webpack中的 &lt;code&gt;bundle.js&lt;/code&gt;） 文件要最后引入，因为要先有 #app 挂载的 div 元素，Vue 才能获取相应的元素 &lt;/p&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="https://yanadev.github.io/categories/webpack/"/>
    
      <category term="debug" scheme="https://yanadev.github.io/categories/webpack/debug/"/>
    
    
      <category term="debug" scheme="https://yanadev.github.io/tags/debug/"/>
    
      <category term="webpack" scheme="https://yanadev.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>Vue单文件组件</title>
    <link href="https://yanadev.github.io/2020/03/31/Vue%E5%8D%95%E6%96%87%E4%BB%B6%E7%BB%84%E4%BB%B6/"/>
    <id>https://yanadev.github.io/2020/03/31/Vue%E5%8D%95%E6%96%87%E4%BB%B6%E7%BB%84%E4%BB%B6/</id>
    <published>2020-03-31T08:18:25.000Z</published>
    <updated>2022-05-22T19:41:13.033Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-单文件组件的基本用法"><a href="#Vue-单文件组件的基本用法" class="headerlink" title="Vue 单文件组件的基本用法"></a>Vue 单文件组件的基本用法</h1><h2 id="单文件组件的组成结构"><a href="#单文件组件的组成结构" class="headerlink" title="单文件组件的组成结构"></a>单文件组件的组成结构</h2><ul><li>template 组件模板区域</li><li>script 业务逻辑区域</li><li>style 样式区域</li></ul><h2 id="webpack中配置vue组件的加载器"><a href="#webpack中配置vue组件的加载器" class="headerlink" title="webpack中配置vue组件的加载器"></a>webpack中配置vue组件的加载器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- 运行 npm i vue-loader vue-template-compiler -D 命令 </span><br><span class="line">- 在 webpack.config.js 配置文件中，添加 vue-loader 的配置项如下： </span><br><span class="line"><span class="keyword">const</span> VueLoaderPlugin = <span class="built_in">require</span>(<span class="string">'vue-loader/lib/plugin'</span>) </span><br><span class="line"><span class="built_in">module</span>.exports = &#123; </span><br><span class="line">  <span class="built_in">module</span>: &#123; </span><br><span class="line">    rules: [       <span class="comment">// ... 其它规则       </span></span><br><span class="line">        &#123; <span class="attr">test</span>: <span class="regexp">/\.vue$/</span>, <span class="attr">loader</span>: <span class="string">'vue-loader'</span> &#125; </span><br><span class="line">    ] </span><br><span class="line">  &#125;, </span><br><span class="line">  plugins: [     <span class="comment">// ... 其它插件     </span></span><br><span class="line">      <span class="keyword">new</span> VueLoaderPlugin() <span class="comment">// 请确保引入这个插件！   ] </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="运行的时候遇到错误："><a href="#运行的时候遇到错误：" class="headerlink" title="运行的时候遇到错误："></a>运行的时候遇到错误：</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Module not found: <span class="built_in">Error</span>: Can<span class="string">'t resolve '</span>vue<span class="string">' in '</span>D:\Z-work space\DOC\reading_IT\webpack-study\src\components<span class="string">'</span></span><br></pre></td></tr></table></figure><p>解决方法： </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vue</span><br></pre></td></tr></table></figure><h1 id="在-webpack-项目中使用-vue"><a href="#在-webpack-项目中使用-vue" class="headerlink" title="在 webpack 项目中使用 vue"></a>在 webpack 项目中使用 vue</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 运行 npm i vue -S 安装vue</span><br><span class="line">- 在 src -&gt; index.js 入口文件中，通过 <span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span> 来导入 vue 构造函数</span><br><span class="line">- 创建 vue 的实例对象，并制订要控制的 el 区域</span><br><span class="line">- 通过 render 函数渲染 App 根组件</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 导入 Vue 构造函数 import Vue from 'vue' </span></span><br><span class="line"><span class="comment">// 2. 导入 App 根组件 import App from './components/App.vue' </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;   </span><br><span class="line">    <span class="comment">// 3. 指定 vm 实例要控制的页面区域   </span></span><br><span class="line">    el: <span class="string">'#app'</span>,   </span><br><span class="line">    <span class="comment">// 4. 通过 render 函数，把指定的组件渲染到 el 区域中   </span></span><br><span class="line">    render: <span class="function"><span class="params">h</span> =&gt;</span> h(App) </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// render: function(createElements) &#123;</span></span><br><span class="line"><span class="comment">//var html = createElements(App) // 返回渲染出来的 HTML结构</span></span><br><span class="line"><span class="comment">//      return html</span></span><br><span class="line"><span class="comment">// &#125;   </span></span><br><span class="line"><span class="comment">// ========== 相当于 =================</span></span><br><span class="line"><span class="comment">// render: createElements =&gt; &#123;</span></span><br><span class="line"><span class="comment">// return createElements(App)                   </span></span><br><span class="line"><span class="comment">// &#125; </span></span><br><span class="line"><span class="comment">// ========== 使用时 =================</span></span><br><span class="line"><span class="comment">// render: h =&gt; h(App)</span></span><br></pre></td></tr></table></figure><h1 id="webpack-打包发布"><a href="#webpack-打包发布" class="headerlink" title="webpack 打包发布"></a>webpack 打包发布</h1><p>通过<code>package.json</code>文件配置打包</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span> &#123;</span><br><span class="line">    <span class="comment">// 用于打包的命令</span></span><br><span class="line">    <span class="string">"build"</span>: <span class="string">"webpack -p"</span>,</span><br><span class="line">    <span class="comment">// 用于开发调试的命令</span></span><br><span class="line">    <span class="string">"dev"</span>: <span class="string">"webpack-dev-server --open --host 127.0.0.1 --port 3000"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打包报错： </p><blockquote><p>npm ERR! file D:\Z-work space\DOC\reading_IT\webpack-study\package.json<br>npm ERR! code EJSONPARSE<br>npm ERR! JSON.parse Failed to parse json<br>npm ERR! JSON.parse Unexpected token / in JSON at position 223 while parsing near ‘…entBase src –hot”, // 调试开发命令<br>npm ERR! JSON.parse     “dev1”…’<br>npm ERR! JSON.parse Failed to parse package.json data.<br>npm ERR! JSON.parse package.json must be actual JSON, not just JavaScript.</p></blockquote><p>原因：package.json 文件中不能添加 注释 ‘ // ‘</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Vue-单文件组件的基本用法&quot;&gt;&lt;a href=&quot;#Vue-单文件组件的基本用法&quot; class=&quot;headerlink&quot; title=&quot;Vue 单文件组件的基本用法&quot;&gt;&lt;/a&gt;Vue 单文件组件的基本用法&lt;/h1&gt;&lt;h2 id=&quot;单文件组件的组成结构&quot;&gt;&lt;a href=&quot;#单文件组件的组成结构&quot; class=&quot;headerlink&quot; title=&quot;单文件组件的组成结构&quot;&gt;&lt;/a&gt;单文件组件的组成结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;template 组件模板区域&lt;/li&gt;
&lt;li&gt;script 业务逻辑区域&lt;/li&gt;
&lt;li&gt;style 样式区域&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;webpack中配置vue组件的加载器&quot;&gt;&lt;a href=&quot;#webpack中配置vue组件的加载器&quot; class=&quot;headerlink&quot; title=&quot;webpack中配置vue组件的加载器&quot;&gt;&lt;/a&gt;webpack中配置vue组件的加载器&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- 运行 npm i vue-loader vue-template-compiler -D 命令 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 在 webpack.config.js 配置文件中，添加 vue-loader 的配置项如下： &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; VueLoaderPlugin = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;vue-loader/lib/plugin&#39;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;: &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rules: [       &lt;span class=&quot;comment&quot;&gt;// ... 其它规则       &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; &lt;span class=&quot;attr&quot;&gt;test&lt;/span&gt;: &lt;span class=&quot;regexp&quot;&gt;/\.vue$/&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;loader&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;vue-loader&#39;&lt;/span&gt; &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  plugins: [     &lt;span class=&quot;comment&quot;&gt;// ... 其它插件     &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; VueLoaderPlugin() &lt;span class=&quot;comment&quot;&gt;// 请确保引入这个插件！   ] &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="https://yanadev.github.io/categories/Vue/"/>
    
      <category term="组件" scheme="https://yanadev.github.io/categories/Vue/%E7%BB%84%E4%BB%B6/"/>
    
    
      <category term="Vue" scheme="https://yanadev.github.io/tags/Vue/"/>
    
      <category term="单文件组件" scheme="https://yanadev.github.io/tags/%E5%8D%95%E6%96%87%E4%BB%B6%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>token原理</title>
    <link href="https://yanadev.github.io/2020/03/31/token%E5%8E%9F%E7%90%86/"/>
    <id>https://yanadev.github.io/2020/03/31/token%E5%8E%9F%E7%90%86/</id>
    <published>2020-03-31T08:17:26.000Z</published>
    <updated>2022-05-22T19:43:22.956Z</updated>
    
    <content type="html"><![CDATA[<p><img src="//yanadev.github.io/2020/03/31/token原理/image-20200320012547012.png" alt="image-20200320012547012"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 为路由对象，添加 beforeEach 导航守卫  </span></span><br><span class="line">router.beforeEach(</span><br><span class="line">    (to, <span class="keyword">from</span>, next) =&gt; &#123;    </span><br><span class="line">        <span class="comment">// 如果用户访问的登录页，直接放行    </span></span><br><span class="line">        <span class="keyword">if</span> (to.path === <span class="string">'/login'</span>) <span class="keyword">return</span> next()    </span><br><span class="line">        <span class="comment">// 从 sessionStorage 中获取到 保存的 token 值    </span></span><br><span class="line">        <span class="keyword">const</span> tokenStr = <span class="built_in">window</span>.sessionStorage.getItem(<span class="string">'token'</span>)    </span><br><span class="line">        <span class="comment">// 没有token，强制跳转到登录页    </span></span><br><span class="line">        <span class="keyword">if</span> (!tokenStr) <span class="keyword">return</span> next(<span class="string">'/login'</span>) </span><br><span class="line">   next() </span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><a id="more"></a><blockquote><p>next() // 放行</p><p>next(‘/login’) // 强制跳转</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;//yanadev.github.io/2020/03/31/token原理/image-20200320012547012.png&quot; alt=&quot;image-20200320012547012&quot;&gt;&lt;/p&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// 为路由对象，添加 beforeEach 导航守卫  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.beforeEach(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (to, &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;, next) =&amp;gt; &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 如果用户访问的登录页，直接放行    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (to.path === &lt;span class=&quot;string&quot;&gt;&#39;/login&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; next()    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 从 sessionStorage 中获取到 保存的 token 值    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; tokenStr = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.sessionStorage.getItem(&lt;span class=&quot;string&quot;&gt;&#39;token&#39;&lt;/span&gt;)    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 没有token，强制跳转到登录页    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!tokenStr) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; next(&lt;span class=&quot;string&quot;&gt;&#39;/login&#39;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		next() &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="token" scheme="https://yanadev.github.io/categories/token/"/>
    
      <category term="令牌" scheme="https://yanadev.github.io/categories/token/%E4%BB%A4%E7%89%8C/"/>
    
      <category term="登陆校验" scheme="https://yanadev.github.io/categories/token/%E4%BB%A4%E7%89%8C/%E7%99%BB%E9%99%86%E6%A0%A1%E9%AA%8C/"/>
    
    
      <category term="token" scheme="https://yanadev.github.io/tags/token/"/>
    
      <category term="令牌" scheme="https://yanadev.github.io/tags/%E4%BB%A4%E7%89%8C/"/>
    
      <category term="登陆校验" scheme="https://yanadev.github.io/tags/%E7%99%BB%E9%99%86%E6%A0%A1%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>浏览器 console面板字符串与数字</title>
    <link href="https://yanadev.github.io/2020/03/31/%E6%B5%8F%E8%A7%88%E5%99%A8-console%E9%9D%A2%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%95%B0%E5%AD%97/"/>
    <id>https://yanadev.github.io/2020/03/31/%E6%B5%8F%E8%A7%88%E5%99%A8-console%E9%9D%A2%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%95%B0%E5%AD%97/</id>
    <published>2020-03-31T08:16:53.000Z</published>
    <updated>2022-05-22T19:57:41.366Z</updated>
    
    <content type="html"><![CDATA[<p><img src="//yanadev.github.io/2020/03/31/浏览器-console面板字符串与数字/image-20200303141915864.png" alt="image-20200303141915864"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;//yanadev.github.io/2020/03/31/浏览器-console面板字符串与数字/image-20200303141915864.png&quot; alt=&quot;image-20200303141915864&quot;&gt;&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="Browser" scheme="https://yanadev.github.io/categories/Browser/"/>
    
      <category term="浏览器" scheme="https://yanadev.github.io/categories/Browser/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    
      <category term="Browser" scheme="https://yanadev.github.io/tags/Browser/"/>
    
      <category term="浏览器" scheme="https://yanadev.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Vue基础</title>
    <link href="https://yanadev.github.io/2020/03/31/Vue%E5%9F%BA%E7%A1%80/"/>
    <id>https://yanadev.github.io/2020/03/31/Vue%E5%9F%BA%E7%A1%80/</id>
    <published>2020-03-31T08:15:56.000Z</published>
    <updated>2022-05-22T19:40:35.055Z</updated>
    
    <content type="html"><![CDATA[<h1 id="v-bind-三种用法"><a href="#v-bind-三种用法" class="headerlink" title="v-bind 三种用法"></a>v-bind 三种用法</h1><ol><li>直接v-bind</li><li>简化：<code>:</code></li><li>绑定的时候拼接绑定内容：<code>title=&quot;btnTitle + &#39;，这是追加内容&#39;&quot;</code></li></ol><h1 id="v-on-绑定事件"><a href="#v-on-绑定事件" class="headerlink" title="v-on 绑定事件"></a>v-on 绑定事件</h1><h1 id="表单控件使用"><a href="#表单控件使用" class="headerlink" title="表单控件使用"></a>表单控件使用</h1><h2 id="1-radio"><a href="#1-radio" class="headerlink" title="1. radio"></a>1. radio</h2><p>使用 <code>v-model</code> 绑定参数，当<code>参数=value</code>的时候，该控件被选中</p><h2 id="2-checkbox"><a href="#2-checkbox" class="headerlink" title="2. checkbox"></a>2. checkbox</h2><a id="more"></a><p>使用 <code>v-model</code> 绑定参数，当 <code>参数=value</code> 的时候，该控件被选中</p><blockquote><p>注意：使用 checkbox 的时候，存储数据应使用 数组</p><p>获取数据：默认获取以下类型数据，如不想获得  <code>__ob__</code> 监视器对象，可以使用 <code>toString()</code> 转成字符串</p></blockquote><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200303144057272.png" alt="image-20200303144057272"></p><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200303144357360.png" alt="image-20200303144357360"></p><h2 id="3-select-option"><a href="#3-select-option" class="headerlink" title="3. select - option"></a>3. select - option</h2><p>使用 <code>v-model</code> 绑定参数给 <code>select</code> 标签，对应的 多个<code>option</code> 标签的 <code>value</code> 应不同，当 <code>参数=value</code>时，相应的 <code>option</code> 被选中</p><blockquote><p>该控件使用有两种情况： 1. 单选，使用数值存储即可</p><pre><code>2. 多选，在select标签上添加参数 `multiple` ，对应的参数存储使用 数组</code></pre></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>职业：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">"occupation"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>请选择职业..<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>教师<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>软件工程师<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>动画特效师<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200303164634858.png" alt="image-20200303164634858"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>职业：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">"occupation"</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>请选择职业..<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>教师<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>软件工程师<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>动画特效师<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200303164543760.png" alt="image-20200303164543760"></p><h1 id="表单修饰符"><a href="#表单修饰符" class="headerlink" title="表单修饰符"></a>表单修饰符</h1><blockquote><ul><li><p>.number：转化为数值</p><ul><li>input标签输入直接是字符串，使用 <code>.number</code> 就可以转化成数值，这样和数值进行运算的时候才不会变成字符串的拼接</li></ul></li><li><p>.trim：去掉开始和结尾的空格</p></li><li><p>.lazy：将 input 时间切换为 change 事件（即在失去焦点或按下回车键才更新）</p></li></ul></blockquote><h2 id="number"><a href="#number" class="headerlink" title=".number:"></a><code>.number</code>:</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'app'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"age"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"handle"</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">            age: <span class="string">''</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="actionscript">            handle: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("age:" + this.age + '---' + this.age.length)</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("month:" + this.month)</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="keyword">this</span>.age + <span class="number">13</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// cosole.log(this.month)</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">// 输入 14 =&gt; 1413 (字符串拼接)</span><br></pre></td></tr></table></figure><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200304234501052.png" alt="image-20200304234501052"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'app'</span>&gt;</span></span><br><span class="line">+    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model.number</span>=<span class="string">"age"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"handle"</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">            age: <span class="string">''</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="actionscript">            handle: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("age:" + this.age + '---' + this.age.length)</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("month:" + this.month)</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="keyword">this</span>.age + <span class="number">13</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// cosole.log(this.month)</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">// 输入 14 =&gt; 27 (数值运算)</span><br></pre></td></tr></table></figure><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200304234404590.png" alt="image-20200304234404590"></p><h2 id="trim"><a href="#trim" class="headerlink" title=".trim:"></a><code>.trim</code>:</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'app'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"age"</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"age"</span> <span class="attr">v-model.trim</span>=<span class="string">"age"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"month"</span>&gt;</span>月份<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"month"</span> <span class="attr">v-model</span>=<span class="string">"month"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;p&gt;&#123;&#123;month&#125;&#125;&lt;/p&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;input type="text" v-model="month"&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"handle"</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="actionscript">            age: <span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">            month: <span class="string">''</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="actionscript">            handle: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">"age:"</span> + <span class="keyword">this</span>.age + <span class="string">'---'</span> + <span class="keyword">this</span>.age.length)</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">"month:"</span> + <span class="keyword">this</span>.month + <span class="string">'---'</span> + <span class="keyword">this</span>.month.length)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">// 年龄使用.trim，月份不使用以作对比</span><br></pre></td></tr></table></figure><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200304235617833.png" alt="image-20200304235617833"></p><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200304235645605.png" alt="image-20200304235645605"></p><p>使用了 <code>.trim</code> 标识符的 <code>input</code> 在失去焦点的时候就执行该命令，马上删去开始和结尾的空格</p><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200304235841490.png" alt="image-20200304235841490"></p><h1 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h1><p>内置指令不满足需求的时候</p><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>格式化数据，可多个使用，后一个过滤器是处理 <code>前一个过滤器产生的结果</code></p><h1 id="数组API"><a href="#数组API" class="headerlink" title="数组API"></a>数组API</h1><ul><li><p>变异方法（修改原有数组）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- push()</span><br><span class="line">- pop()</span><br><span class="line">- shift()</span><br><span class="line">- unshift()</span><br><span class="line">- splice()</span><br><span class="line">- sort()</span><br><span class="line">- reverse()</span><br></pre></td></tr></table></figure></li><li><p>替换数组（生成新数组）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- filter()</span><br><span class="line">- concat()</span><br><span class="line">- slice()</span><br></pre></td></tr></table></figure></li></ul><h1 id="数组响应式变化"><a href="#数组响应式变化" class="headerlink" title="数组响应式变化"></a>数组响应式变化</h1><blockquote><p> 通过索引修改数组不会响应式变化</p><ul><li>vm.list[1] = ‘lemon’</li></ul></blockquote><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200305142625176.png" alt="image-20200305142500790"></p><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200305142807369.png" alt="image-20200305142807369"></p><h2 id="修改响应式数据"><a href="#修改响应式数据" class="headerlink" title="修改响应式数据"></a>修改响应式数据</h2><ul><li>Vue.set( vm.items, indexOfItem, newValue )</li><li>vm.$set( vm.items, indexOfItem, newValue )<ul><li>vm.items =&gt; 数组名称</li><li>indexOfItem =&gt; 数组索引 / 也可以修改对象的属性值</li><li>newValue =&gt; 数组的新值</li></ul></li></ul><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200305143254323.png" alt="image-20200305143254323"></p><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200305143142020.png" alt="image-20200305143142020"></p><h2 id="修改对象属性值"><a href="#修改对象属性值" class="headerlink" title="修改对象属性值"></a>修改对象属性值</h2><p>通过属性值修改数组不会响应式变化</p><h3 id="vm-info-gender-’male’"><a href="#vm-info-gender-’male’" class="headerlink" title="vm.info.gender=’male’"></a>vm.info.gender=’male’</h3><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200305144555650.png" alt="image-20200305144555650"></p><h3 id="vm-set-vm-info-‘gender’-‘male’"><a href="#vm-set-vm-info-‘gender’-‘male’" class="headerlink" title="vm.$set(vm.info, ‘gender’, ‘male’)"></a>vm.$set(vm.info, ‘gender’, ‘male’)</h3><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200305144956925.png" alt="image-20200305144956925"></p><p><img src="//yanadev.github.io/2020/03/31/Vue基础/image-20200305145041888.png" alt="image-20200305145041888"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;v-bind-三种用法&quot;&gt;&lt;a href=&quot;#v-bind-三种用法&quot; class=&quot;headerlink&quot; title=&quot;v-bind 三种用法&quot;&gt;&lt;/a&gt;v-bind 三种用法&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;直接v-bind&lt;/li&gt;
&lt;li&gt;简化：&lt;code&gt;:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;绑定的时候拼接绑定内容：&lt;code&gt;title=&amp;quot;btnTitle + &amp;#39;，这是追加内容&amp;#39;&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;h1 id=&quot;v-on-绑定事件&quot;&gt;&lt;a href=&quot;#v-on-绑定事件&quot; class=&quot;headerlink&quot; title=&quot;v-on 绑定事件&quot;&gt;&lt;/a&gt;v-on 绑定事件&lt;/h1&gt;&lt;h1 id=&quot;表单控件使用&quot;&gt;&lt;a href=&quot;#表单控件使用&quot; class=&quot;headerlink&quot; title=&quot;表单控件使用&quot;&gt;&lt;/a&gt;表单控件使用&lt;/h1&gt;&lt;h2 id=&quot;1-radio&quot;&gt;&lt;a href=&quot;#1-radio&quot; class=&quot;headerlink&quot; title=&quot;1. radio&quot;&gt;&lt;/a&gt;1. radio&lt;/h2&gt;&lt;p&gt;使用 &lt;code&gt;v-model&lt;/code&gt; 绑定参数，当&lt;code&gt;参数=value&lt;/code&gt;的时候，该控件被选中&lt;/p&gt;&lt;h2 id=&quot;2-checkbox&quot;&gt;&lt;a href=&quot;#2-checkbox&quot; class=&quot;headerlink&quot; title=&quot;2. checkbox&quot;&gt;&lt;/a&gt;2. checkbox&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="https://yanadev.github.io/categories/Vue/"/>
    
    
      <category term="$set 修改响应式数据" scheme="https://yanadev.github.io/tags/set-%E4%BF%AE%E6%94%B9%E5%93%8D%E5%BA%94%E5%BC%8F%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Vue指令" scheme="https://yanadev.github.io/tags/Vue%E6%8C%87%E4%BB%A4/"/>
    
      <category term="基础" scheme="https://yanadev.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
</feed>
