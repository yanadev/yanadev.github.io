<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanaChen</title>
  
  <subtitle>_踩坑_填坑_日常</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yanadev.github.io/"/>
  <updated>2022-08-17T16:50:54.159Z</updated>
  <id>https://yanadev.github.io/</id>
  
  <author>
    <name>Yana</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>webpack实战</title>
    <link href="https://yanadev.github.io/2022/08/15/webpack%E5%AE%9E%E6%88%98/"/>
    <id>https://yanadev.github.io/2022/08/15/webpack%E5%AE%9E%E6%88%98/</id>
    <published>2022-08-15T13:27:07.000Z</published>
    <updated>2022-08-17T16:50:54.159Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从零配置-webpack-包含"><a href="#从零配置-webpack-包含" class="headerlink" title="从零配置 webpack 包含"></a>从零配置 webpack 包含</h1><ul><li>指定默认入口 entry</li><li>指定默认出口 output</li><li>指定 mode 打包模式</li><li>指定 module 中的 loader：支持其他文件类型并转化为有效模块，添加到依赖图<ul><li>loader 本身是一个函数，接收源文件，返回转换结果</li></ul></li><li>指定 plugins 中的 插件：bundle 文件优化，资源管理和环境变量注入（整个构建过程） </li></ul><a id="more"></a><blockquote><p>注意需要搭建环境支持 webpack</p><ol><li>安装 nvm 管理 node.js 版本</li><li>安装 node 和 npm <code>nvm install v10.15.3</code></li></ol><p><code>node/npm -v</code> 可查看是否安装成功</p></blockquote><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><ol><li><p>创建空目录和 package.json </p><p>mkdir my-react</p><p>cd my-react</p><p>npm init -y</p></li><li><p>安装 webpack、webpack-cli </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack webpack-cli -D</span><br><span class="line"></span><br><span class="line">./node_modules/.bin/webpack -v  <span class="comment"># 检查是否安装成功</span></span><br></pre></td></tr></table></figure></li><li><p>简单案例</p><p><strong>根目录下 webpack.config.js</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">const path = require('path');</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  entry: './src/index.jsx',</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.resolve(__dirname, './dist'),</span><br><span class="line">    filename: 'bundle.js'</span><br><span class="line">  &#125;,</span><br><span class="line">  mode: 'production',</span><br><span class="line">  module: &#123;&#125;,</span><br><span class="line">  plugins: []</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>配置 <code>package.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"scripts"</span>:&#123;</span><br><span class="line">         <span class="attr">"dev"</span>: <span class="string">"webpack --config webpack.config.js"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行 <code>npm run dev</code> 即会生成 <code>dist</code> 下文件 <code>bundle.js</code> </p></li></ol><h1 id="常见-loaders"><a href="#常见-loaders" class="headerlink" title="常见 loaders"></a>常见 loaders</h1><ul><li>babel-loader 转换 ES6、ES7等 JS 新特性语法</li><li>css-loader 支持 .css 文件加载和解析</li><li>less-loader less 转换成 css</li><li>ts-loader 将 TS 转换成 JS</li><li>file-loader 打包图片、字体等</li><li>raw-loader 将文件以字符形式导入</li><li>thread-loader 多进程打包 js 和 css</li></ul><h1 id="常见-plugins"><a href="#常见-plugins" class="headerlink" title="常见 plugins"></a>常见 plugins</h1><ul><li>CommonsChunkPlugin 相同 chunks 模块代码提取成公共js</li><li>CleanWebpackPlugin 清理构建目录</li><li>ExtractTextWebpackPlugin 将 css 从bundle 中提取成独立的 css 文件</li><li>CopyWebpackPlugin 将文件或者文件夹拷贝到构建的输出目录</li><li>HtmlWebpackPlugin 创建 html 文件承载 bundle</li><li>UglifyjsWebpackPlugin 压缩 js</li><li>ZipWebpackPlugin 将打包出来的资源生成一个  zip 包</li></ul><h1 id="Mode"><a href="#Mode" class="headerlink" title="Mode"></a>Mode</h1><p>设置 mode 可以使用 webpack 内置的函数</p><p><strong>production(默认)</strong> / development / none </p><h1 id="loader-资源解析（支持不同文件）"><a href="#loader-资源解析（支持不同文件）" class="headerlink" title="loader 资源解析（支持不同文件）"></a>loader 资源解析（支持不同文件）</h1><h2 id="babel-loader"><a href="#babel-loader" class="headerlink" title="babel-loader"></a>babel-loader</h2><h3 id="解析-ES6"><a href="#解析-ES6" class="headerlink" title="解析 ES6"></a>解析 ES6</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">   module: &#123;</span><br><span class="line">       rules: [</span><br><span class="line">         &#123;</span><br><span class="line">           test: /\.js$/,</span><br><span class="line">           use: 'babel-loader'</span><br><span class="line">         &#125;</span><br><span class="line">       ]</span><br><span class="line">   &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建 .babelrc 文件或者 package.json 中设置 babel 字段的属性</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"presets"</span>: [</span><br><span class="line">    <span class="string">"@babel/preset-env"</span>,</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解析-React-JSX"><a href="#解析-React-JSX" class="headerlink" title="解析 React JSX"></a>解析 React JSX</h3><p>安装 <code>@babel/preset-react</code>，并在 <code>.babelrc</code> 文件中添加该配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"presets"</span>: [</span><br><span class="line">    <span class="string">"@babel/preset-react"</span></span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="css-loader、style-loader-解析-css"><a href="#css-loader、style-loader-解析-css" class="headerlink" title="css-loader、style-loader 解析 css"></a>css-loader、style-loader 解析 css</h2><ul><li><p>css-loader 加载 .css 文件，并转换为 commonjs 对象</p></li><li><p>style-loader 通过 style 标签将样式插入到 head 中</p></li></ul><blockquote><p>注意：loader 的执行顺序是由下到上（栈结构：后进先出）</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.css$/,</span><br><span class="line">        use: [</span><br><span class="line">          'style-loader',</span><br><span class="line">          'css-loader'</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="less-loader、sass-loader-解析-less、sass"><a href="#less-loader、sass-loader-解析-less、sass" class="headerlink" title="less-loader、sass-loader 解析 less、sass"></a>less-loader、sass-loader 解析 less、sass</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.less$/,</span><br><span class="line">        use: [</span><br><span class="line">          'style-loader',</span><br><span class="line">          'css-loader',</span><br><span class="line">          'less-loader'</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.sass$/,</span><br><span class="line">        use: [</span><br><span class="line">          'style-loader',</span><br><span class="line">          'css-loader',</span><br><span class="line">          'sass-loader'</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="file-loader-解析图片、字体"><a href="#file-loader-解析图片、字体" class="headerlink" title="file-loader 解析图片、字体"></a>file-loader 解析图片、字体</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(png|jpg|jpeg|gif)$/,</span><br><span class="line">        use: ['file-loader']</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(woff|woff2|eot|ttf|otf)$/,</span><br><span class="line">        use: ['file-loader']</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="url-loader-解析图片、字体，较小资源转base64"><a href="#url-loader-解析图片、字体，较小资源转base64" class="headerlink" title="url-loader 解析图片、字体，较小资源转base64"></a>url-loader 解析图片、字体，较小资源转base64</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.(png|jpg|jpeg|gif)$/,</span><br><span class="line">        use: [</span><br><span class="line">          &#123;</span><br><span class="line">            loader: 'url-loader',</span><br><span class="line">            options: &#123;</span><br><span class="line">              limit: 10240</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="文件监听：源码变化，自动构建"><a href="#文件监听：源码变化，自动构建" class="headerlink" title="文件监听：源码变化，自动构建"></a>文件监听：源码变化，自动构建</h1><h2 id="启动监听模式"><a href="#启动监听模式" class="headerlink" title="启动监听模式"></a>启动监听模式</h2><ul><li>启动命令加上 <code>--watch</code> 参数</li><li>配置 webpack.config.js 中设置 <code>watch: true</code></li></ul><h2 id="使用-定义启动脚本"><a href="#使用-定义启动脚本" class="headerlink" title="使用(定义启动脚本)"></a>使用(定义启动脚本)</h2><blockquote><p>该方法存在缺陷：每次需要手动刷新浏览器</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"watch"</span>: <span class="string">"webpack --watch"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><p>轮询判断<strong>文件的最后编辑时间</strong>是否变化</p><p>若某个文件发生变化，并不会立刻告知监听者，而是先缓存，等 aggregateTimeout</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    watch: true,</span><br><span class="line">    watchOptions: &#123;</span><br><span class="line">        ignored: /node_modules/,</span><br><span class="line">        aggregateTimeout: 300,</span><br><span class="line">        poll: 1000</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="热更新"><a href="#热更新" class="headerlink" title="热更新"></a>热更新</h1><h2 id="webpack-dev-server"><a href="#webpack-dev-server" class="headerlink" title="webpack-dev-server"></a>webpack-dev-server</h2><ul><li>不刷新浏览器</li><li>不输出文件，而是放在内存中</li><li>使用 HotModuleReplacementPlugin 插件</li></ul><p><strong>只需要在 scripts 脚本中设置对应属性即可</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"dev"</span>: <span class="string">"webpack-dev-server --open"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="webpack-dev-middleware"><a href="#webpack-dev-middleware" class="headerlink" title="webpack-dev-middleware"></a>webpack-dev-middleware</h2><p>将 webpack 输出的文件传输给服务器</p><p>适用于灵活定制场景</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">const express = require(&apos;express&apos;)</span><br><span class="line">const webpack = require(&apos;webpack&apos;)</span><br><span class="line">const webpackDevMiddleware = require(&apos;webpack-dev-middleware&apos;)</span><br><span class="line"></span><br><span class="line">const app = express()</span><br><span class="line">const config = require(&apos;./webpack.config.js&apos;)</span><br><span class="line">const compiler = webpack(config)</span><br><span class="line"></span><br><span class="line">app.use(webpackDevMiddleware(compiler, &#123;</span><br><span class="line">publicPath: config.output.publicPath </span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line">app.listen(3000, function() &#123;</span><br><span class="line">console.log(&apos;Example app listening on port 3000!\n&apos;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="热更新原理分析"><a href="#热更新原理分析" class="headerlink" title="热更新原理分析"></a>热更新原理分析</h2><p><img src="//yanadev.github.io/2022/08/15/webpack实战/image-20220816235739690.png" alt="image-20220816235739690"></p><h1 id="文件指纹（打包输出的文件名后缀）"><a href="#文件指纹（打包输出的文件名后缀）" class="headerlink" title="文件指纹（打包输出的文件名后缀）"></a>文件指纹（打包输出的文件名后缀）</h1><ul><li>hash 整个项目构建相关，只要项目文件修改，hash 值改变</li><li>chunkhash 和 webpack 打包的 chunk 有关，不同的 entry 会生成不同的 chunkhash</li><li>contenthash 根据文件内容来定义 hash，文件内容不变，则 contenthash 不变</li></ul><h2 id="指纹设置"><a href="#指纹设置" class="headerlink" title="指纹设置"></a>指纹设置</h2><ul><li><p>js 设置 output 的 filename，使用 chunkhash</p><p>filename: ‘[name] [chunkhash:8]’</p></li><li><p>css 设置 MiniCssExtractPlugin 的 filename 使用 contenthash</p><p>filename:`[name] [contenthash:8]`.css</p></li><li><p>图片设置 file-loader 的 name，使用 hash</p><p><strong>注意：文件的 hash 同js 、css 的 hash标准不同，图片的 hash 表示的是内容的hash</strong></p><p><img src="//yanadev.github.io/2022/08/15/webpack实战/image-20220817000257135.png" alt="image-20220817000257135"></p></li></ul><h1 id="代码压缩"><a href="#代码压缩" class="headerlink" title="代码压缩"></a>代码压缩</h1><ul><li><p>js webpack 内置了 uglifyjs-webpack-plugin</p></li><li><p>css 使用 optimize-css-assets-webpack-plugin + cssnano</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">        new OptimizeCSSAssetsPlugin(&#123;</span><br><span class="line">            assetNameRegExp: /\.css$/g,</span><br><span class="line">            cssProcessor: require('cssnano')</span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>html 修改 html-webpack-plugin 设置压缩参数</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: path.join(__dirname, 'src/search.html'),</span><br><span class="line">            filename: 'search.html',</span><br><span class="line">            chunks: ['search'],</span><br><span class="line">            inject: true,</span><br><span class="line">            minify: &#123;</span><br><span class="line">                html5: true,</span><br><span class="line">                collapseWhitespace: true,</span><br><span class="line">                preserveLineBreaks: false,</span><br><span class="line">                minifyCSS: true,</span><br><span class="line">                minifyJS: true,</span><br><span class="line">                removeComments: false</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>template 设置被压缩的 html 文件</li><li>filename 设置输出文件名</li><li>chunks 设置输出文件所属的 chunk 包</li><li>minify 设置压缩参数</li></ul></li></ul><h1 id="清理构建目录"><a href="#清理构建目录" class="headerlink" title="清理构建目录"></a>清理构建目录</h1><h2 id="手动"><a href="#手动" class="headerlink" title="手动"></a>手动</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ./dist &amp;&amp; webpack</span><br><span class="line">rimraf ./dist &amp;&amp; webpack</span><br></pre></td></tr></table></figure><h2 id="自动清理构建目录"><a href="#自动清理构建目录" class="headerlink" title="自动清理构建目录"></a>自动清理构建目录</h2><p>使用 clean-webpack-plugin，默认会删除 output 指定的输出目录</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">        new CleanWebpackPlugin()</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="兼容"><a href="#兼容" class="headerlink" title="兼容"></a>兼容</h1><h2 id="postcss-loader-autoprefixer-插件自动补齐-css3-前缀"><a href="#postcss-loader-autoprefixer-插件自动补齐-css3-前缀" class="headerlink" title="postcss-loader + autoprefixer 插件自动补齐 css3 前缀"></a>postcss-loader + autoprefixer 插件自动补齐 css3 前缀</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.less$/,</span><br><span class="line">        use: [</span><br><span class="line">          'style-loader',</span><br><span class="line">          'css-loader',</span><br><span class="line">          'less-loader',</span><br><span class="line">          &#123;</span><br><span class="line">            loader: 'postcss-loader',</span><br><span class="line">            options: &#123;</span><br><span class="line">              plugins: reuqire('autoprefixer')(&#123;</span><br><span class="line">                browsers: [</span><br><span class="line">                  "&gt;0.2%",</span><br><span class="line">                  "not dead",</span><br><span class="line">                  "not op_mini all"]</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>可在 postcss-loader 的 options.plugins 中设置，也可设置 package.json 中设置 browser 属性</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"browserslist"</span>: &#123;</span><br><span class="line">        <span class="attr">"production"</span>: [</span><br><span class="line">          <span class="string">"&gt;0.2%"</span>,</span><br><span class="line">          <span class="string">"not dead"</span>,</span><br><span class="line">          <span class="string">"not op_mini all"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"development"</span>: [</span><br><span class="line">          <span class="string">"last 1 chrome version"</span>,</span><br><span class="line">          <span class="string">"last 1 firefox version"</span>,</span><br><span class="line">          <span class="string">"last 1 safari version"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="px2rem-loader-css-px-自动转换-rem"><a href="#px2rem-loader-css-px-自动转换-rem" class="headerlink" title="px2rem-loader css px 自动转换 rem"></a>px2rem-loader css px 自动转换 rem</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test:/\.less$/,</span><br><span class="line">                use:[</span><br><span class="line">                    'style-loader',</span><br><span class="line">                    'css-loader',</span><br><span class="line">                    'less-loader',</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader: 'px2ren-loader',</span><br><span class="line">                        options: &#123;</span><br><span class="line">                            remUnit: 75,</span><br><span class="line">                            remPrecision: 8 </span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="资源内联"><a href="#资源内联" class="headerlink" title="资源内联"></a>资源内联</h2><ul><li>代码层面<ul><li>页面框架初始化脚本</li><li>上报相关打点</li><li>css 内联避免页面闪动</li></ul></li><li>请求层面：减少HTTP网络请求数<ul><li>小图片或者字体内联 url-loader</li></ul></li></ul><h3 id="html-和-js-内联（raw-loader）"><a href="#html-和-js-内联（raw-loader）" class="headerlink" title="html 和 js 内联（raw-loader）"></a>html 和 js 内联（raw-loader）</h3><ul><li><p>html    </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;$&#123;<span class="built_in">require</span>(<span class="string">'raw-loader!babel-loader!./meta.html'</span>)&#125;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;$&#123;<span class="built_in">require</span>(<span class="string">'raw-loader!babel-loader!../node_modules/lib-flexible'</span>)&#125;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>css（两种方案）</p><ul><li><p>style-loader</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test: /\.scss$/,</span><br><span class="line">                use:[</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader: 'style-loader',</span><br><span class="line">                        options: &#123;</span><br><span class="line">                            insertAt: 'top', // 插入到 &lt;head&gt;</span><br><span class="line">                            singleton: true // 将所有的 style 标签合并成一个</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>html-inline-css-webpack-plugin</p></li></ul></li></ul><h1 id="多页面应用（MPA）"><a href="#多页面应用（MPA）" class="headerlink" title="多页面应用（MPA）"></a>多页面应用（MPA）</h1><p>对应的就是 单页面应用（SPA）</p><h2 id="打包思路"><a href="#打包思路" class="headerlink" title="打包思路"></a>打包思路</h2><p>每个页面新增一个 entry，一个 html-webpack-plugin</p><blockquote><p>缺点：每次新增页面或者删除页面需要更改 webpack 配置</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        index: './src/index.js',</span><br><span class="line">        search: './src/search.js'</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="打包通用方案"><a href="#打包通用方案" class="headerlink" title="打包通用方案"></a>打包通用方案</h2><p>思路：动态获取 entry ，设置 html-webpack-plugin 数量</p><blockquote><p>利用 glob.sync 识别符合条件的文件数组（设置匹配规则）</p><p>entry: glob.sync(path.join(__dirname, ‘./src/*/index.js’))</p></blockquote><h1 id="source-map-定位源码"><a href="#source-map-定位源码" class="headerlink" title="source map 定位源码"></a>source map 定位源码</h1><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><p>eval 使用 eval 包裹模块代码</p><p>source map 产生 .map 文件</p><p>cheap 不包含列信息</p><p>inline 将 .map 作为 DataURL 嵌入，不单独生成 .map 文件</p><p>module 包含 loader 的 sourcemap</p><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><p><img src="//yanadev.github.io/2022/08/15/webpack实战/image-20220817004339742.png" alt="image-20220817004339742"></p><h1 id="基础库分离"><a href="#基础库分离" class="headerlink" title="基础库分离"></a>基础库分离</h1><p>思路：将 react、react-dom 基础包通过 cdn 引入，不打入 bundle</p><p>方法：使用 html-webpack-externals-plugin</p><p><img src="//yanadev.github.io/2022/08/15/webpack实战/image-20220817004445679.png" alt="image-20220817004445679"></p><h1 id="SplitChunksPlugin公共脚本分离（内置插件）"><a href="#SplitChunksPlugin公共脚本分离（内置插件）" class="headerlink" title="SplitChunksPlugin公共脚本分离（内置插件）"></a>SplitChunksPlugin公共脚本分离（内置插件）</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;从零配置-webpack-包含&quot;&gt;&lt;a href=&quot;#从零配置-webpack-包含&quot; class=&quot;headerlink&quot; title=&quot;从零配置 webpack 包含&quot;&gt;&lt;/a&gt;从零配置 webpack 包含&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;指定默认入口 entry&lt;/li&gt;
&lt;li&gt;指定默认出口 output&lt;/li&gt;
&lt;li&gt;指定 mode 打包模式&lt;/li&gt;
&lt;li&gt;指定 module 中的 loader：支持其他文件类型并转化为有效模块，添加到依赖图&lt;ul&gt;
&lt;li&gt;loader 本身是一个函数，接收源文件，返回转换结果&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;指定 plugins 中的 插件：bundle 文件优化，资源管理和环境变量注入（整个构建过程） &lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>React之类组件</title>
    <link href="https://yanadev.github.io/2022/08/15/React%E4%B9%8B%E7%B1%BB%E7%BB%84%E4%BB%B6/"/>
    <id>https://yanadev.github.io/2022/08/15/React%E4%B9%8B%E7%B1%BB%E7%BB%84%E4%BB%B6/</id>
    <published>2022-08-15T13:06:42.000Z</published>
    <updated>2022-08-15T13:13:17.040Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yanadev.github.io/2022/08/02/sass/"/>
    <id>https://yanadev.github.io/2022/08/02/sass/</id>
    <published>2022-08-02T09:49:53.790Z</published>
    <updated>2022-08-03T09:25:35.370Z</updated>
    
    <content type="html"><![CDATA[<h1 id="特色"><a href="#特色" class="headerlink" title="特色"></a>特色</h1><ul><li>完全兼容 css3</li><li>变量、嵌套（nesting）、混合（mixins）等</li><li>通过函数进行颜色与属性值的计算</li><li>自定义输出格式</li></ul><h1 id="css-功能扩展"><a href="#css-功能扩展" class="headerlink" title="css 功能扩展"></a>css 功能扩展</h1><h2 id="嵌套规则（Nested-Rules）"><a href="#嵌套规则（Nested-Rules）" class="headerlink" title="嵌套规则（Nested Rules）"></a>嵌套规则（Nested Rules）</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="selector-class">.redbox</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="父选择器-amp"><a href="#父选择器-amp" class="headerlink" title="父选择器 &amp;"></a>父选择器 &amp;</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">  &amp;:hover &#123; ... &#125;</span><br><span class="line">  <span class="selector-tag">body</span><span class="selector-class">.firefox</span> &amp; &#123; ... &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="属性嵌套（Nested-Properties）"><a href="#属性嵌套（Nested-Properties）" class="headerlink" title="属性嵌套（Nested Properties）"></a>属性嵌套（Nested Properties）</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.funky</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: &#123;</span><br><span class="line">        family: fantasy;</span><br><span class="line">        size: <span class="number">30em</span>;</span><br><span class="line">        weight: bold;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.funky</span> &#123;</span><br><span class="line">    fonr: <span class="number">20px</span>/<span class="number">24px</span> &#123;</span><br><span class="line">        family: fantasy;</span><br><span class="line">        weight: bold;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="占位符选择器-foo-必须通过-extend-指令调用"><a href="#占位符选择器-foo-必须通过-extend-指令调用" class="headerlink" title="占位符选择器 %foo,必须通过 @extend 指令调用"></a>占位符选择器 %foo,必须通过 @extend 指令调用</h2><p>写法和 id / class 选择器写法相似</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul><li>多行注释 /**/ 会被完整输出到变异后的 css 文件</li><li>单行注释 // 不会</li></ul><h2 id="SassScript"><a href="#SassScript" class="headerlink" title="SassScript"></a>SassScript</h2><p>在 css 属性的基础上，允许使用变量、算数运算等额外功能</p><h2 id="interactive-shell"><a href="#interactive-shell" class="headerlink" title="interactive shell"></a>interactive shell</h2><p>在命令行中输入 <code>sass -i</code> ，然后输入想要测试的 SassScript 查看输出的结果</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sass -i</span><br><span class="line">&gt;&gt; <span class="string">"Hello, Sassy World!"</span></span><br><span class="line"><span class="string">"Hello, Sassy World!"</span></span><br><span class="line">&gt;&gt; <span class="number">1</span>px + <span class="number">1</span>px + <span class="number">1</span>px</span><br><span class="line"><span class="number">3</span>px</span><br><span class="line">&gt;&gt; <span class="comment">#777 + #777</span></span><br><span class="line"><span class="comment">#eeeeee</span></span><br><span class="line">&gt;&gt; <span class="comment">#777 + #888</span></span><br><span class="line">white</span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li><p>以 $ 符号开头，直接使用即调用变量</p></li><li><p><code>!global</code> 可将局部变量转换为全局变量</p></li><li><p><strong><code>!default</code> 类似 const</strong></p></li><li><p><code>@import</code> 被导入的文件将合并编译到同一个 css 文件中</p><ul><li>特殊情况：@import 仅作为普通的 css 语句，不会导入任何 scss 文件<ul><li>文件扩展名 <code>.css</code></li><li>文件名以 <code>http://</code> 开头</li><li>文件名是 <code>url()</code></li><li><code>@import</code> 包括 <code>media queries</code> </li></ul></li><li>若希望导入的文件不被编译，可将文件名命名为 <code>_xxx</code>，但是导入的时候不需要加下划线，如 <code>@import &quot;xxx&quot;</code></li></ul></li><li><p><code>@extend</code> 将一个选择器下的所有样式继承给另一个选择器（<strong>继承样式</strong>）</p></li></ul><h2 id="数据类型DataType"><a href="#数据类型DataType" class="headerlink" title="数据类型DataType"></a>数据类型DataType</h2><ul><li><p>数字</p></li><li><p>字符串</p><ul><li><p>有引号字符串 ‘bold’</p></li><li><p>无引号字符串 bold</p></li><li><p><strong><code>#{}</code> 将有引号字符编译为无引号字符，便于在 mixin 中引用</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">mixin</span> firefox-message(<span class="variable">$selector</span>) &#123;</span><br><span class="line">  <span class="selector-tag">body</span><span class="selector-class">.firefox</span> #&#123;<span class="variable">$selector</span>&#125;:before &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"Hi, Firefox users!"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">include</span> firefox-message(<span class="string">".header"</span>);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>颜色</p></li><li><p>布尔型</p></li><li><p>空值</p></li><li><p>数组（list）</p><ul><li>主要处理 <code>margin: 10px 15px 0 0</code> 这样通过空格或者逗号分隔的一系列的值</li><li>nth 可以访问数组中某一项</li><li>join 连接多个数组</li><li>append 增加新值</li><li>@each 可遍历数组中每一项 </li></ul></li><li><p>maps</p><ul><li>遍历对象中的每个属性值</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;特色&quot;&gt;&lt;a href=&quot;#特色&quot; class=&quot;headerlink&quot; title=&quot;特色&quot;&gt;&lt;/a&gt;特色&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;完全兼容 css3&lt;/li&gt;
&lt;li&gt;变量、嵌套（nesting）、混合（mixins）等&lt;/li&gt;
&lt;li&gt;通过函数进行颜色与属性值的计算&lt;/li&gt;
&lt;li&gt;自定义输出格式&lt;/li&gt;
&lt;/ul&gt;&lt;h1 id=&quot;css-功能扩展&quot;&gt;&lt;a href=&quot;#css-功能扩展&quot; class=&quot;headerlink&quot; title=&quot;css 功能扩展&quot;&gt;&lt;/a&gt;css 功能扩展&lt;/h1&gt;&lt;h2 id=&quot;嵌套规则（Nested-Rules）&quot;&gt;&lt;a href=&quot;#嵌套规则（Nested-Rules）&quot; class=&quot;headerlink&quot; title=&quot;嵌套规则（Nested Rules）&quot;&gt;&lt;/a&gt;嵌套规则（Nested Rules）&lt;/h2&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#main&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-class&quot;&gt;.redbox&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yanadev.github.io/2022/08/01/Vue%20%E8%AE%BE%E8%AE%A1%E9%80%9A%E7%94%A8%E7%BB%84%E4%BB%B6%E5%BA%93/"/>
    <id>https://yanadev.github.io/2022/08/01/Vue%20%E8%AE%BE%E8%AE%A1%E9%80%9A%E7%94%A8%E7%BB%84%E4%BB%B6%E5%BA%93/</id>
    <published>2022-08-01T09:49:54.003Z</published>
    <updated>2022-08-15T10:56:49.364Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><ul><li><p>创建 <code>vite</code> 项目，模板选择 <code>vue-ts</code>，即可获得 <code>vite + TypeScript</code> 开发环境</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn create vite@last</span><br></pre></td></tr></table></figure><p>![image-20220801180417627](Vue 设计通用组件库/image-20220801180417627.png)</p></li><li><p>配置 sass 和 ESLint</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add sass -D</span><br><span class="line">yarn add eslint -D</span><br><span class="line">npx eslint --init <span class="comment"># 配置 eslint</span></span><br></pre></td></tr></table></figure><p>![image-20220802164204275](Vue 设计通用组件库/image-20220802164204275.png)</p></li><li><p>配置 husky Git 钩子函数：提交之前进行对代码质量的监测</p><ul><li>初始化 husky</li><li><strong>npx husky add</strong> 新增 <code>commit-msg</code> 钩子</li><li>husky 会在执行 git commit 提交代码的时候执行 node scripts/verifyCommit 来校验 commit 信息格式</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D husky <span class="comment"># 安装 husky</span></span><br><span class="line">npx husky install <span class="comment"># 初始化 husky</span></span><br><span class="line"><span class="comment"># 新增钩子 commit msg</span></span><br><span class="line">npx husky add .husky/commit-msg <span class="string">"node scripts/verifyCommit.js"</span></span><br></pre></td></tr></table></figure><p>![image-20220801182003415](Vue 设计通用组件库/image-20220801182003415.png)</p></li><li><p>编辑 <code>scripts/verifyCommit.js</code> 文件</p><ul><li>在 ./git/COMMIT_EDITMSG 文件中读取 commit 的提交信息</li><li>使用正则去校验提交信息的格式，若 commit 信息不符合要求，会直接报错并且终止代码的提交</li></ul><p>![img](Vue 设计通用组件库/04f18eaf3be849e31cd3629a91d4e3f4.png)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> msg = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line">  .readFileSync(<span class="string">'.git/COMMIT_EDITMSG'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line">  .trim();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> commitRE = <span class="regexp">/^(revert: )?(feat|fix|docs|dx|style|refactor|pref|test|workflow|build|ci|chore|types|wip|release)(\(.+\))?: .&#123;1,50&#125;/</span>;</span><br><span class="line"><span class="keyword">const</span> mergeRe = <span class="regexp">/^(Merge pull request|Merge branch)/</span>;</span><br><span class="line"><span class="keyword">if</span> (!commitRE.test(msg)) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!mergeRe.test(msg)) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'git commit 信息校验不通过'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">`git commit的信息格式不对, 需要使用 title(scope): desc的格式</span></span><br><span class="line"><span class="string">    比如 fix: xx bug</span></span><br><span class="line"><span class="string">    feat(test): add new </span></span><br><span class="line"><span class="string">    具体逻辑看 scripts/verifyCommit.js</span></span><br><span class="line"><span class="string">    `</span>);</span><br><span class="line">    process.exit(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'git commit 信息校验通过'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加钩子 pre-commit 运行 <code>ESLint</code> 校验代码是否规范</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx husky add .husky/pre-commit <span class="string">"npm run lint"</span></span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h1 id="布局组件"><a href="#布局组件" class="headerlink" title="布局组件"></a>布局组件</h1><h2 id="组件类别"><a href="#组件类别" class="headerlink" title="组件类别"></a>组件类别</h2><ul><li>基础组件<ul><li>组件规范（布局、色彩、字体、图标等）</li></ul></li><li>表单组件<ul><li>用户的输入数据管理（输入框、滑块、评分等）</li></ul></li><li>数据组件<ul><li>显示后台的数据（表格和树形组件）</li></ul></li><li>通知组件<ul><li>通知用户（警告、弹窗）</li><li><strong>如何使用函数动态渲染组件</strong></li></ul></li><li>导航组件</li><li>其他</li></ul><blockquote><p> 在 <code>sass</code>、<code>ESLint</code> 规范之上加入单元测试来确保代码的可维护性</p></blockquote><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><ul><li>el-container 负责外层容器，当包括 el-header / el-footer 时，全部子元素会垂直上下排列，否则会水平左右排列</li><li>el-header、el-side、el-main、el-footer 组件分别负责页面各部分</li><li>在 <code>src/components</code> 中新建 container 文件夹，新建 <code>Container.vue</code>，布局组件没有逻辑，只需要通过 flex 布局实现即可 </li><li>在 <code>src/components/styles</code> 下新建 <code>mixin.scss</code> 文件 </li><li>在 <code>Container.vue</code> 文件中引入 <code>mixin.scss</code> 文件，<code>@mixin/@include</code> 配对使用<code>定义/使用</code> </li></ul><h2 id="mixin样式"><a href="#mixin样式" class="headerlink" title="mixin样式"></a>mixin样式</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$namespace</span>: <span class="string">'el'</span>;</span><br><span class="line"><span class="variable">$state-prefix</span>: <span class="string">'is-'</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">mixin</span> b(<span class="variable">$block</span>) &#123;</span><br><span class="line">  <span class="variable">$B</span>: <span class="variable">$namespace</span> +<span class="string">'-'</span>+<span class="variable">$block</span>  !global;</span><br><span class="line"></span><br><span class="line">  .#&#123;<span class="variable">$B</span>&#125; &#123;</span><br><span class="line">    @<span class="keyword">content</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">mixin</span> when (<span class="variable">$state</span>) &#123;</span><br><span class="line">  @at-root &#123;</span><br><span class="line">    &amp;.#&#123;<span class="variable">$state-prefix</span> + <span class="variable">$state</span>&#125; &#123;</span><br><span class="line">      @<span class="keyword">content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在-Container-vue-中引入-mixin-样式"><a href="#在-Container-vue-中引入-mixin-样式" class="headerlink" title="在 Container.vue 中引入 mixin 样式"></a>在 Container.vue 中引入 mixin 样式</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建 &lt;code&gt;vite&lt;/code&gt; 项目，模板选择 &lt;code&gt;vue-ts&lt;/code&gt;，即可获得 &lt;code&gt;vite + TypeScript&lt;/code&gt; 开发环境&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yarn create vite@last&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;![image-20220801180417627](Vue 设计通用组件库/image-20220801180417627.png)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置 sass 和 ESLint&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yarn add sass -D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yarn add eslint -D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npx eslint --init &lt;span class=&quot;comment&quot;&gt;# 配置 eslint&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;![image-20220802164204275](Vue 设计通用组件库/image-20220802164204275.png)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置 husky Git 钩子函数：提交之前进行对代码质量的监测&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初始化 husky&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;npx husky add&lt;/strong&gt; 新增 &lt;code&gt;commit-msg&lt;/code&gt; 钩子&lt;/li&gt;
&lt;li&gt;husky 会在执行 git commit 提交代码的时候执行 node scripts/verifyCommit 来校验 commit 信息格式&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yarn add -D husky &lt;span class=&quot;comment&quot;&gt;# 安装 husky&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npx husky install &lt;span class=&quot;comment&quot;&gt;# 初始化 husky&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 新增钩子 commit msg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npx husky add .husky/commit-msg &lt;span class=&quot;string&quot;&gt;&quot;node scripts/verifyCommit.js&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;![image-20220801182003415](Vue 设计通用组件库/image-20220801182003415.png)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编辑 &lt;code&gt;scripts/verifyCommit.js&lt;/code&gt; 文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 ./git/COMMIT_EDITMSG 文件中读取 commit 的提交信息&lt;/li&gt;
&lt;li&gt;使用正则去校验提交信息的格式，若 commit 信息不符合要求，会直接报错并且终止代码的提交&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;![img](Vue 设计通用组件库/04f18eaf3be849e31cd3629a91d4e3f4.png)&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; msg = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;fs&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .readFileSync(&lt;span class=&quot;string&quot;&gt;&#39;.git/COMMIT_EDITMSG&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .trim();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; commitRE = &lt;span class=&quot;regexp&quot;&gt;/^(revert: )?(feat|fix|docs|dx|style|refactor|pref|test|workflow|build|ci|chore|types|wip|release)(\(.+\))?: .&amp;#123;1,50&amp;#125;/&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; mergeRe = &lt;span class=&quot;regexp&quot;&gt;/^(Merge pull request|Merge branch)/&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!commitRE.test(msg)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mergeRe.test(msg)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;git commit 信息校验不通过&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.error(&lt;span class=&quot;string&quot;&gt;`git commit的信息格式不对, 需要使用 title(scope): desc的格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    比如 fix: xx bug&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    feat(test): add new &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    具体逻辑看 scripts/verifyCommit.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    `&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process.exit(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;git commit 信息校验通过&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加钩子 pre-commit 运行 &lt;code&gt;ESLint&lt;/code&gt; 校验代码是否规范&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npx husky add .husky/pre-commit &lt;span class=&quot;string&quot;&gt;&quot;npm run lint&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yanadev.github.io/2022/07/25/Pinia/"/>
    <id>https://yanadev.github.io/2022/07/25/Pinia/</id>
    <published>2022-07-25T07:57:33.266Z</published>
    <updated>2022-07-26T15:56:42.667Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add pinia -D</span><br></pre></td></tr></table></figure><h1 id="main-js-注册"><a href="#main-js-注册" class="headerlink" title="main.js 注册"></a>main.js 注册</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">'pinia'</span></span><br><span class="line"></span><br><span class="line">app.use( createPinia() )</span><br></pre></td></tr></table></figure><h1 id="定义-store"><a href="#定义-store" class="headerlink" title="定义 store"></a>定义 store</h1><ul><li>创建 src/store/index.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">'pinia'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCommentStore = defineStore(<span class="string">'comment'</span>, &#123;</span><br><span class="line">    state: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            curCommentList: []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    getters: &#123;</span><br><span class="line">        getCurCommentList(state) &#123;</span><br><span class="line">            <span class="keyword">return</span> state.curCommentList</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    actions: &#123;</span><br><span class="line">        changeCommentList = curCommentList</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="页面中使用"><a href="#页面中使用" class="headerlink" title="页面中使用"></a>页面中使用</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'../store'</span></span><br><span class="line"><span class="keyword">import</span> &#123; storeToRefs &#125; <span class="keyword">from</span> <span class="string">'pinia'</span></span><br><span class="line"><span class="keyword">const</span> &#123; useLoginStore, useCommentStore &#125; = store</span><br><span class="line"><span class="keyword">const</span> commentStore = useCommentStore()</span><br><span class="line"><span class="keyword">const</span> curUsername = useLoginStore().getCurUsername</span><br><span class="line"><span class="keyword">const</span> &#123; curCommentList &#125; = storeToRefs(commentStore)</span><br></pre></td></tr></table></figure><h1 id="修改-state"><a href="#修改-state" class="headerlink" title="修改 state"></a>修改 state</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useLoginStore &#125; <span class="keyword">from</span> <span class="string">'./store/loginStore.js'</span></span><br><span class="line"><span class="keyword">import</span> &#123; storeToRefs &#125; <span class="keyword">from</span> <span class="string">'pinia'</span></span><br><span class="line"><span class="keyword">const</span> loginStore = useLoginStore()</span><br><span class="line"><span class="keyword">const</span> &#123; curUsername &#125; = storeToRefs(loginStore)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = useRouter()</span><br><span class="line"><span class="keyword">const</span> formState = reactive(&#123;</span><br><span class="line">    usename: <span class="string">''</span>,</span><br><span class="line">    password: <span class="string">''</span>,</span><br><span class="line">    remember: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> onFinish = <span class="function"><span class="params">values</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; usename &#125; = values</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 01 直接修改某个值*/</span></span><br><span class="line">    curUsername.value = username</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 02 同时修改多个数据，建议使用 $patch 实现批量更新，在内部做优化 */</span></span><br><span class="line">    loginStore.$patch(&#123;</span><br><span class="line">        curUsername: username</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 03 更好的批量更新方法，通过 $patch 传递函数实现 */</span></span><br><span class="line">    loginStore.$patch(<span class="function">(<span class="params">state</span>) =&gt;</span> &#123;</span><br><span class="line">        syaye.curUsername = usename</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 通过 actions 修改数据 */</span></span><br><span class="line">    loginStore.changeCurUsername(usename)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    router.push(<span class="string">'/commentOn'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="getters-使用及注意事项"><a href="#getters-使用及注意事项" class="headerlink" title="getters 使用及注意事项"></a>getters 使用及注意事项</h1><p>getter 只是计算属性，无法向它传递任何参数</p><p><strong>可以从 getter 返回一个函数来接收任何参数，但是getter不再缓存，但是可在 getter 本身内部缓存一些结果</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">'pinia'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> useMainStore = defineStore(<span class="string">'main'</span>, &#123;</span><br><span class="line">    state: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            count: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    getters: &#123;</span><br><span class="line">        comp(state) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="function">(<span class="params">num: number</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> state.count + num</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; useMainStore &#125;</span><br></pre></td></tr></table></figure><p><strong>使用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;p&gt;&#123;&#123; mainStore.comp(2) &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; mainStore.comp(3) &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; mainStore.comp(4) &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">// 导入 pinia 实例</span><br><span class="line">import &#123; useMainStore &#125; from &apos;../store/index&apos;</span><br><span class="line"></span><br><span class="line">// 实例化容器</span><br><span class="line">const mainStore = useMainStore()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="pinia-持久化存储"><a href="#pinia-持久化存储" class="headerlink" title="pinia 持久化存储"></a>pinia 持久化存储</h1><ul><li>手动利用 localStorage 或 sessionStorage 进行存储</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 01 保存数据</span></span><br><span class="line"><span class="keyword">const</span> instance = useLoginStore()</span><br><span class="line">instance.$subscribe(<span class="function">(<span class="params">_, state</span>) =&gt;</span> &#123;</span><br><span class="line">    localStorage.setItem(<span class="string">'login-store'</span>, <span class="built_in">JSON</span>.stringify(&#123; ...state &#125;))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 02 获取保存的数据，先判断有无，无则用先前</span></span><br><span class="line"><span class="keyword">const</span> old = localStorage.getItem(<span class="string">'login-store'</span>)</span><br><span class="line"><span class="keyword">if</span>(old) &#123;</span><br><span class="line">    instance.$state = <span class="built_in">JSON</span>.parse(old)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>利用持久化工具 <code>pinia-plugin-persist</code></p><ul><li><p>安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add pinia-plugin-persist -D</span><br></pre></td></tr></table></figure></li><li><p>main.js 引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">'pinia'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> piniaPluginPersist <span class="keyword">from</span> <span class="string">'pinia-plugin-persist'</span></span><br><span class="line"><span class="keyword">const</span> store = createPinia()</span><br><span class="line">store.use(piniaPluginPersist)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = createApp(App)</span><br><span class="line"></span><br><span class="line">app.use(store)</span><br></pre></td></tr></table></figure></li><li><p>store 中配置参数 persist</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">'pinia'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useLoginStore = defineStore(<span class="string">'login'</span>, &#123;</span><br><span class="line">    state: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            token: <span class="string">''</span>,</span><br><span class="line">            curUsername: <span class="string">''</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    persist: &#123;</span><br><span class="line">        enabled: <span class="literal">true</span>,</span><br><span class="line">        <span class="comment">// 自定义持久化参数</span></span><br><span class="line">        strategies: [</span><br><span class="line">            &#123;</span><br><span class="line">                key: <span class="string">'login_store'</span>,</span><br><span class="line">                storage: localStorage,</span><br><span class="line">                paths: [<span class="string">'curUsername'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    getters: &#123;</span><br><span class="line">        getCurUsername(state) &#123;</span><br><span class="line">            <span class="keyword">return</span> state.curUsername</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    actions: &#123;</span><br><span class="line">        changeCurUsername(curUsername) &#123;</span><br><span class="line">            <span class="keyword">this</span>.curUsername = curUsername</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yarn add pinia -D&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&quot;main-js-注册&quot;&gt;&lt;a href=&quot;#main-js-注册&quot; class=&quot;headerlink&quot; title=&quot;main.js 注册&quot;&gt;&lt;/a&gt;main.js 注册&lt;/h1&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; createPinia &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;pinia&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use( createPinia() )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&quot;定义-store&quot;&gt;&lt;a href=&quot;#定义-store&quot; class=&quot;headerlink&quot; title=&quot;定义 store&quot;&gt;&lt;/a&gt;定义 store&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;创建 src/store/index.js&lt;/li&gt;
&lt;/ul&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; defineStore &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;pinia&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; useCommentStore = defineStore(&lt;span class=&quot;string&quot;&gt;&#39;comment&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    state: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            curCommentList: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getters: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        getCurCommentList(state) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; state.curCommentList&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    actions: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        changeCommentList = curCommentList&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>MVVM 与 MVC</title>
    <link href="https://yanadev.github.io/2022/07/13/MVVM%20%E4%B8%8E%20MVC/"/>
    <id>https://yanadev.github.io/2022/07/13/MVVM%20%E4%B8%8E%20MVC/</id>
    <published>2022-07-12T16:16:20.000Z</published>
    <updated>2022-07-12T17:30:46.028Z</updated>
    
    <content type="html"><![CDATA[<ul><li>MVP</li><li>MVC</li><li>MVVM</li></ul><blockquote><p>MV 系列框架中， M 和 V 指的是 <strong>Model层</strong> 和 <strong>View 层</strong></p><ul><li>Model 存储数据</li><li>View 展示数据</li></ul></blockquote><h1 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h1><p>![image-20220713001853715](MVVM 与 MVC/image-20220713001853715.png)</p><ul><li>controller 是 MVC 中的 <strong>C</strong>，指 <strong>控制层</strong></li><li>控制层会接受用户的所有操作，并依据代码执行<strong>对应操作: 触发 Model / View 层；或是同时触发两者</strong></li><li>注意：<ul><li>controller 触发 view 层时，不会更新 View 中的数据</li><li>View 中的数据是通过监听 Model 层数据变化自动更新的， <strong>与 controller 层无关</strong> </li></ul></li></ul><a id="more"></a><h2 id="MVC-框架流程"><a href="#MVC-框架流程" class="headerlink" title="MVC 框架流程"></a>MVC 框架流程</h2><p>![image-20220713002312117](MVVM 与 MVC/image-20220713002312117.png)</p><h2 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h2><ul><li>大部分逻辑都集中在 controller 层，代码也集中在 controller 层，这给 <strong>controller 层带来了很大的压力</strong>，而已经<strong>有了独立处理事件能力的 View 层却没有用到</strong></li><li>controller 层和 View 层之间是一一对应的，断绝了 View 层复用的可能，因而产生很多冗余代码</li></ul><h1 id="MVP-（Model-View-Presenter）"><a href="#MVP-（Model-View-Presenter）" class="headerlink" title="MVP （Model-View-Presenter）"></a>MVP （Model-View-Presenter）</h1><p>![image-20220713002657617](MVVM 与 MVC/image-20220713002657617.png)</p><ul><li>MVC 中，View 层可以通过访问 Model 层来更新</li><li>在 MVP 中，View 层不能直接访问 Model 层，必须通过 Presenter 层提供的接口，然后 Presenter 层再去访问 Model 层<ul><li>Model 和 View都必须通过 Presenter 来传递信息，因此分离model 和 view</li><li>model 与 view 分离之后，view 层可以抽离出来做组件，复用性提高</li></ul></li></ul><h2 id="MVP框架流程"><a href="#MVP框架流程" class="headerlink" title="MVP框架流程"></a>MVP框架流程</h2><p>![image-20220713003008413](MVVM 与 MVC/image-20220713003008413.png)</p><h2 id="存在问题-1"><a href="#存在问题-1" class="headerlink" title="存在问题"></a>存在问题</h2><p>View 层 和 Model 虽然互不干涉，但二者操作都需要通过 Presenter 层，<strong>致使 Presenter 层比较复杂</strong>，维护起来有一定的问题</p><p>因为没有绑定数据，所有数据都需要 Presenter 进行 “手动同步”，代码量较大，仍有很多冗余部分</p><h1 id="MVVM（Model-View-ViewModel）"><a href="#MVVM（Model-View-ViewModel）" class="headerlink" title="MVVM（Model-View-ViewModel）"></a>MVVM（Model-View-ViewModel）</h1><p>ViewModel 层将 <strong>Model 层和 View 层的数据同步自动化</strong>了，减轻了 ViewModel 层的压力，同时数据处理更加方便：<strong>只需要告知 View 层展示的数据是 Model 中的哪一部分即可</strong></p><p>![image-20220713003508772](MVVM 与 MVC/image-20220713003508772.png)</p><ul><li>ViewModel 层双向绑定了 View 和 Model ，因此随着 View层的数据变化，系统自动修改了 Model 层的数据，反之同理</li><li>Presenter 层采用 <strong>手写方法</strong> 来<strong>调用/修改</strong> View层 和 Model层</li></ul><h2 id="MVVM-框架流程图"><a href="#MVVM-框架流程图" class="headerlink" title="MVVM 框架流程图"></a>MVVM 框架流程图</h2><p>![image-20220713003803634](MVVM 与 MVC/image-20220713003803634.png)</p><h2 id="双向数据绑定"><a href="#双向数据绑定" class="headerlink" title="双向数据绑定"></a>双向数据绑定</h2><p>![image-20220713012017750](MVVM 与 MVC/image-20220713012017750.png)</p><p>MVVM 模型中数据绑定方法一般有三种：</p><ul><li>数据劫持</li><li>发布-订阅模式</li><li>脏值检查</li></ul><p>vue 使用的是 <strong>数据劫持</strong> 和 <strong>发布-订阅模式</strong></p><ul><li>Observer 数据监听器</li><li>Compiler 指定解析器</li><li>Watcher 订阅者</li></ul><p>Observer 监听数据变化，若数据发生变化（不论是在 model 还是 view 层），Observer 都会告知 Watcher </p><p>Compiler 的作用是进行数据解析，之后指定绑定的时间，在这里主要是更新视图</p><p><strong>Vue数据绑定的流程：</strong></p><ul><li>首先将需要绑定的数据用数据劫持方法找出</li><li>然后用  Observer 监听这些数据，若发生变化，告知 Watcher</li><li>Watcher 决定让哪一个 compiler 去做相应的操作，这样就完成了数据的双向绑定</li></ul><h1 id="三者的区别和优势"><a href="#三者的区别和优势" class="headerlink" title="三者的区别和优势"></a>三者的区别和优势</h1><p>三者的主要区别在于 <strong>除了 View 和 Model 层之外的第三层</strong></p><ul><li>表面上看，MVVM 使用起来最方便，代码相对较少，但存在问题是 MVVM 框架的体积相对比较大（MVC不用框架，MVP 4kb的框架），虽然 MVVM 可以单独使用，但是现在更多使用前端脚手架工具进行开发，并且使用打包工具，这样一比，体积更是天差万别</li><li>需要根据实际项目需求来选择 MVC、MCP、MVVM，<strong>只有适合的模式才是最好的框架</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;MVP&lt;/li&gt;
&lt;li&gt;MVC&lt;/li&gt;
&lt;li&gt;MVVM&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;MV 系列框架中， M 和 V 指的是 &lt;strong&gt;Model层&lt;/strong&gt; 和 &lt;strong&gt;View 层&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Model 存储数据&lt;/li&gt;
&lt;li&gt;View 展示数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;&lt;h1 id=&quot;MVC&quot;&gt;&lt;a href=&quot;#MVC&quot; class=&quot;headerlink&quot; title=&quot;MVC&quot;&gt;&lt;/a&gt;MVC&lt;/h1&gt;&lt;p&gt;![image-20220713001853715](MVVM 与 MVC/image-20220713001853715.png)&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;controller 是 MVC 中的 &lt;strong&gt;C&lt;/strong&gt;，指 &lt;strong&gt;控制层&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;控制层会接受用户的所有操作，并依据代码执行&lt;strong&gt;对应操作: 触发 Model / View 层；或是同时触发两者&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;注意：&lt;ul&gt;
&lt;li&gt;controller 触发 view 层时，不会更新 View 中的数据&lt;/li&gt;
&lt;li&gt;View 中的数据是通过监听 Model 层数据变化自动更新的， &lt;strong&gt;与 controller 层无关&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="MVVM" scheme="https://yanadev.github.io/categories/MVVM/"/>
    
      <category term="MVC" scheme="https://yanadev.github.io/categories/MVVM/MVC/"/>
    
    
      <category term="MVVM" scheme="https://yanadev.github.io/tags/MVVM/"/>
    
      <category term="MVC" scheme="https://yanadev.github.io/tags/MVC/"/>
    
  </entry>
  
  <entry>
    <title>Vue3</title>
    <link href="https://yanadev.github.io/2022/07/12/Vue3/"/>
    <id>https://yanadev.github.io/2022/07/12/Vue3/</id>
    <published>2022-07-12T08:17:26.000Z</published>
    <updated>2022-08-01T09:49:47.789Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>项目搭建</p></li><li><p>composition API</p><ul><li>精简代码，根据模块需求引入对应的功能</li></ul></li><li><p>响应式</p></li><li><p>组件化</p></li><li><p>动画</p></li></ul><h1 id="搭建-vue3工程化项目"><a href="#搭建-vue3工程化项目" class="headerlink" title="搭建 vue3工程化项目"></a>搭建 vue3工程化项目</h1><ul><li><p>使用 vite 搭建项目</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn create vite myVue3 --template vue</span><br></pre></td></tr></table></figure></li><li><p>输入项目名称 myVue3</p></li><li><p>选择框架名 vue</p></li><li><p>选择数据类型 variant ： vue-ts / vue</p></li></ul><a id="more"></a><p><img src="//yanadev.github.io/2022/07/12/Vue3/image-20220712160445080.png" alt="image-20220712160445080"></p><h1 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h1><ul><li>index.html 项目入口</li><li>package.json 管理项目依赖和配置的文件</li><li>public目录 放置静态资源</li><li>vite.config.json 和 vite 相关的所有工程化的配置</li><li>src 源码</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── README.md</span><br><span class="line">├── index.html           入口文件</span><br><span class="line">├── package.json</span><br><span class="line">├── public               资源文件</span><br><span class="line">│   └── favicon.ico</span><br><span class="line">├── src                  源码</span><br><span class="line">│   ├── App.vue          单文件组件</span><br><span class="line">│   ├── assets</span><br><span class="line">│   │   └── logo.png</span><br><span class="line">│   ├── components   </span><br><span class="line">│   │   └── HelloWorld.vue</span><br><span class="line">│   └── main.js          入口</span><br><span class="line">└── vite.config.js vite工程化配置文件</span><br></pre></td></tr></table></figure><h1 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install </span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p><strong>整体架构</strong></p><p><img src="//yanadev.github.io/2022/07/12/Vue3/image-20220712180305890.png" alt="image-20220712180305890"></p><h1 id="vuex管理数据，vue-router-管理路由"><a href="#vuex管理数据，vue-router-管理路由" class="headerlink" title="vuex管理数据，vue-router 管理路由"></a>vuex管理数据，vue-router 管理路由</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router@next vuex@next</span><br></pre></td></tr></table></figure><h1 id="规范（src组织结构）"><a href="#规范（src组织结构）" class="headerlink" title="规范（src组织结构）"></a>规范（src组织结构）</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">├── src</span><br><span class="line">│   ├── api            数据请求</span><br><span class="line">│   ├── assets         静态资源</span><br><span class="line">│   ├── components     组件</span><br><span class="line">│   ├── pages          页面</span><br><span class="line">│   ├── router         路由配置</span><br><span class="line">│   ├── store          vuex数据</span><br><span class="line">│   └── utils          工具函数</span><br></pre></td></tr></table></figure><h1 id="引入路由系统"><a href="#引入路由系统" class="headerlink" title="引入路由系统"></a>引入路由系统</h1><ul><li><p>router 目录下创建 index.js 文件</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">'vue-router'</span>;</span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'../pages/Home.vue'</span>;</span><br><span class="line"><span class="keyword">import</span> About <span class="keyword">from</span> <span class="string">'../pages/About.vue'</span>;</span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    name: <span class="string">'Home'</span>,</span><br><span class="line">    component: Home</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/about'</span>,</span><br><span class="line">    name: <span class="string">'About'</span>,</span><br><span class="line">    component: About</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">  history: createWebHashHistory(),</span><br><span class="line">  routes</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure></li><li><p>在入口文件 <code>main.ts</code> 中引入 <code>router</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router/index'</span></span><br><span class="line">createApp(App)</span><br><span class="line">  .use(router)</span><br><span class="line">  .mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure></li><li><p>根组件 App.vue 中，删除之前的代码，加入以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;router-link to=&quot;/&quot;&gt;首页&lt;/router-link&gt;</span><br><span class="line">    |</span><br><span class="line">    &lt;router-link to=&quot;/about&quot;&gt;关于&lt;/router-link&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="工具集成"><a href="#工具集成" class="headerlink" title="工具集成"></a>工具集成</h1><ul><li>stylus 或者 sass css 预处理工具</li><li>Element3 组件库</li><li>axios 处理网络请求</li><li>Eslint + Prettier 规范代码格式</li><li>Github 托管代码，使用 commitizen 来规范日志信息</li><li>配置 github Action 来实现自动化部署</li></ul><p><img src="//yanadev.github.io/2022/07/12/Vue3/image-20220712183014733.png" alt="image-20220712183014733"></p><h1 id="composition-API-setup"><a href="#composition-API-setup" class="headerlink" title="composition API + setup"></a>composition API + setup</h1><ul><li>components 目录下新建 Todolist.vue</li><li>使用 template 标签放置模板、script 标签放置逻辑代码</li><li>setup 标记使用 <code>&lt;script setup&gt;</code> </li><li>style 标签放置 CSS 样式</li></ul><hr><h2 id="TodoList-组件"><a href="#TodoList-组件" class="headerlink" title="TodoList 组件"></a>TodoList 组件</h2><ul><li><p>components 目录下创建 Todolist.vue 组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &apos;vue&apos;;</span><br><span class="line">let count = ref(1);</span><br><span class="line">function add() &#123;</span><br><span class="line">  count.value++;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1 @click=&quot;add&quot;&gt;&#123;&#123; count &#125;&#125;&lt;/h1&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">h1 &#123;</span><br><span class="line">  color: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p>将该组件引入到  <code>/pages/home.vue</code> 中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h1&gt;这是首页&lt;/h1&gt;</span><br><span class="line">  &lt;TodoList&gt;&lt;/TodoList&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import TodoList from &apos;../components/TodoList.vue&apos;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>完善 Todolist.vue 组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &apos;vue&apos;;</span><br><span class="line">let title = ref(&apos;&apos;);</span><br><span class="line">let count = ref(1);</span><br><span class="line">let todos = ref([&#123; title: &apos;vue study&apos;, done: false &#125;]);</span><br><span class="line">function add() &#123;</span><br><span class="line">  count.value++;</span><br><span class="line">&#125;</span><br><span class="line">function addTodo() &#123;</span><br><span class="line">  todos.value.push(&#123;</span><br><span class="line">    title: title.value,</span><br><span class="line">    done: false,</span><br><span class="line">  &#125;);</span><br><span class="line">  title.value = &apos;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model=&quot;title&quot; @keyword.enter=&quot;addTodo&quot; /&gt;</span><br><span class="line">    &lt;ul v-if=&quot;todos.length&quot;&gt;</span><br><span class="line">      &lt;li v-for=&quot;(todo, index) in todos&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;checkbox&quot; v-model=&quot;todo.done&quot; /&gt;</span><br><span class="line">        &lt;span :class=&quot;&#123; done: todo.done &#125;&quot;&gt;&#123;&#123; todo.title &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">h1 &#123;</span><br><span class="line">  color: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, computed &#125; from &apos;vue&apos;;</span><br><span class="line">let title = ref(&apos;&apos;);</span><br><span class="line">let todos = ref([&#123; title: &apos;vue study&apos;, done: false &#125;]);</span><br><span class="line">function add() &#123;</span><br><span class="line">  count.value++;</span><br><span class="line">&#125;</span><br><span class="line">function addTodo() &#123;</span><br><span class="line">  todos.value.push(&#123;</span><br><span class="line">    title: title.value,</span><br><span class="line">    done: false,</span><br><span class="line">  &#125;);</span><br><span class="line">  title.value = &apos;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">function clear() &#123;</span><br><span class="line">  todos.value = todos.value.filter((v) =&gt; !v.done);</span><br><span class="line">&#125;</span><br><span class="line">let active = computed(() =&gt; &#123;</span><br><span class="line">  return todos.value.filter((v) =&gt; !v.done).length;</span><br><span class="line">&#125;);</span><br><span class="line">let all = computed(() =&gt; todos.value.length);</span><br><span class="line">let allDone = computed(&#123;</span><br><span class="line">  get: function () &#123;</span><br><span class="line">    return active.value === 0;</span><br><span class="line">  &#125;,</span><br><span class="line">  set: function (value) &#123;</span><br><span class="line">    todos.value.forEach((todo) =&gt; &#123;</span><br><span class="line">      todo.done = value;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model=&quot;title&quot; @keyword.enter=&quot;addTodo&quot; /&gt;</span><br><span class="line">    &lt;button v-if=&quot;active &lt; all&quot; @click=&quot;clear&quot;&gt;清理&lt;/button&gt;</span><br><span class="line">    &lt;ul v-if=&quot;todos.length&quot;&gt;</span><br><span class="line">      &lt;li v-for=&quot;(todo, index) in todos&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;checkbox&quot; v-model=&quot;todo.done&quot; /&gt;</span><br><span class="line">        &lt;span :class=&quot;&#123; done: todo.done &#125;&quot;&gt;&#123;&#123; todo.title &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;div v-else&gt;暂无数据&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      全选</span><br><span class="line">      &lt;input type=&quot;checkbox&quot; v-model=&quot;allDone&quot; /&gt;</span><br><span class="line">      &lt;span&gt;&#123;&#123; active &#125;&#125; / &#123;&#123; all &#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">h1 &#123;</span><br><span class="line">  color: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p>进一步拆分代码，把功能独立的模块封装成一个独立的函数，做到按需拆分</p></li><li><p>新建一个函数 /utils/useTodos.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, computed &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">useTodos</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> title = ref(<span class="string">""</span>);</span><br><span class="line">  <span class="keyword">let</span> todos = ref([&#123; <span class="attr">title</span>: <span class="string">"学习Vue"</span>, <span class="attr">done</span>: <span class="literal">false</span> &#125;]);</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">addTodo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    todos.value.push(&#123;</span><br><span class="line">      title: title.value,</span><br><span class="line">      done: <span class="literal">false</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    title.value = <span class="string">""</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">clear</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    todos.value = todos.value.filter(<span class="function">(<span class="params">v</span>) =&gt;</span> !v.done);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> active = computed(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> todos.value.filter(<span class="function">(<span class="params">v</span>) =&gt;</span> !v.done).length;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">let</span> all = computed(<span class="function"><span class="params">()</span> =&gt;</span> todos.value.length);</span><br><span class="line">  <span class="keyword">let</span> allDone = computed(&#123;</span><br><span class="line">    <span class="keyword">get</span>: function () &#123;</span><br><span class="line">      <span class="keyword">return</span> active.value === <span class="number">0</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span>: function (value) &#123;</span><br><span class="line">      todos.value.forEach(<span class="function">(<span class="params">todo</span>) =&gt;</span> &#123;</span><br><span class="line">        todo.done = value;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> &#123; title, todos, addTodo, clear, active, all, allDone &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useTodos;</span><br></pre></td></tr></table></figure></li><li><p>将该方法引入到 TodoList 组件中即可使用，减轻 TodoList 中script的压力</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref, computed &#125; from &apos;vue&apos;;</span><br><span class="line">import useTodos from &apos;../utils/useTodos.js&apos;;</span><br><span class="line">let count = ref(1);</span><br><span class="line">function add() &#123;</span><br><span class="line">  count.value++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let &#123; title, todos, addTodo, clear, active, all, allDone &#125; = useTodos();</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h1&gt;这是 todoList 组件&lt;/h1&gt;</span><br><span class="line">  &#123;&#123; count &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Mouse-js-获取鼠标位置"><a href="#Mouse-js-获取鼠标位置" class="headerlink" title="Mouse.js 获取鼠标位置"></a>Mouse.js 获取鼠标位置</h2><ul><li><p>utils 目录下新建 mouse.js 文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">useMouse</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> x = ref(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> y = ref(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">return</span> &#123; x, y &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>要获取鼠标位置，需要监听 mousemove 事件</p></li><li><p>并且需要在组件加载完毕后执行</p></li><li><p>在 composition API 中直接引入 onMounted 和 onUnmounted 来实现生命周期的功能</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, onMounted, onUnmounted &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">useMouse</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> x = ref(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> y = ref(<span class="number">0</span>);</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    x.value = e.pageX;</span><br><span class="line">    y.value = e.pageY;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onMounted(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'mousemove'</span>, update);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  onUnmounted(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.removeEventListener(<span class="string">'mousemove'</span>, update);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> &#123; x, y &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="style样式"><a href="#style样式" class="headerlink" title="style样式"></a>style样式</h1><ul><li><p>避免项目样式冲突，可在项目样式中加上 <code>scoped</code> ，确保样式只在当前组件生效</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span> <span class="selector-tag">scoped</span>&gt;</span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;&gt;</span><br></pre></td></tr></table></figure></li><li><p>在 scoped 中若想写全局的样式，可用 <code>:global</code> 来标记</p></li><li><p>可以通过 v-bind 函数，直接在 css 中使用 js 中的变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1 @click=&quot;add&quot;&gt;&#123;&#123; count &#125;&#125;&lt;/h1&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">let count = ref(1)</span><br><span class="line">let color = ref(&apos;red&apos;)</span><br><span class="line">function add() &#123;</span><br><span class="line">  count.value++</span><br><span class="line">  color.value = Math.random()&gt;0.5? &quot;blue&quot;:&quot;red&quot;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">h1 &#123;</span><br><span class="line">  color:v-bind(color);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="vue-的三种响应式方案"><a href="#vue-的三种响应式方案" class="headerlink" title="vue 的三种响应式方案"></a>vue 的三种响应式方案</h1><ul><li><p>defineProperty     —- vue2</p><ul><li>定义object 对象，使用 defineProperty 代理 count 属性</li><li>以上即对 obj 对象的 value 属性实现了拦截</li><li>读取时执行 get 函数，修改时执行 set 函数</li><li><strong>存在缺陷：删除属性时，set 行数不会执行</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> getDouble = <span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">let</span> count = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> double = getDouble(count);</span><br><span class="line"><span class="comment">/** Object.defineProperty */</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj, <span class="string">'count'</span>, &#123;</span><br><span class="line">  <span class="keyword">get</span>() &#123;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">set</span>(val) &#123;</span><br><span class="line">    count = val;</span><br><span class="line">    double = getDouble(val);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(double);</span><br><span class="line">obj.count = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(double);</span><br></pre></td></tr></table></figure></li><li><p>Proxy    —- vue3 （<strong><u>重点在于解决了 vue2 的缺陷</u></strong>）</p><ul><li>通过 new Proxy 代理 obj 这个对象</li><li>通过 get 、set 、deleteProperty 函数代理了对象的读取、修改和删除</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> getDouble = <span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">let</span> count = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> double = getDouble(count);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Proxy 代理 */</span></span><br><span class="line"><span class="keyword">let</span> proxy = <span class="keyword">new</span> <span class="built_in">Proxy</span>(obj, &#123;</span><br><span class="line">  <span class="keyword">get</span>: function (target, prop) &#123;</span><br><span class="line">    <span class="keyword">return</span> target[prop];</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">set</span>: function (target, prop, value) &#123;</span><br><span class="line">    target[prop] = value;</span><br><span class="line">    <span class="keyword">if</span> (prop === <span class="string">'count'</span>) &#123;</span><br><span class="line">      double = getDouble(value);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  deleteProperty(target, prop) &#123;</span><br><span class="line">    <span class="keyword">delete</span> target[prop];</span><br><span class="line">    <span class="keyword">if</span> (prop === <span class="string">'count'</span>) &#123;</span><br><span class="line">      double = <span class="literal">NaN</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj.count, double);</span><br><span class="line">proxy.count = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj.count, double);</span><br><span class="line"><span class="keyword">delete</span> proxy.count;</span><br><span class="line"><span class="built_in">console</span>.log(obj.count, double);</span><br></pre></td></tr></table></figure></li><li><p>value setter</p><ul><li>利用对象的 set 和 get 函数进行监听</li><li>只能拦截某一属性的修改</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> getDouble = <span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">let</span> _value = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">let</span> double = getDouble(_value);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> count = &#123;</span><br><span class="line">  <span class="keyword">get</span> value() &#123;</span><br><span class="line">    <span class="keyword">return</span> _value;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">set</span> value(val) &#123;</span><br><span class="line">    _value = val;</span><br><span class="line">    double = getDouble(_value);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(count.value, double);</span><br><span class="line">count.value = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(count.value, double);</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>defineProperty 与 Proxy：</p><ul><li>proxy 针对对象监听，而不是某个具体属性，<strong>不仅可以代理定义时不存在的属性，还可代理更加丰富的数据结构，如 Set、Map 等，并且可通过 deleteProperty 实现对删除操作的代理</strong></li></ul></blockquote><ul><li><strong>vue3 的 reactive 就是基于 Proxy 实现的</strong></li><li><strong>vue3 的 ref 就是基于 value setter 赖斯翔的</strong></li></ul><p><img src="//yanadev.github.io/2022/07/12/Vue3/image-20220713165859984.png" alt="image-20220713165859984"></p><h1 id="响应式修改图标"><a href="#响应式修改图标" class="headerlink" title="响应式修改图标"></a>响应式修改图标</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, watch &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">useFavicon</span>(<span class="params">newIcon</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> favicon = ref(newIcon);</span><br><span class="line">  <span class="keyword">const</span> updateIcon = <span class="function"><span class="params">icon</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.head</span><br><span class="line">      .querySelectorAll(<span class="string">`link[ref*="icon"]`</span>)</span><br><span class="line">      .forEach(<span class="function"><span class="params">el</span> =&gt;</span> el.href = <span class="string">`<span class="subst">$&#123;icon&#125;</span>`</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> reset = <span class="function"><span class="params">()</span> =&gt;</span> favicon.value = <span class="string">'/favicon.ico'</span>;</span><br><span class="line"></span><br><span class="line">  watch(favicon, i =&gt; &#123;</span><br><span class="line">    updateIcon(i);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123; favicon, reset &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="组件化开发"><a href="#组件化开发" class="headerlink" title="组件化开发"></a>组件化开发</h1><ul><li>通用型组件<ul><li>各大组件库的组件风格，包括按钮、表单、弹窗等通用功能</li></ul></li><li>业务性组件<ul><li>包含业务的交互逻辑，包括购物车、登录注册等，会和不同的业务强绑定</li></ul></li><li>组件开发<ul><li>考虑代码的复用性、可维护性、稳定性</li></ul></li></ul><h2 id="评级组件案例"><a href="#评级组件案例" class="headerlink" title="评级组件案例"></a>评级组件案例</h2><h3 id="最简易版"><a href="#最简易版" class="headerlink" title="最简易版"></a>最简易版</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&#123;&#123; &apos;★★★★★☆☆☆☆☆&apos;.slice(5 - rate, 10 - rate) &#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="支持传值"><a href="#支持传值" class="headerlink" title="支持传值"></a>支持传值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, defineProps, computed &#125; from &apos;vue&apos;;</span><br><span class="line">let props = defineProps(&#123;</span><br><span class="line">  value: Number,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">let rate = computed(() =&gt;</span><br><span class="line">  &apos;★★★★★☆☆☆☆☆&apos;.slice(5 - props.value, 10 - props.value)</span><br><span class="line">);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123; rate &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="支持颜色选择"><a href="#支持颜色选择" class="headerlink" title="支持颜色选择"></a>支持颜色选择</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, defineProps, computed &#125; from &apos;vue&apos;;</span><br><span class="line">let props = defineProps(&#123;</span><br><span class="line">  value: Number,</span><br><span class="line">  theme: &#123; type: String, default: &apos;orange&apos; &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">let rate = computed(() =&gt;</span><br><span class="line">  &apos;★★★★★☆☆☆☆☆&apos;.slice(5 - props.value, 10 - props.value)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">const themeObj = &#123;</span><br><span class="line">  black: &apos;#00&apos;,</span><br><span class="line">  white: &apos;#fff&apos;,</span><br><span class="line">  red: &apos;#f5222d&apos;,</span><br><span class="line">  orange: &apos;#fa541c&apos;,</span><br><span class="line">  yellow: &apos;#fadb14&apos;,</span><br><span class="line">  green: &apos;#73d13d&apos;,</span><br><span class="line">  blue: &apos;#40a9ff&apos;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">const fontstyle = computed(() =&gt; &#123;</span><br><span class="line">  return `color:$&#123;themeObj[props.theme]&#125;`;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div :style=&quot;fontstyle&quot;&gt;&#123;&#123; rate &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;Rate :value=&quot;2&quot;&gt;&lt;/Rate&gt;</span><br><span class="line">  &lt;Rate :value=&quot;2&quot; theme=&quot;green&quot;&gt;&lt;/Rate&gt;</span><br><span class="line">  &lt;Rate :value=&quot;2&quot; theme=&quot;black&quot;&gt;&lt;/Rate&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import Rate from &apos;../components/Rate.vue&apos;;</span><br><span class="line"></span><br><span class="line">import &#123; ref &#125; from &apos;vue&apos;;</span><br><span class="line">let color = ref(&apos;red&apos;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="修改评分"><a href="#修改评分" class="headerlink" title="修改评分"></a>修改评分</h3><ul><li>使用 <strong>绝对定位</strong> 定义选中图标</li><li>通过选中星星的 <code>index</code> 来控制选中图案的 <code>width</code>，配合绝对定位的 overflow: hidden 来隐藏超出的宽度</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; toRefs, defineProps, ref, computed &#125; from &apos;vue&apos;;</span><br><span class="line">const props = defineProps(&#123;</span><br><span class="line">  modelValue: &#123;</span><br><span class="line">    type: Number,</span><br><span class="line">    defualt: 1,</span><br><span class="line">  &#125;,</span><br><span class="line">  theme: &#123;</span><br><span class="line">    type: String,</span><br><span class="line">    default: &apos;orange&apos;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">const &#123; modelValue, theme &#125; = toRefs(props);</span><br><span class="line">const width = ref(modelValue.value);</span><br><span class="line">const themeObj = &#123;</span><br><span class="line">  black: &apos;#00&apos;,</span><br><span class="line">  white: &apos;#fff&apos;,</span><br><span class="line">  red: &apos;#f5222d&apos;,</span><br><span class="line">  orange: &apos;#fa541c&apos;,</span><br><span class="line">  yellow: &apos;#fadb14&apos;,</span><br><span class="line">  green: &apos;#73d13d&apos;,</span><br><span class="line">  blue: &apos;#40a9ff&apos;,</span><br><span class="line">&#125;;</span><br><span class="line">const fontstyle = computed(() =&gt; &#123;</span><br><span class="line">  return `color: $&#123;themeObj[theme.value]&#125;`;</span><br><span class="line">&#125;);</span><br><span class="line">const emits = defineEmits([&apos;update:modelValue&apos;]);</span><br><span class="line">const fontwidth = computed(() =&gt; &#123;</span><br><span class="line">  return `width: $&#123;width.value&#125;em`;</span><br><span class="line">&#125;);</span><br><span class="line">const mouseOver = (num) =&gt; &#123;</span><br><span class="line">  width.value = num;</span><br><span class="line">&#125;;</span><br><span class="line">const mouseOut = () =&gt; &#123;</span><br><span class="line">  width.value = modelValue.value;</span><br><span class="line">&#125;;</span><br><span class="line">const onRate = (num) =&gt; &#123;</span><br><span class="line">  emits(&apos;update:modelValue&apos;, num);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;rate&quot; :style=&quot;fontstyle&quot; @mouseout=&quot;mouseOut&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;solid&quot; :style=&quot;fontwidth&quot;&gt;</span><br><span class="line">      &lt;span</span><br><span class="line">        v-for=&quot;(num, index) in 5&quot;</span><br><span class="line">        :key=&quot;index&quot;</span><br><span class="line">        @click=&quot;onRate(num)&quot;</span><br><span class="line">        @mouseover=&quot;mouseOver(num)&quot;</span><br><span class="line">        &gt;★&lt;/span</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &lt;span v-for=&quot;(num, index) in 5&quot; :key=&quot;index&quot; @mouseover=&quot;mouseOver(num)&quot;</span><br><span class="line">      &gt;☆&lt;/span</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">* &#123;</span><br><span class="line">  font: 12px/1.5 \5b8b\4f53, Arial, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line">.rate &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line">.rate &gt; span &#123;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">.rate &gt; span.solid &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  top: 0;</span><br><span class="line">  left: 0;</span><br><span class="line">  width: 0;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h1 id="过渡和动效"><a href="#过渡和动效" class="headerlink" title="过渡和动效"></a>过渡和动效</h1><ul><li>直接使用变量操控 dom ，效果很生硬<ul><li>width.value += 100</li></ul></li><li>需要配合 css 属性 <code>transition</code> 来实现<strong>过渡</strong></li><li>通过 <code>animation</code> 和 <code>keyframe</code> 组合实现 <strong>动画</strong><ul><li>keyframe 定义一段动画</li><li>通过 animation 属性将这个帧赋给某个元素</li></ul></li></ul><h2 id="vue3-动画：使用内置的-transition-组件来控制组件的动画"><a href="#vue3-动画：使用内置的-transition-组件来控制组件的动画" class="headerlink" title="vue3 动画：使用内置的 transition 组件来控制组件的动画"></a>vue3 动画：使用内置的 transition 组件来控制组件的动画</h2><ul><li>使用 transition 组件包裹需要动画的元素即可</li><li>需要使用 <strong>判断语句 v-if / v-show</strong> 控制元素的显隐</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &apos;vue&apos;;</span><br><span class="line">let show = ref(true);</span><br><span class="line">const handleClick = () =&gt; &#123;</span><br><span class="line">  show.value = !show.value;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button @click=&quot;handleClick&quot;&gt;btn&lt;/button&gt;</span><br><span class="line">  &lt;br /&gt;</span><br><span class="line">  &lt;div class=&quot;bg&quot;&gt;</span><br><span class="line">    &lt;transition name=&quot;fade&quot;&gt;</span><br><span class="line">      &lt;h2 v-show=&quot;show&quot;&gt;hello world&lt;/h2&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.bg &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  text-align: center;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">.fade-enter-from &#123;</span><br><span class="line">  transform: translateX(100px);</span><br><span class="line">  opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line">.fade-enter-to &#123;</span><br><span class="line">  opacity: 1;</span><br><span class="line">  transition: all 0.5s ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.fade-leave-active &#123;</span><br><span class="line">  opacity: 0.1;</span><br><span class="line">&#125;</span><br><span class="line">.fade-leave-to &#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  transform: translateY(10px);</span><br><span class="line">  transition: all 0.5s ease-out;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h1 id="Vuex-状态管理"><a href="#Vuex-状态管理" class="headerlink" title="Vuex 状态管理"></a>Vuex 状态管理</h1><h2 id="前端数据管理思路"><a href="#前端数据管理思路" class="headerlink" title="前端数据管理思路"></a>前端数据管理思路</h2><ul><li>定义全局变量，任何组件需要数据的时候在全局变量中获取<ul><li>通用数据：用户登录信息等</li><li>跨层级组件的通信</li></ul></li></ul><h2 id="vuex-安装配置"><a href="#vuex-安装配置" class="headerlink" title="vuex 安装配置"></a>vuex 安装配置</h2><ul><li><p>安装 vuex</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add vuex@next</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>src/store 目录下新建 <code>index.js</code></p></li><li><p>使用 createStore 创建数据存储，配置数据后将 store 对象导出</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">'vue-router'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'../pages/home.vue'</span>;</span><br><span class="line"><span class="keyword">import</span> About <span class="keyword">from</span> <span class="string">'../pages/about.vue'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    name: <span class="string">'Home'</span>,</span><br><span class="line">    component: Home</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/about'</span>,</span><br><span class="line">    name: <span class="string">'About'</span>,</span><br><span class="line">    component: About</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">  history: createWebHashHistory(),</span><br><span class="line">  routes</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure></li><li><p>在入口文件中引入，使用 app.use(store) 进行注册，这样 vue 和 vuex 就连接上了</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router/index'</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store/index'</span>;</span><br><span class="line"></span><br><span class="line">createApp(App)</span><br><span class="line">  .use(store)</span><br><span class="line">  .use(router)</span><br><span class="line">  .mount(<span class="string">'#app'</span>);</span><br></pre></td></tr></table></figure></li><li><p>在页面或组件中使用</p><ul><li><p>引入 useStore 方法</p></li><li><p>创建实例 <code>let store = useStore()</code></p></li><li><p>实例使用 commit 触发对应 mutations 来改变状态 <code>store.commit(&#39;add&#39;)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;&#123;&#123; store.state.count &#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;button @click=&quot;handleClick&quot;&gt;+1&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; toRefs &#125; from &apos;vue&apos;;</span><br><span class="line">import &#123; useStore &#125; from &apos;vuex&apos;;</span><br><span class="line"></span><br><span class="line">let store = useStore();</span><br><span class="line"></span><br><span class="line">const handleClick = () =&gt; &#123;</span><br><span class="line">  store.commit(&apos;add&apos;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="手写迷你-vuex"><a href="#手写迷你-vuex" class="headerlink" title="手写迷你 vuex"></a>手写迷你 vuex</h2><ul><li>创建变量 store 来存储数据</li><li>将 store  转换成响应式数据，提供给 vue</li><li>在 vue 中通过 <code>provide / inject</code> 两个函数做数据共享<ul><li>provide 注册数据之后，所有的子组件都可通过 inject 来获取数据 </li></ul></li></ul><hr><ul><li>在 src/store/gvuex.js</li><li>创建 Store 类来管理数据</li><li>类内部<ul><li>使用 _state 存储数据</li><li>使用 _mutations 来存储 用户传递过来的 mutations 数据修改函数</li><li>gvuex.js 中向外暴露 createStore 创建的 Store 实例</li><li>项目入口文件中引入 store/index.js 配置文件，使用 app.use(xxx) 将 gvuex 注入到 项目中去<ul><li>会触发 Store 类内部的  install  方法</li></ul></li><li>在项目使用 vuex 处导入 gvuex 文件中的 useStore 方法以获取 Store 实例</li></ul></li></ul><p><strong>手写mini vuex：gvuex.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; inject, reactive &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> STORE_KEY = <span class="string">'__store__'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">useStore</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> inject(STORE_KEY);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createStore</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Store(options);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Store</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(options) &#123;</span><br><span class="line">    <span class="keyword">this</span>.$options = options;</span><br><span class="line">    <span class="keyword">this</span>._state = reactive(&#123;</span><br><span class="line">      data: options.state()</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">this</span>._mutations = options.mutations;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">get</span> state() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>._state.data;</span><br><span class="line">  &#125;</span><br><span class="line">  commit = <span class="function">(<span class="params">type, payload</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> entry = <span class="keyword">this</span>._mutations[type];</span><br><span class="line">    entry &amp;&amp; entry(<span class="keyword">this</span>.state, payload);</span><br><span class="line">  &#125;;</span><br><span class="line">  install(app) &#123;</span><br><span class="line">    app.provide(STORE_KEY, <span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; createStore, useStore &#125;;</span><br></pre></td></tr></table></figure><p><strong>store/index.js gvuex 配置文件</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// import &#123; createStore &#125; from "vuex";</span></span><br><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">"./gvuex"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> store = createStore(&#123;</span><br><span class="line">  state() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      count: <span class="number">4</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    add(state) &#123;</span><br><span class="line">      state.count++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure><p><strong>项目入口文件 main.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router/index'</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span>;</span><br><span class="line"></span><br><span class="line">createApp(App)</span><br><span class="line">  .use(store)</span><br><span class="line">  .use(router)</span><br><span class="line">  .mount(<span class="string">'#app'</span>);</span><br></pre></td></tr></table></figure><p><strong>项目中使用 home.vue</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123; count &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;br /&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123; count &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;button @click=&quot;add&quot;&gt;+1&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; computed, ref &#125; from &apos;vue&apos;;</span><br><span class="line">import &#123; useStore &#125; from &apos;../store/gvuex&apos;;</span><br><span class="line">let store = useStore();</span><br><span class="line"></span><br><span class="line">let count = computed(() =&gt; store.state.count);</span><br><span class="line">const add = () =&gt; &#123;</span><br><span class="line">  store.commit(&apos;add&apos;);</span><br><span class="line">  console.log(&apos;count + 1 = &apos; + count.value);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>总体上看，vuex 就是一个<code>公用的响应式数据 ref</code>，除了简单的数据更改、还有一些异步任务的触发，这些场景 vuex 都有对应的处理方式</p><ul><li>vuex 中的 getters 配置可实现 computed 功能</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 配置 */</span></span><br><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">"vuex"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> store = createStore(&#123;</span><br><span class="line">  ...</span><br><span class="line">  getters: &#123;</span><br><span class="line">    double: <span class="function">(<span class="params">state</span>) =&gt;</span> state.count * <span class="number">2</span></span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store; </span><br><span class="line">    </span><br><span class="line"><span class="comment">/* 使用 */</span></span><br><span class="line"><span class="keyword">let</span> double = computed(<span class="function"><span class="params">()</span> =&gt;</span> store.getters.double);</span><br></pre></td></tr></table></figure><ul><li>mutation 实现<strong>同步</strong>修改数据</li><li>action 实现<strong>同步/异步</strong>修改数据，<strong>注意：并非直接修改 state，而是通过 mutations 去修改数据</strong></li></ul><h1 id="前端路由"><a href="#前端路由" class="headerlink" title="前端路由"></a>前端路由</h1><h2 id="前后端混合开发模式特点"><a href="#前后端混合开发模式特点" class="headerlink" title="前后端混合开发模式特点"></a>前后端混合开发模式特点</h2><ul><li>优点<ul><li>开发速度快</li><li>后端可承担部分前端任务</li></ul></li><li>缺点<ul><li>前后端项目无法分离</li><li>页面跳转由于需要重新刷新整个页面，等待时间较长，交互体验下降</li></ul></li></ul><h2 id="主流框架使用的路由模式"><a href="#主流框架使用的路由模式" class="headerlink" title="主流框架使用的路由模式"></a>主流框架使用的路由模式</h2><p><strong>Pjax（pushState + Ajax）</strong> 浏览器路由的变化通过 <code>pushState</code> 来操作</p><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h2><ul><li><p>两种实现方式</p><ul><li>hash 模式 通过 URL 中的 # 后面的内容做区分（hash-router）</li><li>history 模式 该方式下路由和正常的 URL 完全一致</li></ul><p><img src="//yanadev.github.io/2022/07/12/Vue3/image-20220727000702653.png" alt="image-20220727000702653"></p></li><li><p>以上两种方式分别对应 vue 中的两个函数</p><ul><li>createWebHashHistory</li><li>createWebHistory</li></ul></li><li><p>hash模式</p><ul><li><p>2014年之前都是通过 hash 来实现前端路由的</p></li><li><p>hash 值的变化不会导致浏览器页面刷新，只会触发 hashChange 事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hash 路由</span></span><br><span class="line">http:<span class="comment">//www.xxx.com/#/login</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 事件监听</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'hashchange'</span>,fn)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>history模式</p><ul><li><p>2014年之后，HTML5 标准发布，浏览器多了两个 API <code>pushState</code> 和 <code>replaceState</code>，通过这两个 API 可以改变 URL 地址，且 <strong>浏览器不会向后端发送请求</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'popstate'</span>, fn)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="手写迷你-vue-router（hash模式）"><a href="#手写迷你-vue-router（hash模式）" class="headerlink" title="手写迷你 vue-router（hash模式）"></a>手写迷你 vue-router（hash模式）</h2><ul><li>src/router 目录下新建一个 <code>grouter</code> 文件夹，文件夹内部在新建一个 <code>index.js</code></li><li>使用 Router 类管理路由</li><li>使用 createWebHashHistory 来返回 hash 模式相关的监听代码，并返回当前 URL 和监听 hashChange 事件的方法</li><li>通过 Router 类的 install 方法注册了 Router 实例，并对外暴露 createRouter 方法取创建 Router 实例</li><li>最后暴露 useRouter 方法来获取路由实例</li></ul><p><strong>src/router/grouter/index.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, inject &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ROUTER_KEY = <span class="string">'__router__'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createWebHashHistory</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">bindEvents</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'hashChange'</span>, fn);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    bindEvents,</span><br><span class="line">    url: <span class="built_in">window</span>.location.hash.slice(<span class="number">1</span>) || <span class="string">'/'</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createRouter</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Router(options);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">useRouter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> inject(ROUTER_KEY);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Router</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(options) &#123;</span><br><span class="line">    <span class="keyword">this</span>.history = options.history;</span><br><span class="line">    <span class="keyword">this</span>.routes = options.routes;</span><br><span class="line">    <span class="keyword">this</span>.current = ref(<span class="keyword">this</span>.history.url);</span><br><span class="line">    <span class="keyword">this</span>.history.bindEvents(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.current.value = <span class="built_in">window</span>.location.hash.slice(<span class="number">1</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  install(app) &#123;</span><br><span class="line">    app.provide(ROUTER_KEY, <span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; createRouter, createWebHashHistory, useRouter &#125;;</span><br></pre></td></tr></table></figure><ul><li>注册两个内置组件 <code>router-view</code> 和 <code>router-link</code> <ul><li>current 返回当前路由地址</li><li>router-view 组件即 current 发生变化的时候，匹配对应 current 地址对应的组件，动态渲染到 router-view 即可</li></ul></li><li>src/router/grouter 下新建 <code>RouterView.vue</code><ul><li>使用 useRouter 获取当前路由实例</li><li>通过 router.current.value 获取当前路由地址</li><li>在用户路由配置 route 中计算出匹配的组件</li><li>通过计算属性 computed 返回 comp 变量</li><li>template 内部使用 component 组件动态渲染</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; computed &#125; from &apos;vue&apos;;</span><br><span class="line">import &#123; useRouter &#125; from &apos;./index&apos;;</span><br><span class="line">let router = useRouter();</span><br><span class="line"></span><br><span class="line">const comp = computed(() =&gt; &#123;</span><br><span class="line">  const route = router.routes.find(</span><br><span class="line">    (route) =&gt; route.path === route.current.value</span><br><span class="line">  );</span><br><span class="line">  return route ? route.component : null;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;component :is=&quot;comp&quot;&gt;&lt;/component&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li>实现 router-link 组件</li><li>template 依然渲染一个 a 标签，a 标签的 href 属性前面加 <code>#</code> 就实现了 hash 的修改</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; defineProps &#125; from &apos;vue&apos;;</span><br><span class="line">let props = defineProps(&#123;</span><br><span class="line">  to: &#123; type: String, required: true &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;a :href=&quot;`#$&#123;props.to&#125;`&quot;&gt;</span><br><span class="line">    &lt;slot /&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li>需要在 Router 类中注册这两个内置组件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, inject &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> RouterLink <span class="keyword">from</span> <span class="string">'./RouterLink'</span>;</span><br><span class="line"><span class="keyword">import</span> RouterView <span class="keyword">from</span> <span class="string">'./RouterView'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ROUTER_KEY = <span class="string">'__router__'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createWebHashHistory</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">bindEvents</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'hashChange'</span>, fn);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    bindEvents,</span><br><span class="line">    url: <span class="built_in">window</span>.location.hash.slice(<span class="number">1</span>) || <span class="string">'/'</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createRouter</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Router(options);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">useRouter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> inject(ROUTER_KEY);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Router</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(options) &#123;</span><br><span class="line">    <span class="keyword">this</span>.history = options.history;</span><br><span class="line">    <span class="keyword">this</span>.routes = options.routes;</span><br><span class="line">    <span class="keyword">this</span>.current = ref(<span class="keyword">this</span>.history.url);</span><br><span class="line">    <span class="keyword">this</span>.history.bindEvents(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.current.value = <span class="built_in">window</span>.location.hash.slice(<span class="number">1</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  install(app) &#123;</span><br><span class="line">    app.provide(ROUTER_KEY, <span class="keyword">this</span>);</span><br><span class="line">+    app.component(<span class="string">'router-link'</span>, RouterLink);</span><br><span class="line">+    app.component(<span class="string">'router-view'</span>, RouterView);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; createRouter, createWebHashHistory, useRouter &#125;;</span><br></pre></td></tr></table></figure><h2 id="路由使用要点"><a href="#路由使用要点" class="headerlink" title="路由使用要点"></a>路由使用要点</h2><ul><li><p>路由匹配语法</p><ul><li><p>根据用户信息匹配单独的路由入口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">'/users/:id'</span>, <span class="attr">component</span>: User</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul></li><li><p>有些页面只有管理员可访问，需要 <strong>导航守卫功能</strong></p></li><li><p>项目庞大之后，首屏加载文件太大就可能影响性能，可使用 vue-router 的<strong>动态导入功能</strong>（<strong>懒加载</strong>）</p></li></ul><h1 id="Vue-Devtools-调试工具"><a href="#Vue-Devtools-调试工具" class="headerlink" title="Vue Devtools 调试工具"></a>Vue Devtools 调试工具</h1><p>打开任意一个页面，点击鼠标右键，再点击<strong>审查元素（检查）/ f12</strong> 就可看到调试窗口</p><ul><li>Elements 调试 HTML 和 CSS</li><li>console 调试 JavaScript</li><li>Source 调试开发中的源码</li><li>Application 调试本地存储和一些浏览器服务（cookie、localstorage、通知等）</li><li>network 查看网络请求的状态和参数</li><li>Performance 调试网页性能</li><li>lighthouse 是 Google 官方开发的插件，用来获取网页性能报告</li><li>animation 调试动画</li><li>security 调试安全特性</li><li>…</li></ul><h1 id="JSX-应对更灵活的开发场景"><a href="#JSX-应对更灵活的开发场景" class="headerlink" title="JSX 应对更灵活的开发场景"></a>JSX 应对更灵活的开发场景</h1><h2 id="h函数"><a href="#h函数" class="headerlink" title="h函数"></a>h函数</h2><ul><li><p>vue中</p><ul><li>template 解析为 render 函数，组件运行的时候通过 render 函数来返回虚拟 DOM</li></ul></li><li><p>除了 template ，某些场景下可直接使用 render 函数来实现组件</p></li></ul><p><strong>需求</strong>： 通过一个值的返回在数字 1-6 之间的变量，来渲染组件 h1-h6，根据传递的 props 渲染标签名</p><ul><li><p>在 src/components 下新建一个 Heading.jsx 文件</p></li><li><p>使用 defineComponent 定义一个组件</p></li><li><p>组件内部配置 props 和 setup </p><ul><li>setup 函数返回值为一个函数（即 render 函数），render函数返回 h 函数的执行结果，h 函数第一个参数就是标签名</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineComponent, h &#125; <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> defineComponent(&#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    level: &#123;</span><br><span class="line">      type: <span class="built_in">Number</span>,</span><br><span class="line">      required: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  setup(props, &#123; slots &#125;) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> h(</span><br><span class="line">      <span class="string">`h<span class="subst">$&#123;props.level&#125;</span>`</span>,</span><br><span class="line">      &#123;&#125;,<span class="comment">// prop 或者 attribute</span></span><br><span class="line">      slots.default <span class="comment">// 子节点</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>在 src/pages/about.vue 中引入以上组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h1&gt;这是关于页面&lt;/h1&gt;</span><br><span class="line">  &lt;Heading :level=&quot;3&quot;&gt;&lt;/Heading&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &apos;vue&apos;;</span><br><span class="line">import Heading from &apos;../components/Heading&apos;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;项目搭建&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;composition API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;精简代码，根据模块需求引入对应的功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;响应式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;组件化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;动画&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h1 id=&quot;搭建-vue3工程化项目&quot;&gt;&lt;a href=&quot;#搭建-vue3工程化项目&quot; class=&quot;headerlink&quot; title=&quot;搭建 vue3工程化项目&quot;&gt;&lt;/a&gt;搭建 vue3工程化项目&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用 vite 搭建项目&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yarn create vite myVue3 --template vue&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输入项目名称 myVue3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;选择框架名 vue&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;选择数据类型 variant ： vue-ts / vue&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="vue3" scheme="https://yanadev.github.io/categories/vue3/"/>
    
      <category term="项目搭建" scheme="https://yanadev.github.io/categories/vue3/%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/"/>
    
      <category term="组件化" scheme="https://yanadev.github.io/categories/vue3/%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
    
    
      <category term="vue3" scheme="https://yanadev.github.io/tags/vue3/"/>
    
      <category term="项目搭建" scheme="https://yanadev.github.io/tags/%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/"/>
    
      <category term="组件化" scheme="https://yanadev.github.io/tags/%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yanadev.github.io/2022/07/12/Vue%20%E4%B9%8B%20%E8%AE%BE%E8%AE%A1%E9%80%9A%E7%94%A8%E7%BB%84%E4%BB%B6%E5%BA%93/"/>
    <id>https://yanadev.github.io/2022/07/12/Vue%20%E4%B9%8B%20%E8%AE%BE%E8%AE%A1%E9%80%9A%E7%94%A8%E7%BB%84%E4%BB%B6%E5%BA%93/</id>
    <published>2022-07-12T07:48:27.340Z</published>
    <updated>2022-07-12T07:55:12.965Z</updated>
    
    <content type="html"><![CDATA[<ol><li>拆解 Element3 组件库代码</li><li>剖析组件库经典组件（表单、表格、弹窗等组件实现细节）</li><li>使用 vite + TypeScript + sass 技术栈实现</li></ol><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><blockquote><p>组件整体模仿 Element 实现</p></blockquote><ul><li><p>新建项目</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn init vite@lastest</span><br></pre></td></tr></table></figure></li><li><p>安装 husky ：提交前进行 <code>代码质量的监测</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yarn install -D husky</span><br><span class="line">npx husky install</span><br><span class="line"><span class="comment"># 新增 commit msg 钩子</span></span><br><span class="line">npx husky add .husky/commit-msg <span class="string">"node scripts/verifyCommit.js"</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;拆解 Element3 组件库代码&lt;/li&gt;
&lt;li&gt;剖析组件库经典组件（表单、表格、弹窗等组件实现细节）&lt;/li&gt;
&lt;li&gt;使用 vite + TypeScript + sass 技术栈实现&lt;/li&gt;
&lt;/ol&gt;&lt;h1 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>webpack之SSR</title>
    <link href="https://yanadev.github.io/2022/07/08/webpack%20%E4%B9%8B%20SSR%EF%BC%88%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93%EF%BC%89/"/>
    <id>https://yanadev.github.io/2022/07/08/webpack%20%E4%B9%8B%20SSR%EF%BC%88%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93%EF%BC%89/</id>
    <published>2022-07-08T04:56:03.000Z</published>
    <updated>2022-08-15T12:45:04.842Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SSR-（Server-Side-Render）与-CSR（Client-Side-Render）"><a href="#SSR-（Server-Side-Render）与-CSR（Client-Side-Render）" class="headerlink" title="SSR （Server Side Render）与 CSR（Client Side Render）"></a>SSR （Server Side Render）与 CSR（Client Side Render）</h1><ul><li><p>CSR 存在首屏白屏问题</p></li><li><p>CSR 需要浏览器加载 js 代码，再执行 js 代码生成 html 元素</p></li><li><p>加载再执行的耗时成本比较高，导致首屏加载会有短暂的白屏出现</p></li><li><p>seo 搜索引擎问题，客户端加载的是一些 js 文件，而大部分的搜索引擎 spider 只认识 html 文件内容，对 js 无感</p></li></ul><a id="more"></a><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ssr-react</span><br><span class="line">cd ssr-react</span><br><span class="line">yarn init</span><br></pre></td></tr></table></figure><ul><li>创建 /src/*/index-server.js 入口文件</li><li>由于是服务端渲染不能使用 es6 import 语法，必须使用 cjs 方式 （require）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> React = <span class="built_in">require</span>(<span class="string">'react'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="class"><span class="keyword">class</span> <span class="title">Search</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="xml">      This is Search Page</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/&gt;</span>;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> React = <span class="built_in">require</span>(<span class="string">'react'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is Index page<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/&gt;</span>;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br></pre></td></tr></table></figure><h1 id="配置-webpack-服务端打包文件"><a href="#配置-webpack-服务端打包文件" class="headerlink" title="配置 webpack 服务端打包文件"></a>配置 webpack 服务端打包文件</h1><h2 id="webpack-ssr-js-配置文件"><a href="#webpack-ssr-js-配置文件" class="headerlink" title="webpack.ssr.js 配置文件"></a>webpack.ssr.js 配置文件</h2><ul><li>创建 webpack.ssr.js 文件<ul><li>包括 entry、output、module、plugins、mode … 模块</li></ul></li><li>配合 glob 读取多个入口文件，配置多入口打包</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add glob -D</span><br></pre></td></tr></table></figure><ul><li>配置 webpack.ssr.js 文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> setMPA = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> entry = &#123;&#125;;</span><br><span class="line">  <span class="keyword">let</span> url = path.join(__dirname, <span class="string">'/src/*/index-server.jsx'</span>).replaceAll(<span class="string">'\\'</span>, <span class="string">'/'</span>);</span><br><span class="line">  <span class="keyword">const</span> entryFiles = glob.sync(url);</span><br><span class="line">  <span class="built_in">Object</span>.keys(entryFiles).map(<span class="function"><span class="params">index</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> entryFile = entryFiles[index];</span><br><span class="line">    <span class="keyword">let</span> match = entryFile.match(<span class="regexp">/src\/(.*)\/index-server.jsx/</span>);</span><br><span class="line">    <span class="keyword">const</span> pageName = match &amp;&amp; match[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (pageName) &#123;</span><br><span class="line">      entry[pageName] = entryFile;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123; entry &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; entry &#125; = setMPA();</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置打包脚本"><a href="#配置打包脚本" class="headerlink" title="配置打包脚本"></a>配置打包脚本</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"scripts":&#123;</span><br><span class="line">    "build": "webpack --config webpack.ssr.js"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add webpack webpack-cli react react-dom -D</span><br></pre></td></tr></table></figure><h2 id="es6-模块兼容"><a href="#es6-模块兼容" class="headerlink" title="es6 模块兼容"></a>es6 模块兼容</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add babel-loader @babel/preset-env @babel/preset-react @babel/core -D</span><br></pre></td></tr></table></figure><ul><li>配置 webpack.ssr.js </li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.(js|jsx)$/</span>,</span><br><span class="line">                use: [<span class="string">'babel-loader'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>package.json 文件配置 babel 或者新建 .babelrc 文件（二选一）</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    "babel": &#123;</span><br><span class="line">        "presets": [</span><br><span class="line">            "@babel/preset-env",</span><br><span class="line">            <span class="string">"@babel/preset-react"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重新构建，自动清除构建文件"><a href="#重新构建，自动清除构建文件" class="headerlink" title="重新构建，自动清除构建文件"></a>重新构建，自动清除构建文件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add clean-webpack-plugin -D</span><br></pre></td></tr></table></figure><ul><li>webpack.ssr.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;CleanWebpackPlugin&#125; = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> CleanWebpackPlugin()</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态生成-html-模板"><a href="#动态生成-html-模板" class="headerlink" title="动态生成 html 模板"></a>动态生成 html 模板</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add html-webpack-plugin -D</span><br></pre></td></tr></table></figure><ul><li>配置 webpack.ssr.js </li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> setMPA = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> entry = &#123;&#125;;</span><br><span class="line">  <span class="keyword">let</span> htmlWebpackPlugins = [];</span><br><span class="line">  <span class="keyword">let</span> url = path.join(__dirname, <span class="string">'/src/*/index-server.jsx'</span>).replaceAll(<span class="string">'\\'</span>, <span class="string">'/'</span>);</span><br><span class="line">  <span class="keyword">const</span> entryFiles = glob.sync(url);</span><br><span class="line">  <span class="built_in">Object</span>.keys(entryFiles).map(<span class="function"><span class="params">index</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> entryFile = entryFiles[index];</span><br><span class="line">    <span class="keyword">let</span> match = entryFile.match(<span class="regexp">/src\/(.*)\/index-server.jsx/</span>);</span><br><span class="line">    <span class="keyword">const</span> pageName = match &amp;&amp; match[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (pageName) &#123;</span><br><span class="line">      entry[pageName] = entryFile;</span><br><span class="line">      htmlWebpackPlugins.push(</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">          template: path.join(__dirname, <span class="string">`/src/<span class="subst">$&#123;pageName&#125;</span>/index.html`</span>),</span><br><span class="line">          filename: <span class="string">`<span class="subst">$&#123;pageName&#125;</span>.html`</span>,</span><br><span class="line">          chunks: [<span class="string">'vendors'</span>, pageName],</span><br><span class="line">          inject: <span class="literal">true</span>,</span><br><span class="line">          minify: &#123;</span><br><span class="line">            html5: <span class="literal">true</span>,</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">            preserveLineBreaks: <span class="literal">false</span>,</span><br><span class="line">            minifyCSS: <span class="literal">true</span>,</span><br><span class="line">            minifyJS: <span class="literal">true</span>,</span><br><span class="line">            removeComments: <span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> &#123; entry, htmlWebpackPlugins &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; entry, htmlWebpackPlugins &#125; = setMPA();</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    plugins:[</span><br><span class="line">        ...</span><br><span class="line">    ].concat(htmlWebpackPlugins)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分离基础包"><a href="#分离基础包" class="headerlink" title="分离基础包"></a>分离基础包</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add html-webpack-externals-plugin -D</span><br></pre></td></tr></table></figure><ul><li>多入口文件需要每个入口文件模板指定 cdn 地址，否则每个入口文件都会叠加引入 cdn，导致入口文件中引入多次 cdn</li><li>当 mode 设置为  none 时候，此时会报错：process undefined，需要手动设置 process.env 为全局属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackExternalsPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-externals-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> glob = <span class="built_in">require</span>(<span class="string">'glob'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> setMPA = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> entry = &#123;&#125;;</span><br><span class="line">  <span class="keyword">let</span> htmlWebpackPlugins = [];</span><br><span class="line">  <span class="keyword">let</span> HtmlWebpackExternalsPlugins = [];</span><br><span class="line">  <span class="keyword">let</span> url = path.join(__dirname, <span class="string">'/src/*/index.jsx'</span>).replaceAll(<span class="string">'\\'</span>, <span class="string">'/'</span>);</span><br><span class="line">  <span class="keyword">const</span> entryFiles = glob.sync(url);</span><br><span class="line">  <span class="built_in">Object</span>.keys(entryFiles).map(<span class="function"><span class="params">index</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> entryFile = entryFiles[index];</span><br><span class="line">    <span class="keyword">let</span> match = entryFile.match(<span class="regexp">/src\/(.*)\/index.jsx/</span>);</span><br><span class="line">    <span class="keyword">const</span> pageName = match &amp;&amp; match[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (pageName) &#123;</span><br><span class="line">      entry[pageName] = entryFile;</span><br><span class="line">      <span class="comment">// 每个入口文件设置 基础库的cdn</span></span><br><span class="line">      HtmlWebpackExternalsPlugins.push(<span class="keyword">new</span> HtmlWebpackExternalsPlugin(&#123;</span><br><span class="line">        externals: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="built_in">module</span>: <span class="string">'react'</span>,</span><br><span class="line">            entry: <span class="string">'https://unpkg.com/react@18/umd/react.development.js'</span>,</span><br><span class="line">            global: <span class="string">'React'</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="built_in">module</span>: <span class="string">'react-dom'</span>,</span><br><span class="line">            entry: <span class="string">'https://unpkg.com/react-dom@18/umd/react-dom.development.js'</span>,</span><br><span class="line">            global: <span class="string">'ReactDOM'</span></span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        files: [<span class="string">`<span class="subst">$&#123;pageName&#125;</span>.html`</span>]</span><br><span class="line">      &#125;));</span><br><span class="line">      <span class="comment">// 入口文件生成模板</span></span><br><span class="line">      htmlWebpackPlugins.push(</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">          template: path.join(__dirname, <span class="string">`/src/<span class="subst">$&#123;pageName&#125;</span>/index.html`</span>),</span><br><span class="line">          filename: <span class="string">`<span class="subst">$&#123;pageName&#125;</span>.html`</span>,</span><br><span class="line">          chunks: [pageName],</span><br><span class="line">          inject: <span class="literal">true</span>,</span><br><span class="line">          minify: &#123;</span><br><span class="line">            html5: <span class="literal">true</span>,</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">            preserveLineBreaks: <span class="literal">false</span>,</span><br><span class="line">            minifyCSS: <span class="literal">true</span>,</span><br><span class="line">            minifyJS: <span class="literal">true</span>,</span><br><span class="line">            removeComments: <span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123; entry, htmlWebpackPlugins, HtmlWebpackExternalsPlugins &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; entry, htmlWebpackPlugins, HtmlWebpackExternalsPlugins &#125; = setMPA();</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'[name].js'</span>,</span><br><span class="line">    path: path.join(__dirname, <span class="string">'dist'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(js|jsx)$/</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        use: [<span class="string">'babel-loader'</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  mode: <span class="string">'none'</span>,</span><br><span class="line">  optimization: &#123;</span><br><span class="line">    splitChunks: &#123;</span><br><span class="line">      minSize: <span class="number">0</span>,</span><br><span class="line">      cacheGroups: &#123;</span><br><span class="line">        commons: &#123;</span><br><span class="line">          name: <span class="string">'commons'</span>,</span><br><span class="line">          chunks: <span class="string">'all'</span>,</span><br><span class="line">          minChunks: <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> CleanWebpackPlugin(),</span><br><span class="line">    <span class="keyword">new</span> webpack.DefinePlugin(&#123;<span class="comment">/**webpack 内置插件 */</span></span><br><span class="line">      <span class="string">'process.env'</span>: &#123;</span><br><span class="line">        NODE_ENV: process.env.NODE_ENV <span class="comment">/**将属性转化为全局变量，可正常访问 */</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">  ]</span><br><span class="line">    .concat(...htmlWebpackPlugins)</span><br><span class="line">    .concat(HtmlWebpackExternalsPlugins)</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="启动-热更新-webpack-dev-server"><a href="#启动-热更新-webpack-dev-server" class="headerlink" title="启动 热更新 webpack-dev-server"></a>启动 热更新 webpack-dev-server</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add webpack-dev-server -D</span><br></pre></td></tr></table></figure><ul><li>配置启动脚本</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"scripts"</span>:&#123;</span><br><span class="line">        <span class="string">"dev"</span>:<span class="string">"webpack server --config webpack.dev.js --open"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置 webpack.dev.js </li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode:<span class="string">'development'</span>,</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        port: <span class="number">3000</span>,</span><br><span class="line">        compress: <span class="literal">false</span>,</span><br><span class="line">        <span class="keyword">static</span>: &#123;</span><br><span class="line">          directory: path.join(process.cwd(), <span class="string">'public'</span>),</span><br><span class="line">          publicPath: <span class="string">'/'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        client: &#123;</span><br><span class="line">          overlay: &#123;</span><br><span class="line">            errors: <span class="literal">true</span>,</span><br><span class="line">            warnings: <span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>执行脚本</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run dev</span><br></pre></td></tr></table></figure><h1 id="loader"><a href="#loader" class="headerlink" title="loader"></a>loader</h1><h2 id="css-css-loader-与-style-loader"><a href="#css-css-loader-与-style-loader" class="headerlink" title="css:css-loader 与 style-loader"></a>css:css-loader 与 style-loader</h2><ul><li>css-loader 会对 <code>@import 和 url()</code> 进行处理</li><li>style-loader 将 <code>css 注入到 js</code> 中，通过 DOM 操作控制 css</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add css-loader less-loader less -D</span><br></pre></td></tr></table></figure><h2 id="处理文件-图片、字体等"><a href="#处理文件-图片、字体等" class="headerlink" title="处理文件(图片、字体等)"></a>处理文件(图片、字体等)</h2><p>webpack 5 内置了 <code>资源模块（asset module）</code>，替代了 <code>file-loader</code> 和 <code>url-loader</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.(png|svg|jpg|jpeg|gif)$/</span>,</span><br><span class="line">    type:<span class="string">'asset'</span>,</span><br><span class="line">    generator: &#123;</span><br><span class="line">        filename: <span class="string">"static/img/[name].[hash:7].ext"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="css-增强（兼容前缀）"><a href="#css-增强（兼容前缀）" class="headerlink" title="css 增强（兼容前缀）"></a>css 增强（兼容前缀）</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add postcss-loader autoprefixer -D</span><br></pre></td></tr></table></figure><ul><li>执行顺序是 less-loader -&gt; postcss-loader -&gt; css-loader -&gt; style-loader</li><li>use 属性中自下而上执行</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="built_in">module</span>:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">                use: [</span><br><span class="line">                  <span class="string">'style-loader'</span>,</span><br><span class="line">                  <span class="string">'css-loader'</span>,</span><br><span class="line">                  &#123;</span><br><span class="line">                    loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                      postcssOptions: &#123;</span><br><span class="line">                        plugins: [<span class="string">'autoprefixer'</span>]</span><br><span class="line">                      &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;,</span><br><span class="line">                  <span class="string">'less-loader'</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>同时需要配置浏览器兼容范围 browserslist 配置</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"browserslist"</span>:&#123;</span><br><span class="line">         <span class="attr">"production"</span>: [</span><br><span class="line">          <span class="string">"&gt;0.2%"</span>,</span><br><span class="line">          <span class="string">"not dead"</span>,</span><br><span class="line">          <span class="string">"not op_mini all"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"development"</span>: [</span><br><span class="line">          <span class="string">"last 1 chrome version"</span>,</span><br><span class="line">          <span class="string">"last 1 firefox version"</span>,</span><br><span class="line">          <span class="string">"last 1 safari version"</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="css-抽离独立文件（分离css）"><a href="#css-抽离独立文件（分离css）" class="headerlink" title="css 抽离独立文件（分离css）"></a>css 抽离独立文件（分离css）</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add mini-css-extract-plugin -D</span><br></pre></td></tr></table></figure><ul><li>开发环境不需要样式分离</li><li>生产环境进行样式分离</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode:<span class="string">'production'</span>,</span><br><span class="line">    <span class="built_in">module</span>:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">                use: [</span><br><span class="line">                  MiniCssExtractPlugin.loader,</span><br><span class="line">                  <span class="comment">// 'style-loader',</span></span><br><span class="line">                  <span class="string">'css-loader'</span>,</span><br><span class="line">                  &#123;</span><br><span class="line">                    loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                      postcssOptions: &#123;</span><br><span class="line">                        plugins: [<span class="string">'autoprefixer'</span>]</span><br><span class="line">                      &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;,</span><br><span class="line">                  <span class="string">'less-loader'</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">            filename: <span class="string">'[name]_[hash:8].css'</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>![image-20220609015413386](webpack 之 SSR（服务端渲染）/image-20220609015413386.png)</p><h2 id="配置别名（绝对路径）"><a href="#配置别名（绝对路径）" class="headerlink" title="配置别名（绝对路径）"></a>配置别名（绝对路径）</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    resolve: &#123;</span><br><span class="line">        <span class="comment">// extensions: ['.js', '.jsx', '.ts', '.tsx', '.css', '.less', 'svg'],</span></span><br><span class="line">        alias: &#123;</span><br><span class="line">          <span class="string">'@'</span>: path.join(__dirname, <span class="string">'/'</span>),</span><br><span class="line">          <span class="string">'@server'</span>: path.join(__dirname, <span class="string">'/server'</span>),</span><br><span class="line">          <span class="string">'@src'</span>: path.join(__dirname, <span class="string">'/src'</span>),</span><br><span class="line">          <span class="string">'@comp'</span>: path.join(__dirname, <span class="string">'/src/components'</span>),</span><br><span class="line">          <span class="string">'@images'</span>: path.join(__dirname, <span class="string">'/src/assets/images'</span>),</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码分离"><a href="#代码分离" class="headerlink" title="代码分离"></a>代码分离</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    optimization: &#123;</span><br><span class="line">        splitChunks: &#123;</span><br><span class="line">          chunks: <span class="string">'all'</span>,</span><br><span class="line">          name: <span class="string">'vendor'</span>,</span><br><span class="line">          cacheGroups: &#123;</span><br><span class="line">            <span class="string">'echarts.vendor'</span>: &#123;</span><br><span class="line">              name: <span class="string">'echarts.vendor'</span>,</span><br><span class="line">              priority: <span class="number">40</span>,</span><br><span class="line">              test: <span class="regexp">/[\\/]node_modules[\\/](echarts|zrender)[\\/]/</span>,</span><br><span class="line">              chunks: <span class="string">'all'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">'lodash'</span>: &#123;</span><br><span class="line">              name: <span class="string">'lodash'</span>,</span><br><span class="line">              chunks: <span class="string">'async'</span>,</span><br><span class="line">              test: <span class="regexp">/[\\/]node_modules[\\/]/</span>,</span><br><span class="line">              priority: <span class="number">40</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">'async-common'</span>: &#123;</span><br><span class="line">              chunks: <span class="string">'async'</span>,</span><br><span class="line">              minChunks: <span class="number">2</span>,</span><br><span class="line">              name: <span class="string">'async-commons'</span>,</span><br><span class="line">              priority: <span class="number">30</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            commons: &#123;</span><br><span class="line">              name: <span class="string">'commons'</span>,</span><br><span class="line">              chunks: <span class="string">'all'</span>,</span><br><span class="line">              minChunks: <span class="number">2</span>,</span><br><span class="line">              priority: <span class="number">20</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="非动态导入-echarts"><a href="#非动态导入-echarts" class="headerlink" title="非动态导入 echarts"></a>非动态导入 echarts</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add echarts -S</span><br></pre></td></tr></table></figure><ul><li>新建 /src/echarts.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">"echarts"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定图表的配置项和数据</span></span><br><span class="line"><span class="keyword">var</span> option = &#123;</span><br><span class="line">  title: &#123;</span><br><span class="line">    text: <span class="string">'ECharts 入门示例'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  tooltip: &#123;&#125;,</span><br><span class="line">  legend: &#123;</span><br><span class="line">    data: [<span class="string">'销量'</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  xAxis: &#123;</span><br><span class="line">    data: [<span class="string">'衬衫'</span>, <span class="string">'羊毛衫'</span>, <span class="string">'雪纺衫'</span>, <span class="string">'裤子'</span>, <span class="string">'高跟鞋'</span>, <span class="string">'袜子'</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  yAxis: &#123;&#125;,</span><br><span class="line">  series: [</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">'销量'</span>,</span><br><span class="line">      type: <span class="string">'bar'</span>,</span><br><span class="line">      data: [<span class="number">5</span>, <span class="number">20</span>, <span class="number">36</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">20</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用刚指定的配置项和数据显示图表。</span></span><br><span class="line">myChart.setOption(option);</span><br></pre></td></tr></table></figure><ul><li>入口模板文件中设置根元素 id 为 main </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Index<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">+    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span></span></span><br><span class="line"><span class="tag">+         <span class="attr">style</span>=<span class="string">"width: 600px; height: 400px"</span>&gt;</span>dddd<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>入口文件 index.jsx 中直接引入即可</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createRoot &#125; <span class="keyword">from</span> <span class="string">'react-dom/client'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./index.less'</span>;</span><br><span class="line"><span class="comment">// import logo from '../assets/images/favicon.ico';</span></span><br><span class="line"><span class="keyword">import</span> logo <span class="keyword">from</span> <span class="string">'@images/favicon.ico'</span>;</span><br><span class="line"><span class="keyword">import</span> Demo <span class="keyword">from</span> <span class="string">'@comp/demo.jsx'</span>;</span><br><span class="line">+<span class="keyword">import</span> <span class="string">'@src/echarts'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is Index page<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">      &lt;img src=&#123;logo&#125; alt="icon" className="logo" /&gt;</span><br><span class="line">      55555</span><br><span class="line">      &lt;Demo /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">const container = document.getElementById('root');</span><br><span class="line">const root = createRoot(container);</span><br><span class="line">root.render(&lt;Index /&gt;);</span><br></pre></td></tr></table></figure><p>![image-20220611021617990](webpack 之 SSR（服务端渲染）/image-20220611021617990.png)</p><h1 id="动态导入（按需加载-chunks）"><a href="#动态导入（按需加载-chunks）" class="headerlink" title="动态导入（按需加载 chunks）"></a>动态导入（按需加载 chunks）</h1><p>按需下载资源，如路由懒加载：可提高首屏加载速度</p><ul><li>安装 lodash</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add lodash -D</span><br></pre></td></tr></table></figure><ul><li>通过 import() 语法实现动态导入</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;&#125;;</span><br><span class="line">    <span class="keyword">this</span>.handleLazyLoad = <span class="keyword">this</span>.handleLazyLoad.bind(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">this</span>.testLodash = <span class="keyword">this</span>.testLodash.bind(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  handleLazyLoad() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">import</span>(<span class="string">'lodash'</span>).then(<span class="function">(<span class="params">&#123; <span class="keyword">default</span>: _ &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello, webpack<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  testLodash() &#123;</span><br><span class="line">    <span class="keyword">this</span>.handleLazyLoad().then(<span class="function"><span class="params">ele</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">        newNode: ele</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.testLodash&#125;</span>&gt;</span>Lazy Load<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">      &#123;this.state.newNode&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/&gt;</span>;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>只有点击按钮，lodash 才会被加载</li></ul><p>![image-20220611043543074](webpack 之 SSR（服务端渲染）/image-20220611043543074.png)</p><h1 id="基于以上项目构建-SSR-渲染"><a href="#基于以上项目构建-SSR-渲染" class="headerlink" title="基于以上项目构建 SSR 渲染"></a>基于以上项目构建 SSR 渲染</h1><ul><li>安装 nodemon 实现热更新启动服务</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add nodemon -S</span><br></pre></td></tr></table></figure><ul><li>安装 node-jsx </li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add node-jsx -S</span><br></pre></td></tr></table></figure><ul><li>配置启动脚本</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"ssr"</span>: <span class="string">"nodemon server/app.js"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建入口文件 search <code>/src/search/index-server.jsx</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">const</span> React = <span class="built_in">require</span>(<span class="string">'react'</span>);</span><br><span class="line"><span class="keyword">const</span> logo = <span class="built_in">require</span>(<span class="string">'@images/favicon.ico'</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">'./index.less'</span>);</span><br><span class="line"><span class="comment">// require('../../dist/abx'); /* 测试编译出错 */ </span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Search</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  handleChange(e) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;&gt;</span>ddddd</span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is Search page<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">      &lt;img src=&#123;logo&#125; alt="" /&gt;</span><br><span class="line">      sssss</span><br><span class="line"></span><br><span class="line">    &lt;/&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">module.exports = &lt;Search /&gt;;</span><br></pre></td></tr></table></figure><ul><li>新建 server/app.js 配置服务</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span> === <span class="string">'undefined'</span>) &#123;</span><br><span class="line">  global.window = &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; renderToString &#125; = <span class="built_in">require</span>(<span class="string">'react-dom/server'</span>);</span><br><span class="line"><span class="keyword">const</span> Search = <span class="built_in">require</span>(<span class="string">'../dist/search-server'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> template = fs.readFileSync(path.join(__dirname, <span class="string">'../dist/search.html'</span>), <span class="string">'utf-8'</span>);</span><br><span class="line"><span class="keyword">const</span> data = <span class="built_in">require</span>(<span class="string">'./data.json'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = <span class="function">(<span class="params">port</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">  app.use(express.static(<span class="string">'dist'</span>));</span><br><span class="line"></span><br><span class="line">  app.get(<span class="string">'/search'</span>, (req, res) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> html = renderMarkup(renderToString(Search));</span><br><span class="line">    res.status(<span class="number">200</span>).send(html);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  app.listen(port, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Server is running on port:'</span> + port);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">server(process.env.PORT || <span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderMarkup = <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> dataStr = <span class="built_in">JSON</span>.stringify(data);</span><br><span class="line">  <span class="keyword">return</span> template.replace(<span class="string">'&lt;!--HTML_PLACEHOLDER--&gt;'</span>, str)</span><br><span class="line">    .replace(<span class="string">'&lt;!--INITIAL_DATA_PLACEHOLDER--&gt;'</span>, <span class="string">`&lt;script&gt;window.__initial_data=<span class="subst">$&#123;dataStr&#125;</span>&lt;/script&gt;`</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>data.json 文件：首屏加载的数据内联到 html 中</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"error"</span>: [],</span><br><span class="line">  <span class="attr">"extra"</span>: [],</span><br><span class="line">  <span class="attr">"data"</span>: &#123;</span><br><span class="line">    <span class="attr">"list"</span>: [</span><br><span class="line">      [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"sub_count"</span>: <span class="number">5556</span>,</span><br><span class="line">          <span class="attr">"column_type"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"id"</span>: <span class="number">192</span>,</span><br><span class="line">          <span class="attr">"column_price_market"</span>: <span class="number">9900</span>,</span><br><span class="line">          <span class="attr">"column_bgcolor"</span>: <span class="string">"#F6F7FB"</span>,</span><br><span class="line">          <span class="attr">"column_title"</span>: <span class="string">"SQL必知必会"</span>,</span><br><span class="line">          <span class="attr">"column_cover_small"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/1c\/38\/1c5a5b154b543af952312eef33217438.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_cover"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/c7\/0d\/c7ee0aabbcb6d2da09a1b4a56c1a730d.jpg"</span>,</span><br><span class="line">          <span class="attr">"had_sub"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"price_type"</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="attr">"column_unit"</span>: <span class="string">"45讲"</span>,</span><br><span class="line">          <span class="attr">"is_experience"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"column_ctime"</span>: <span class="number">1559640855</span>,</span><br><span class="line">          <span class="attr">"update_frequency"</span>: <span class="string">"每周一 \/ 三 \/ 五更新"</span>,</span><br><span class="line">          <span class="attr">"is_onboard"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"author_intro"</span>: <span class="string">"清华大学计算机博士"</span>,</span><br><span class="line">          <span class="attr">"column_sku"</span>: <span class="number">100029501</span>,</span><br><span class="line">          <span class="attr">"column_cover_wxlite"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/cd\/f0\/cd26b744d388dbd4387dcfaa66dd8bf0.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_price"</span>: <span class="number">6800</span>,</span><br><span class="line">          <span class="attr">"column_price_sale"</span>: <span class="number">6800</span>,</span><br><span class="line">          <span class="attr">"author_name"</span>: <span class="string">"陈旸"</span>,</span><br><span class="line">          <span class="attr">"column_subtitle"</span>: <span class="string">"从入门到数据实战"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"sub_count"</span>: <span class="number">5446</span>,</span><br><span class="line">          <span class="attr">"column_type"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"id"</span>: <span class="number">191</span>,</span><br><span class="line">          <span class="attr">"column_price_market"</span>: <span class="number">9900</span>,</span><br><span class="line">          <span class="attr">"column_bgcolor"</span>: <span class="string">"#F6F7FB"</span>,</span><br><span class="line">          <span class="attr">"column_title"</span>: <span class="string">"Kafka核心技术与实战"</span>,</span><br><span class="line">          <span class="attr">"column_cover_small"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/be\/d9\/be55e9cfe7b542ef6284e3e5722b9bd9.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_cover"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/49\/92\/49d8686324a61b106f9fbeb45c9d7192.jpg"</span>,</span><br><span class="line">          <span class="attr">"had_sub"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"price_type"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"column_unit"</span>: <span class="string">"42讲"</span>,</span><br><span class="line">          <span class="attr">"is_experience"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"column_ctime"</span>: <span class="number">1559009326</span>,</span><br><span class="line">          <span class="attr">"update_frequency"</span>: <span class="string">"每周二 \/ 四 \/ 六更新"</span>,</span><br><span class="line">          <span class="attr">"is_onboard"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"author_intro"</span>: <span class="string">"人人贷计算平台部总监，Apache Kafka Contributor"</span>,</span><br><span class="line">          <span class="attr">"column_sku"</span>: <span class="number">100029201</span>,</span><br><span class="line">          <span class="attr">"column_cover_wxlite"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/fc\/f6\/fcddac07fdd4530b99b5a1049b6aa5f6.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_price"</span>: <span class="number">9900</span>,</span><br><span class="line">          <span class="attr">"column_price_sale"</span>: <span class="number">9900</span>,</span><br><span class="line">          <span class="attr">"author_name"</span>: <span class="string">"胡夕"</span>,</span><br><span class="line">          <span class="attr">"column_subtitle"</span>: <span class="string">"全面提升你的Kafka实战能力"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"sub_count"</span>: <span class="number">4209</span>,</span><br><span class="line">          <span class="attr">"column_type"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"id"</span>: <span class="number">189</span>,</span><br><span class="line">          <span class="attr">"column_price_market"</span>: <span class="number">9900</span>,</span><br><span class="line">          <span class="attr">"column_bgcolor"</span>: <span class="string">"#F6F7FB"</span>,</span><br><span class="line">          <span class="attr">"column_title"</span>: <span class="string">"透视HTTP协议"</span>,</span><br><span class="line">          <span class="attr">"column_cover_small"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/7f\/6e\/7ff02fbdbc37331b10c5435dc86e4f6e.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_cover"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/2a\/10\/2ac9b106533a4904f66041143a0e1b10.jpg"</span>,</span><br><span class="line">          <span class="attr">"had_sub"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"price_type"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"column_unit"</span>: <span class="string">"40讲"</span>,</span><br><span class="line">          <span class="attr">"is_experience"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"column_ctime"</span>: <span class="number">1558689100</span>,</span><br><span class="line">          <span class="attr">"update_frequency"</span>: <span class="string">"每周一／三／五更新"</span>,</span><br><span class="line">          <span class="attr">"is_onboard"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"author_intro"</span>: <span class="string">"奇虎360技术专家，Nginx\/OpenResty开源项目贡献者"</span>,</span><br><span class="line">          <span class="attr">"column_sku"</span>: <span class="number">100029001</span>,</span><br><span class="line">          <span class="attr">"column_cover_wxlite"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/b6\/53\/b60efb231d0ccc797b4329cd58b57453.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_price"</span>: <span class="number">9900</span>,</span><br><span class="line">          <span class="attr">"column_price_sale"</span>: <span class="number">9900</span>,</span><br><span class="line">          <span class="attr">"author_name"</span>: <span class="string">"罗剑锋（Chrono）"</span>,</span><br><span class="line">          <span class="attr">"column_subtitle"</span>: <span class="string">"深入理解HTTP协议本质与应用"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"sub_count"</span>: <span class="number">1196</span>,</span><br><span class="line">          <span class="attr">"column_type"</span>: <span class="number">3</span>,</span><br><span class="line">          <span class="attr">"id"</span>: <span class="number">181</span>,</span><br><span class="line">          <span class="attr">"column_price_market"</span>: <span class="number">12900</span>,</span><br><span class="line">          <span class="attr">"column_bgcolor"</span>: <span class="string">"#FFFFFF"</span>,</span><br><span class="line">          <span class="attr">"column_title"</span>: <span class="string">"零基础学Java"</span>,</span><br><span class="line">          <span class="attr">"column_cover_small"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/1e\/d5\/1eb010e6535872bf773b222a68ef48d5.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_cover"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/18\/b2\/18540a6c839dcd85527417e0a20ad5b2.jpg"</span>,</span><br><span class="line">          <span class="attr">"had_sub"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"price_type"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"column_unit"</span>: <span class="string">"141讲"</span>,</span><br><span class="line">          <span class="attr">"is_experience"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"column_ctime"</span>: <span class="number">1557310171</span>,</span><br><span class="line">          <span class="attr">"update_frequency"</span>: <span class="string">"141课时，约1500分钟"</span>,</span><br><span class="line">          <span class="attr">"is_onboard"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"author_intro"</span>: <span class="string">"PayPal数据处理组技术负责人"</span>,</span><br><span class="line">          <span class="attr">"column_sku"</span>: <span class="number">100027801</span>,</span><br><span class="line">          <span class="attr">"column_cover_wxlite"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/f2\/56\/f24feba110c1c9a2d45799fe19ea9f56.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_price"</span>: <span class="number">12900</span>,</span><br><span class="line">          <span class="attr">"column_price_sale"</span>: <span class="number">12900</span>,</span><br><span class="line">          <span class="attr">"author_name"</span>: <span class="string">"臧萌"</span>,</span><br><span class="line">          <span class="attr">"column_subtitle"</span>: <span class="string">"通俗易懂的Java入门课"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"sub_count"</span>: <span class="number">5120</span>,</span><br><span class="line">          <span class="attr">"column_type"</span>: <span class="number">3</span>,</span><br><span class="line">          <span class="attr">"id"</span>: <span class="number">175</span>,</span><br><span class="line">          <span class="attr">"column_price_market"</span>: <span class="number">12900</span>,</span><br><span class="line">          <span class="attr">"column_bgcolor"</span>: <span class="string">"#FFFFFF"</span>,</span><br><span class="line">          <span class="attr">"column_title"</span>: <span class="string">"Web协议详解与抓包实战"</span>,</span><br><span class="line">          <span class="attr">"column_cover_small"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/6f\/46\/6f1e665a01d20dd237cbdd2210563f46.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_cover"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/04\/0a\/0430f8402be85def96111b2d4950290a.jpg"</span>,</span><br><span class="line">          <span class="attr">"had_sub"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"price_type"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"column_unit"</span>: <span class="string">"83讲"</span>,</span><br><span class="line">          <span class="attr">"is_experience"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"column_ctime"</span>: <span class="number">1556262573</span>,</span><br><span class="line">          <span class="attr">"update_frequency"</span>: <span class="string">"83课时，约1000分钟"</span>,</span><br><span class="line">          <span class="attr">"is_onboard"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"author_intro"</span>: <span class="string">"智链达CTO，前阿里云高级技术专家"</span>,</span><br><span class="line">          <span class="attr">"column_sku"</span>: <span class="number">100026801</span>,</span><br><span class="line">          <span class="attr">"column_cover_wxlite"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/cf\/6d\/cf98743409df276e2dce76631dd1a56d.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_price"</span>: <span class="number">12900</span>,</span><br><span class="line">          <span class="attr">"column_price_sale"</span>: <span class="number">12900</span>,</span><br><span class="line">          <span class="attr">"author_name"</span>: <span class="string">"陶辉"</span>,</span><br><span class="line">          <span class="attr">"column_subtitle"</span>: <span class="string">"系统掌握Web协议，高效解决网络难题"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"sub_count"</span>: <span class="number">1390</span>,</span><br><span class="line">          <span class="attr">"column_type"</span>: <span class="number">3</span>,</span><br><span class="line">          <span class="attr">"id"</span>: <span class="number">169</span>,</span><br><span class="line">          <span class="attr">"column_price_market"</span>: <span class="number">12900</span>,</span><br><span class="line">          <span class="attr">"column_bgcolor"</span>: <span class="string">"#FFFFFF"</span>,</span><br><span class="line">          <span class="attr">"column_title"</span>: <span class="string">"从0开发一款iOS App"</span>,</span><br><span class="line">          <span class="attr">"column_cover_small"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/fd\/c6\/fd828461c4a3cfa0a6a93dd1817001c6.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_cover"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/19\/46\/198d9604ea72cfb812442ab2b5d01b46.jpg"</span>,</span><br><span class="line">          <span class="attr">"had_sub"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"price_type"</span>: <span class="number">3</span>,</span><br><span class="line">          <span class="attr">"column_unit"</span>: <span class="string">"61讲"</span>,</span><br><span class="line">          <span class="attr">"is_experience"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"column_ctime"</span>: <span class="number">1555323160</span>,</span><br><span class="line">          <span class="attr">"update_frequency"</span>: <span class="string">"61课时，约500分钟"</span>,</span><br><span class="line">          <span class="attr">"is_onboard"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"author_intro"</span>: <span class="string">"腾讯高级工程师"</span>,</span><br><span class="line">          <span class="attr">"column_sku"</span>: <span class="number">100025901</span>,</span><br><span class="line">          <span class="attr">"column_cover_wxlite"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/b6\/78\/b67742c736399370628bfc202b646f78.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_price"</span>: <span class="number">9900</span>,</span><br><span class="line">          <span class="attr">"column_price_sale"</span>: <span class="number">12900</span>,</span><br><span class="line">          <span class="attr">"author_name"</span>: <span class="string">"朱德权"</span>,</span><br><span class="line">          <span class="attr">"column_subtitle"</span>: <span class="string">"手把手带你构建类今日头条的App"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"sub_count"</span>: <span class="number">9580</span>,</span><br><span class="line">          <span class="attr">"column_type"</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="attr">"id"</span>: <span class="number">75</span>,</span><br><span class="line">          <span class="attr">"column_price_market"</span>: <span class="number">900</span>,</span><br><span class="line">          <span class="attr">"column_bgcolor"</span>: <span class="string">"#ffffff"</span>,</span><br><span class="line">          <span class="attr">"column_title"</span>: <span class="string">"深入浅出gRPC"</span>,</span><br><span class="line">          <span class="attr">"column_cover_small"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/f3\/f6\/f3abb28a927bf207332f7ce41c5e3bf6.png"</span>,</span><br><span class="line">          <span class="attr">"column_cover"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/73\/a0\/73abcab9cd7e8127d15dc11e84339ea0.jpg"</span>,</span><br><span class="line">          <span class="attr">"had_sub"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"price_type"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"column_unit"</span>: <span class="string">"6讲"</span>,</span><br><span class="line">          <span class="attr">"is_experience"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"column_ctime"</span>: <span class="number">1520409029</span>,</span><br><span class="line">          <span class="attr">"update_frequency"</span>: <span class="string">"全集"</span>,</span><br><span class="line">          <span class="attr">"is_onboard"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"author_intro"</span>: <span class="string">"《Netty 权威指南》、《分布式服务框架原理与实践》作者。"</span>,</span><br><span class="line">          <span class="attr">"column_sku"</span>: <span class="number">100005601</span>,</span><br><span class="line">          <span class="attr">"column_cover_wxlite"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/fe\/57\/fe319ec636d61d7b30a46bedf6b80657.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_price"</span>: <span class="number">900</span>,</span><br><span class="line">          <span class="attr">"column_price_sale"</span>: <span class="number">900</span>,</span><br><span class="line">          <span class="attr">"author_name"</span>: <span class="string">"李林锋"</span>,</span><br><span class="line">          <span class="attr">"column_subtitle"</span>: <span class="string">"详解gRPC运作机制与原理"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"sub_count"</span>: <span class="number">5761</span>,</span><br><span class="line">          <span class="attr">"column_type"</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="attr">"id"</span>: <span class="number">73</span>,</span><br><span class="line">          <span class="attr">"column_price_market"</span>: <span class="number">900</span>,</span><br><span class="line">          <span class="attr">"column_bgcolor"</span>: <span class="string">"#ffffff"</span>,</span><br><span class="line">          <span class="attr">"column_title"</span>: <span class="string">"Service Mesh实践指南"</span>,</span><br><span class="line">          <span class="attr">"column_cover_small"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/62\/c8\/6219bb77d64a1d4f0492e462fbc914c8.png"</span>,</span><br><span class="line">          <span class="attr">"column_cover"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/3d\/75\/3d12373859e03012332614996351ce75.jpg"</span>,</span><br><span class="line">          <span class="attr">"had_sub"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"price_type"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"column_unit"</span>: <span class="string">"6讲"</span>,</span><br><span class="line">          <span class="attr">"is_experience"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"column_ctime"</span>: <span class="number">1518082159</span>,</span><br><span class="line">          <span class="attr">"update_frequency"</span>: <span class="string">"全集"</span>,</span><br><span class="line">          <span class="attr">"is_onboard"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"author_intro"</span>: <span class="string">"微博平台研发技术专家，高性能OpenResty开发框架Vanilla作者。"</span>,</span><br><span class="line">          <span class="attr">"column_sku"</span>: <span class="number">100005401</span>,</span><br><span class="line">          <span class="attr">"column_cover_wxlite"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/ea\/54\/eacd1c6a1889c86f7d514f049228af54.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_price"</span>: <span class="number">900</span>,</span><br><span class="line">          <span class="attr">"column_price_sale"</span>: <span class="number">900</span>,</span><br><span class="line">          <span class="attr">"author_name"</span>: <span class="string">"周晶"</span>,</span><br><span class="line">          <span class="attr">"column_subtitle"</span>: <span class="string">"来自一线大厂的第一手经验总结"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"sub_count"</span>: <span class="number">15259</span>,</span><br><span class="line">          <span class="attr">"column_type"</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="attr">"id"</span>: <span class="number">61</span>,</span><br><span class="line">          <span class="attr">"column_price_market"</span>: <span class="number">100</span>,</span><br><span class="line">          <span class="attr">"column_bgcolor"</span>: <span class="string">"#eac44b"</span>,</span><br><span class="line">          <span class="attr">"column_title"</span>: <span class="string">"如何做好一场技术演讲"</span>,</span><br><span class="line">          <span class="attr">"column_cover_small"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/cc\/fb\/ccb3acf6fcfab959aee1d800b882f7fb.png"</span>,</span><br><span class="line">          <span class="attr">"column_cover"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/0a\/2d\/0a3ec20c90b059cab58e15e91d02662d.jpg"</span>,</span><br><span class="line">          <span class="attr">"had_sub"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"price_type"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"column_unit"</span>: <span class="string">"6讲"</span>,</span><br><span class="line">          <span class="attr">"is_experience"</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">"column_ctime"</span>: <span class="number">1511953968</span>,</span><br><span class="line">          <span class="attr">"update_frequency"</span>: <span class="string">"全集"</span>,</span><br><span class="line">          <span class="attr">"is_onboard"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"author_intro"</span>: <span class="string">"极客时间编辑部"</span>,</span><br><span class="line">          <span class="attr">"column_sku"</span>: <span class="number">100003001</span>,</span><br><span class="line">          <span class="attr">"column_cover_wxlite"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/d3\/a4\/d33c2ee1b89006207992bcc7d26ff8a4.jpg"</span>,</span><br><span class="line">          <span class="attr">"column_price"</span>: <span class="number">100</span>,</span><br><span class="line">          <span class="attr">"column_price_sale"</span>: <span class="number">100</span>,</span><br><span class="line">          <span class="attr">"author_name"</span>: <span class="string">"极客时间"</span>,</span><br><span class="line">          <span class="attr">"column_subtitle"</span>: <span class="string">"程序员都应该学学怎么表达"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"nav"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"专栏"</span>,</span><br><span class="line">        <span class="attr">"color"</span>: <span class="string">"#5ba6ff"</span>,</span><br><span class="line">        <span class="attr">"icon"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/dd\/9e\/dd8cbc79f017d1b01f643c7ea929d79e.png"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"视频课程"</span>,</span><br><span class="line">        <span class="attr">"color"</span>: <span class="string">"#79c109"</span>,</span><br><span class="line">        <span class="attr">"icon"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/4a\/c3\/4aebe8fb752fa21a0fd989a45d9847c3.png"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"微课"</span>,</span><br><span class="line">        <span class="attr">"color"</span>: <span class="string">"#5ba6ff"</span>,</span><br><span class="line">        <span class="attr">"icon"</span>: <span class="string">"https:\/\/static001.geekbang.org\/resource\/image\/9c\/f1\/9c223ccae33c5245a3009857582f1df1.png"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"code"</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>webpack 配置文件大体内容和 <code>生产环境一致</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackExternalsPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-externals-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> FriendlyErrorsWebpackPlugin = <span class="built_in">require</span>(<span class="string">'friendly-errors-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> glob = <span class="built_in">require</span>(<span class="string">'glob'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> setMPA = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> entry = &#123;&#125;;</span><br><span class="line">  <span class="keyword">let</span> htmlWebpackPlugins = [];</span><br><span class="line">  <span class="keyword">let</span> HtmlWebpackExternalsPlugins = [];</span><br><span class="line">  <span class="keyword">let</span> url = path.join(__dirname, <span class="string">'/src/*/index-server.jsx'</span>).replaceAll(<span class="string">'\\'</span>, <span class="string">'/'</span>);</span><br><span class="line">  <span class="keyword">const</span> entryFiles = glob.sync(url);</span><br><span class="line">  <span class="built_in">Object</span>.keys(entryFiles).map(<span class="function"><span class="params">index</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> entryFile = entryFiles[index];</span><br><span class="line">    <span class="keyword">let</span> match = entryFile.match(<span class="regexp">/src\/(.*)\/index-server.jsx/</span>);</span><br><span class="line">    <span class="keyword">const</span> pageName = match &amp;&amp; match[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (pageName) &#123;</span><br><span class="line">      entry[pageName] = entryFile;</span><br><span class="line">      <span class="comment">// 每个入口文件设置 基础库的cdn</span></span><br><span class="line">      <span class="comment">// HtmlWebpackExternalsPlugins.push(new HtmlWebpackExternalsPlugin(&#123;</span></span><br><span class="line">      <span class="comment">//   externals: [</span></span><br><span class="line">      <span class="comment">//     &#123;</span></span><br><span class="line">      <span class="comment">//       module: 'react',</span></span><br><span class="line">      <span class="comment">//       entry: 'https://unpkg.com/react@18/umd/react.development.js',</span></span><br><span class="line">      <span class="comment">//       global: 'React'</span></span><br><span class="line">      <span class="comment">//     &#125;,</span></span><br><span class="line">      <span class="comment">//     &#123;</span></span><br><span class="line">      <span class="comment">//       module: 'react-dom',</span></span><br><span class="line">      <span class="comment">//       entry: 'https://unpkg.com/react-dom@18/umd/react-dom.development.js',</span></span><br><span class="line">      <span class="comment">//       global: 'ReactDOM'</span></span><br><span class="line">      <span class="comment">//     &#125;</span></span><br><span class="line">      <span class="comment">//   ],</span></span><br><span class="line">      <span class="comment">//   files: [`$&#123;pageName&#125;.html`]</span></span><br><span class="line">      <span class="comment">// &#125;));</span></span><br><span class="line">      <span class="comment">// 入口文件生成模板</span></span><br><span class="line">      htmlWebpackPlugins.push(</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">          template: path.join(__dirname, <span class="string">`/src/<span class="subst">$&#123;pageName&#125;</span>/index.html`</span>),</span><br><span class="line">          filename: <span class="string">`<span class="subst">$&#123;pageName&#125;</span>.html`</span>,</span><br><span class="line">          chunks: [pageName],</span><br><span class="line">          inject: <span class="literal">true</span>,</span><br><span class="line">          minify: &#123;</span><br><span class="line">            html5: <span class="literal">true</span>,</span><br><span class="line">            collapseWhitespace: <span class="literal">false</span>,</span><br><span class="line">            preserveLineBreaks: <span class="literal">false</span>,</span><br><span class="line">            minifyCSS: <span class="literal">false</span>,</span><br><span class="line">            minifyJS: <span class="literal">false</span>,</span><br><span class="line">            removeComments: <span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123; entry, htmlWebpackPlugins, HtmlWebpackExternalsPlugins &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; entry, htmlWebpackPlugins, HtmlWebpackExternalsPlugins &#125; = setMPA();</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'[name]-server.js'</span>,</span><br><span class="line">    path: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    libraryTarget: <span class="string">'umd'</span>,</span><br><span class="line">    globalObject: <span class="string">'this'</span>,</span><br><span class="line">    publicPath: <span class="string">''</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  mode: <span class="string">'none'</span>,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(js|jsx)$/</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        use: [<span class="string">'babel-loader'</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [MiniCssExtractPlugin.loader, <span class="string">'css-loader'</span>, <span class="string">'less-loader'</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [MiniCssExtractPlugin.loader, <span class="string">'css-loader'</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(png|jpg|jpeg|woff|ico|woff2|eot|ttf)$/</span>,</span><br><span class="line">        type: <span class="string">'asset'</span>,</span><br><span class="line">        parser: &#123;</span><br><span class="line">          dataUrlCondition: &#123;</span><br><span class="line">            maxSize: <span class="number">10</span> * <span class="number">2014</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  mode: <span class="string">'none'</span>,</span><br><span class="line">  <span class="comment">// optimization: &#123;</span></span><br><span class="line">  <span class="comment">//   splitChunks: &#123;</span></span><br><span class="line">  <span class="comment">//     minSize: 0,</span></span><br><span class="line">  <span class="comment">//     cacheGroups: &#123;</span></span><br><span class="line">  <span class="comment">//       commons: &#123;</span></span><br><span class="line">  <span class="comment">//         name: 'commons',</span></span><br><span class="line">  <span class="comment">//         chunks: 'all',</span></span><br><span class="line">  <span class="comment">//         minChunks: 2</span></span><br><span class="line">  <span class="comment">//       &#125;</span></span><br><span class="line">  <span class="comment">//     &#125;</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;,</span></span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> FriendlyErrorsWebpackPlugin(),</span><br><span class="line">    <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">      filename: <span class="string">'[name].css'</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> CleanWebpackPlugin(),</span><br><span class="line">    <span class="keyword">new</span> webpack.DefinePlugin(&#123;<span class="comment">/**webpack 内置插件 */</span></span><br><span class="line">      <span class="string">'process.env'</span>: &#123;</span><br><span class="line">        NODE_ENV: process.env.NODE_ENV <span class="comment">/**将属性转化为全局变量，可正常访问 */</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">/* 打包捕获 error */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hooks.done.tap(<span class="string">'done'</span>, stats =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (stats.compilation.errors &amp;&amp; stats.compilation.errors.length &amp;&amp; process.argv.indexOf(<span class="string">'--watch'</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'build error'</span>);</span><br><span class="line">          process.exit(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">    .concat(htmlWebpackPlugins)</span><br><span class="line">    .concat(HtmlWebpackExternalsPlugins),</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    <span class="comment">// extensions: ['.js', '.jsx', '.ts', '.tsx', '.css', '.less', 'svg'],</span></span><br><span class="line">    alias: &#123;</span><br><span class="line">      <span class="string">'@'</span>: path.join(__dirname, <span class="string">'/'</span>),</span><br><span class="line">      <span class="string">'@server'</span>: path.join(__dirname, <span class="string">'/server'</span>),</span><br><span class="line">      <span class="string">'@src'</span>: path.join(__dirname, <span class="string">'/src'</span>),</span><br><span class="line">      <span class="string">'@comp'</span>: path.join(__dirname, <span class="string">'/src/components'</span>),</span><br><span class="line">      <span class="string">'@images'</span>: path.join(__dirname, <span class="string">'/src/assets/images'</span>),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  stats: <span class="string">'errors-only'</span> <span class="comment">/* 设置编译信息提示内容 */</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="项目插件"><a href="#项目插件" class="headerlink" title="项目插件"></a>项目插件</h1><ul><li>clean-webpack-plugin 每次构建清除上次构建的文件</li><li>html-webpack-plugin 生成 html 模板承载 js </li><li>html-webpack-externals-plugin 基础库的 cdn 设置</li><li>friendly-errors-webpack-plugin 为每次编译提供友好提示</li><li>glob 读取文件</li></ul><h1 id="PS：SSR关闭webpack-optimization配置"><a href="#PS：SSR关闭webpack-optimization配置" class="headerlink" title="PS：SSR关闭webpack optimization配置"></a>PS：SSR关闭webpack optimization配置</h1><h1 id="webpack中-stats-选项设置显示的编译信息种类"><a href="#webpack中-stats-选项设置显示的编译信息种类" class="headerlink" title="webpack中 stats 选项设置显示的编译信息种类"></a>webpack中 stats 选项设置显示的编译信息种类</h1><h1 id="ssr-中样式无法显示问题"><a href="#ssr-中样式无法显示问题" class="headerlink" title="ssr 中样式无法显示问题"></a>ssr 中样式无法显示问题</h1><ul><li>法一：可设置 ignore-loader 直接忽略 css 的解析</li><li>法二：也可将 style-loader 替换成 <code>isomorphic-style-loader</code>（但是该方法需要改变编码习惯，使用另一种方式来设置样式，不建议使用）</li><li>法三：使用 mini-css-extract-plugin 设置样式外联，通过html模板文件中设置占位符，在 app.js 文件中替换占位符的方式完成样式的解析<ul><li>将整个文件导入，通过 renderToString 转换后，替换模板中字符来实现</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> app.get(<span class="string">'/search'</span>, (req, res) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> html = renderMarkup(renderToString(Search));</span><br><span class="line">    res.status(<span class="number">200</span>).send(html);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">-------------------------------------------------</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderMarkup = <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> dataStr = <span class="built_in">JSON</span>.stringify(data);</span><br><span class="line">  <span class="keyword">return</span> template.replace(<span class="string">'&lt;!--HTML_PLACEHOLDER--&gt;'</span>, str)</span><br><span class="line">    .replace(<span class="string">'&lt;!--INITIAL_DATA_PLACEHOLDER--&gt;'</span>, <span class="string">`&lt;script&gt;window.__initial_data=<span class="subst">$&#123;dataStr&#125;</span>&lt;/script&gt;`</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SSR-（Server-Side-Render）与-CSR（Client-Side-Render）&quot;&gt;&lt;a href=&quot;#SSR-（Server-Side-Render）与-CSR（Client-Side-Render）&quot; class=&quot;headerlink&quot; title=&quot;SSR （Server Side Render）与 CSR（Client Side Render）&quot;&gt;&lt;/a&gt;SSR （Server Side Render）与 CSR（Client Side Render）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;CSR 存在首屏白屏问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CSR 需要浏览器加载 js 代码，再执行 js 代码生成 html 元素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;加载再执行的耗时成本比较高，导致首屏加载会有短暂的白屏出现&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;seo 搜索引擎问题，客户端加载的是一些 js 文件，而大部分的搜索引擎 spider 只认识 html 文件内容，对 js 无感&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="SSR" scheme="https://yanadev.github.io/categories/SSR/"/>
    
      <category term="webpack" scheme="https://yanadev.github.io/categories/SSR/webpack/"/>
    
      <category term="服务端渲染" scheme="https://yanadev.github.io/categories/SSR/webpack/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93/"/>
    
    
      <category term="webpack" scheme="https://yanadev.github.io/tags/webpack/"/>
    
      <category term="SSR" scheme="https://yanadev.github.io/tags/SSR/"/>
    
      <category term="服务端渲染" scheme="https://yanadev.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yanadev.github.io/2022/07/07/React%20%E4%B8%AD%E4%BD%BF%E7%94%A8%20TS/"/>
    <id>https://yanadev.github.io/2022/07/07/React%20%E4%B8%AD%E4%BD%BF%E7%94%A8%20TS/</id>
    <published>2022-07-06T18:34:48.452Z</published>
    <updated>2022-07-07T13:50:30.391Z</updated>
    
    <content type="html"><![CDATA[<h1 id="组件的声明方式（两种）"><a href="#组件的声明方式（两种）" class="headerlink" title="组件的声明方式（两种）"></a>组件的声明方式（两种）</h1><ul><li>类组件</li><li>函数组件</li></ul><h1 id="类组件"><a href="#类组件" class="headerlink" title="类组件"></a>类组件</h1><h2 id="两种定义形式"><a href="#两种定义形式" class="headerlink" title="两种定义形式"></a>两种定义形式</h2><ul><li>React.Componrnt&lt;P, S = {}&gt;</li><li>React.PureComponent&lt;P, S={} SS={}&gt;</li></ul><blockquote><p>二者的区别在于 <code>pureComponent</code> 中的 <code>shouldComponentUpdate</code> 是由React自身处理的，不需要我们管理，所以 <code>pureComponent</code> 在一定程度上提升性能</p></blockquote><a id="more"></a><p><strong>二者均为泛型接口，接受两个参数：</strong></p><ul><li>参数一：props 类型的定义（可选）</li><li>参数二：state 类型的定义（可选）</li></ul><h2 id="React-Componet-lt-P-S-gt"><a href="#React-Componet-lt-P-S-gt" class="headerlink" title="React.Componet&lt;P, S = {}&gt;"></a>React.Componet&lt;P, S = {}&gt;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import React from &apos;react&apos;</span><br><span class="line"></span><br><span class="line">interface IProps &#123;</span><br><span class="line">  name: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">interface IState &#123;</span><br><span class="line">  count: number</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class News extends React.Component&lt;IProps, IState&gt; &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    count: 0</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;&gt;</span><br><span class="line">        &#123;this.state.count&#125;</span><br><span class="line">        &#123;this.props.name&#125;</span><br><span class="line">      &lt;/&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default News</span><br></pre></td></tr></table></figure><h2 id="React-PureComponent-lt-P-S-SS-gt"><a href="#React-PureComponent-lt-P-S-SS-gt" class="headerlink" title="React.PureComponent&lt;P, S={} SS = {}&gt;"></a>React.PureComponent&lt;P, S={} SS = {}&gt;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import React from &apos;react&apos;</span><br><span class="line"></span><br><span class="line">interface IProps &#123;</span><br><span class="line">  name: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">interface IState &#123;</span><br><span class="line">  count: number</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class News extends React.PureComponrnt&lt;IProps, IState&gt; &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    count: 0</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;&gt;</span><br><span class="line">        &#123;this.state.count&#125;</span><br><span class="line">        &#123;this.props.name&#125;</span><br><span class="line">      &lt;/&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default News</span><br></pre></td></tr></table></figure><h2 id="定义时未知组件类型，调用时才明确（使用泛型）"><a href="#定义时未知组件类型，调用时才明确（使用泛型）" class="headerlink" title="定义时未知组件类型，调用时才明确（使用泛型）"></a>定义时未知组件类型，调用时才明确（使用泛型）</h2><ul><li>定义组件<ul><li><strong>注意： 组件和被继承的 React.Component 均需要定义泛型 <code>&lt;P&gt;</code></strong></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import React from &quot;react&quot;;</span><br><span class="line">class CityList&lt;P&gt; extends React.Component&lt;P&gt; &#123;</span><br><span class="line">  internalProp: P;</span><br><span class="line">  constructor(props: P) &#123;</span><br><span class="line">    super(props)</span><br><span class="line">    this.internalProp = props</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    return &lt;&gt;</span><br><span class="line">      This is CityList page&lt;/&gt;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">export default CityList</span><br></pre></td></tr></table></figure><ul><li>使用组件（给组件传递泛型，后传入对应的数据类型）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import &apos;./App.css&apos;;</span><br><span class="line">import CityList from &apos;./pages/CityList&apos;;</span><br><span class="line"></span><br><span class="line">function App() &#123;</span><br><span class="line">  /* 定义类型 */</span><br><span class="line">  type IProps = &#123; name: string, age: number &#125;</span><br><span class="line">  return (</span><br><span class="line">    &lt;div className=&quot;App&quot;&gt;</span><br><span class="line">      &#123;/* 传递泛型 */&#125;</span><br><span class="line">      &lt;CityList&lt;IProps&gt; name=&quot;React&quot; age=&#123;18&#125; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default App;</span><br></pre></td></tr></table></figure><h1 id="函数组件"><a href="#函数组件" class="headerlink" title="函数组件"></a>函数组件</h1><h2 id="箭头函数写法"><a href="#箭头函数写法" class="headerlink" title="箭头函数写法"></a>箭头函数写法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import &#123; ReactElement &#125; from &quot;react&quot;</span><br><span class="line"></span><br><span class="line">interface IProps &#123;</span><br><span class="line">  name: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const UserList = (props: IProps): ReactElement =&gt; &#123;</span><br><span class="line">  const &#123; name &#125; = props</span><br><span class="line">  return &lt;&gt;</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line">    This is UserList page</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line">    &lt;h1&gt;&#123;name&#125;&lt;/h1&gt;</span><br><span class="line">  &lt;/&gt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default UserList</span><br></pre></td></tr></table></figure><h2 id="React-FC-箭头函数-props默认带有-children-属性"><a href="#React-FC-箭头函数-props默认带有-children-属性" class="headerlink" title="React.FC + 箭头函数(props默认带有 children 属性)"></a>React.FC + 箭头函数(props默认带有 children 属性)</h2><p>此外也可使用 <code>React.FunctionComponent &lt; P = {} &gt;</code> （<code>简写： React.FC&lt; P = {} &gt;</code>）来定义</p><ul><li><p><code>React.FC&lt;P={}&gt;</code> 是一个泛型接口，可以接收一个参数，参数表示 props</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type React.FC&lt;P = &#123;&#125;&gt; = REact.FunctionComponent&lt;P&gt;</span><br></pre></td></tr></table></figure></li><li><p>最终形式如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">interface IProps &#123;</span><br><span class="line">    name: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> App : React.FC&lt;IProps&gt; = <span class="function"><span class="params">props</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;name&#125; = props</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">    &lt;&gt;</span><br><span class="line">    &lt;h1&gt;hello world&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">        &lt;h2&gt;&#123;name&#125;&lt;/</span>h2&gt;</span><br><span class="line">        &lt;<span class="regexp">/&gt;</span></span><br><span class="line"><span class="regexp">    )</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default App</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="ERROR"><a href="#ERROR" class="headerlink" title="ERROR"></a>ERROR</h1><h2 id="组件若是-tsx-返回值不能是-ReactNode-而是-ReactElement"><a href="#组件若是-tsx-返回值不能是-ReactNode-而是-ReactElement" class="headerlink" title="组件若是 *.tsx,返回值不能是 ReactNode,而是 ReactElement"></a>组件若是 <code>*.tsx</code>,返回值不能是 ReactNode,而是 ReactElement</h2><blockquote><p>TS2786: ‘UserList’ cannot be used as a JSX component.<br>  Its return type ‘ReactNode’ is not a valid JSX element.<br>    Type ‘undefined’ is not assignable to type ‘Element | null’.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/* define */</span><br><span class="line">import &#123; ReactElement, ReactNode &#125; from &quot;react&quot;</span><br><span class="line"></span><br><span class="line">interface IProps &#123;</span><br><span class="line">  name: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- const UserList = (props: IProps): ReactNode =&gt; &#123;</span><br><span class="line">+ const UserList = (props: IProps): ReactElement =&gt; &#123;</span><br><span class="line">  const &#123; name &#125; = props</span><br><span class="line">  return &lt;&gt;</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line">    This is UserList page</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line">    &lt;h1&gt;&#123;name&#125;&lt;/h1&gt;</span><br><span class="line">  &lt;/&gt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default UserList</span><br></pre></td></tr></table></figure><h1 id="interface-与-type"><a href="#interface-与-type" class="headerlink" title="interface 与 type"></a>interface 与 type</h1><p>二者均可以<strong>定义类型</strong>，建议：</p><ul><li>定义公共 API （编辑库）时使用 interface，方便使用者扩展接口</li><li>定义组件属性（Props）和状态（state）时，使用 type，<strong>type的约束性更强</strong></li></ul><p><strong>区别：<u>type 类型不能二次编辑，而 interface 可以随时编辑</u></strong> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">interface Animal &#123;</span><br><span class="line">  name: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以继续在原属性基础上，添加新属性：color</span></span><br><span class="line">interface Animal &#123;</span><br><span class="line">  color: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">type Animal = &#123;</span><br><span class="line">  name: string</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// type类型不支持属性扩展</span></span><br><span class="line"><span class="comment">// Error: Duplicate identifier 'Animal'</span></span><br><span class="line">type Animal = &#123;</span><br><span class="line">  color: string</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="路由懒加载"><a href="#路由懒加载" class="headerlink" title="路由懒加载"></a>路由懒加载</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;组件的声明方式（两种）&quot;&gt;&lt;a href=&quot;#组件的声明方式（两种）&quot; class=&quot;headerlink&quot; title=&quot;组件的声明方式（两种）&quot;&gt;&lt;/a&gt;组件的声明方式（两种）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;类组件&lt;/li&gt;
&lt;li&gt;函数组件&lt;/li&gt;
&lt;/ul&gt;&lt;h1 id=&quot;类组件&quot;&gt;&lt;a href=&quot;#类组件&quot; class=&quot;headerlink&quot; title=&quot;类组件&quot;&gt;&lt;/a&gt;类组件&lt;/h1&gt;&lt;h2 id=&quot;两种定义形式&quot;&gt;&lt;a href=&quot;#两种定义形式&quot; class=&quot;headerlink&quot; title=&quot;两种定义形式&quot;&gt;&lt;/a&gt;两种定义形式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;React.Componrnt&amp;lt;P, S = {}&amp;gt;&lt;/li&gt;
&lt;li&gt;React.PureComponent&amp;lt;P, S={} SS={}&amp;gt;&lt;/li&gt;
&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;二者的区别在于 &lt;code&gt;pureComponent&lt;/code&gt; 中的 &lt;code&gt;shouldComponentUpdate&lt;/code&gt; 是由React自身处理的，不需要我们管理，所以 &lt;code&gt;pureComponent&lt;/code&gt; 在一定程度上提升性能&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yanadev.github.io/2022/07/07/Redux%20%E4%B9%8B%20hook/"/>
    <id>https://yanadev.github.io/2022/07/07/Redux%20%E4%B9%8B%20hook/</id>
    <published>2022-07-06T16:17:20.795Z</published>
    <updated>2022-07-06T18:10:38.477Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在-react-redux-中使用-hook"><a href="#在-react-redux-中使用-hook" class="headerlink" title="在 react redux 中使用 hook"></a>在 react redux 中使用 hook</h1><ul><li>首先需要将整个应用包裹在 <code>&lt;Provider&gt;</code> 组件中，确保 store 可以被整个组件树访问到</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> store = createStore(rootReducer)</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Provider store=&#123;store&#125;&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;<span class="regexp">/Provider&gt;,</span></span><br><span class="line"><span class="regexp">  document.getElementById('root')</span></span><br><span class="line"><span class="regexp">)</span></span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="useSelector-获取数据"><a href="#useSelector-获取数据" class="headerlink" title="useSelector 获取数据"></a>useSelector 获取数据</h1><ul><li>相当于 <code>connect</code> 中的参数 <code>mapStateToProps</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> result:any = useSelector(selector: <span class="built_in">Function</span>, equalityFn?: <span class="built_in">Function</span>)</span><br></pre></td></tr></table></figure><p>当函数组件渲染的时候，selector 会被执行，除非selector本身渲染前后无变化，此时 hook 会返回缓存的结果，而不是重新运行 selector</p><p><strong>selector 跟 useSelector() 和 mapState 还是有很多不同的</strong></p><ul><li>selector 可以将任何值作为结果返回，不只是 object<ul><li>selector 的返回值会被当做 useSelector() 的返回值</li></ul></li><li>当一个 action 执行后，useSelector() 会把之前 selector 的值与当前的值作比较</li><li>selector 函数不会接收 ownProps 参数。但是，props 可通过<strong>闭包/柯里化</strong>使用</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;在-react-redux-中使用-hook&quot;&gt;&lt;a href=&quot;#在-react-redux-中使用-hook&quot; class=&quot;headerlink&quot; title=&quot;在 react redux 中使用 hook&quot;&gt;&lt;/a&gt;在 react redux 中使用 hook&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;首先需要将整个应用包裹在 &lt;code&gt;&amp;lt;Provider&amp;gt;&lt;/code&gt; 组件中，确保 store 可以被整个组件树访问到&lt;/li&gt;
&lt;/ul&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; store = createStore(rootReducer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;Provider store=&amp;#123;store&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;App /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;&lt;span class=&quot;regexp&quot;&gt;/Provider&amp;gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;  document.getElementById(&#39;root&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yanadev.github.io/2022/07/05/React%20+%20TS%20%E5%AE%9E%E6%88%98/"/>
    <id>https://yanadev.github.io/2022/07/05/React%20+%20TS%20%E5%AE%9E%E6%88%98/</id>
    <published>2022-07-04T19:55:49.705Z</published>
    <updated>2022-07-06T18:34:45.259Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目构建"><a href="#项目构建" class="headerlink" title="项目构建"></a>项目构建</h1><ul><li>初始化 <code>ts-react-demo</code> 项目</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn create react-app ts-react-demo --template typescript</span><br></pre></td></tr></table></figure><ul><li>切换到项目目录</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ts-react-demo</span><br></pre></td></tr></table></figure><ul><li>启动项目</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn start</span><br></pre></td></tr></table></figure><h1 id="tsconfig-json-配置文件详解"><a href="#tsconfig-json-配置文件详解" class="headerlink" title="tsconfig.json 配置文件详解"></a><code>tsconfig.json</code> 配置文件详解</h1><h2 id="文件选项"><a href="#文件选项" class="headerlink" title="文件选项"></a>文件选项</h2><a id="more"></a><ul><li>files 表示需要编译的单个文件列表</li><li>include 表示需要编译的文件或者目录</li><li>exclude 表示编译器需要排除的文件或者文件夹</li><li>extends 表示引入其他配置文件，继承配置</li><li>compileOnSave 设置保存文件的时候自动编译（VScode 暂不支持，可使用 Atom）</li></ul><h2 id="编译选项"><a href="#编译选项" class="headerlink" title="编译选项"></a>编译选项</h2><ul><li>compilerOptions 配置编译选项</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">"compilerOptions": &#123;</span><br><span class="line">  "incremental": true, // TS编译器在第一次编译之后会生成一个存储编译信息的文件，第二次编译会在第一次的基础上进行增量编译，可以提高编译的速度</span><br><span class="line">  "tsBuildInfoFile": "./buildFile", // 增量编译文件的存储位置</span><br><span class="line">  "diagnostics": true, // 打印诊断信息 </span><br><span class="line">  "target": "ES5", // 目标语言的版本</span><br><span class="line">  "module": "CommonJS", // 生成代码的模板标准</span><br><span class="line">  "outFile": "./app.js", // 将多个相互依赖的文件生成一个文件，可以用在AMD模块中，即开启时应设置"module": "AMD",</span><br><span class="line">  "lib": ["DOM", "ES2015", "ScriptHost", "ES2019.Array"], // TS需要引用的库，即声明文件，es5 默认引用dom、es5、scripthost,如需要使用es的高级版本特性，通常都需要配置，如es8的数组新特性需要引入"ES2019.Array",</span><br><span class="line">  "allowJS": true, // 允许编译器编译JS，JSX文件</span><br><span class="line">  "checkJs": true, // 允许在JS文件中报错，通常与allowJS一起使用</span><br><span class="line">  "outDir": "./dist", // 指定输出目录</span><br><span class="line">  "rootDir": "./", // 指定输出文件目录(用于输出)，用于控制输出目录结构</span><br><span class="line">  "declaration": true, // 生成声明文件，开启后会自动生成声明文件</span><br><span class="line">  "declarationDir": "./file", // 指定生成声明文件存放目录</span><br><span class="line">  "emitDeclarationOnly": true, // 只生成声明文件，而不会生成js文件</span><br><span class="line">  "sourceMap": true, // 生成目标文件的sourceMap文件</span><br><span class="line">  "inlineSourceMap": true, // 生成目标文件的inline SourceMap，inline SourceMap会包含在生成的js文件中</span><br><span class="line">  "declarationMap": true, // 为声明文件生成sourceMap</span><br><span class="line">  "typeRoots": [], // 声明文件目录，默认时node_modules/@types</span><br><span class="line">  "types": [], // 加载的声明文件包</span><br><span class="line">  "removeComments":true, // 删除注释 </span><br><span class="line">  "noEmit": true, // 不输出文件,即编译后不会生成任何js文件</span><br><span class="line">  "noEmitOnError": true, // 发送错误时不输出任何文件</span><br><span class="line">  "noEmitHelpers": true, // 不生成helper函数，减小体积，需要额外安装，常配合importHelpers一起使用</span><br><span class="line">  "importHelpers": true, // 通过tslib引入helper函数，文件必须是模块</span><br><span class="line">  "downlevelIteration": true, // 降级遍历器实现，如果目标源是es3/5，那么遍历器会有降级的实现</span><br><span class="line">  "strict": true, // 开启所有严格的类型检查</span><br><span class="line">  "alwaysStrict": true, // 在代码中注入'use strict'</span><br><span class="line">  "noImplicitAny": true, // 不允许隐式的any类型</span><br><span class="line">  "strictNullChecks": true, // 不允许把null、undefined赋值给其他类型的变量</span><br><span class="line">  "strictFunctionTypes": true, // 不允许函数参数双向协变</span><br><span class="line">  "strictPropertyInitialization": true, // 类的实例属性必须初始化</span><br><span class="line">  "strictBindCallApply": true, // 严格的bind/call/apply检查</span><br><span class="line">  "noImplicitThis": true, // 不允许this有隐式的any类型</span><br><span class="line">  "noUnusedLocals": true, // 检查只声明、未使用的局部变量(只提示不报错)</span><br><span class="line">  "noUnusedParameters": true, // 检查未使用的函数参数(只提示不报错)</span><br><span class="line">  "noFallthroughCasesInSwitch": true, // 防止switch语句贯穿(即如果没有break语句后面不会执行)</span><br><span class="line">  "noImplicitReturns": true, //每个分支都会有返回值</span><br><span class="line">  "esModuleInterop": true, // 允许export=导出，由import from 导入</span><br><span class="line">  "allowUmdGlobalAccess": true, // 允许在模块中全局变量的方式访问umd模块</span><br><span class="line">  "moduleResolution": "node", // 模块解析策略，ts默认用node的解析策略，即相对的方式导入</span><br><span class="line">  "baseUrl": "./", // 解析非相对模块的基地址，默认是当前目录</span><br><span class="line">  "paths": &#123; // 路径映射，相对于baseUrl</span><br><span class="line">    // 如使用jq时不想使用默认版本，而需要手动指定版本，可进行如下配置</span><br><span class="line">    "jquery": ["node_modules/jquery/dist/jquery.min.js"]</span><br><span class="line">  &#125;,</span><br><span class="line">  "rootDirs": ["src","out"], // 将多个目录放在一个虚拟目录下，用于运行时，即编译后引入文件的位置可能发生变化，这也设置可以虚拟src和out在同一个目录下，不用再去改变路径也不会报错</span><br><span class="line">  "listEmittedFiles": true, // 打印输出文件</span><br><span class="line">  "listFiles": true// 打印编译的文件(包括引用的声明文件)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="工程引用"><a href="#工程引用" class="headerlink" title="工程引用"></a>工程引用</h2><ul><li>reference 指定工程引用依赖</li></ul><blockquote><p>项目开发中，有时候为了方便，将前端项目和后端 node 项目放在同一个目录下开发，<strong>两个项目依赖同一个配置文件和通用文件，希望前后端进行灵活的分别打包，可进行如下配置</strong></p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">Project</span><br><span class="line">  - src</span><br><span class="line">    - client //客户端项目</span><br><span class="line">      - index.ts // 客户端项目文件</span><br><span class="line">      - tsconfig.json // 客户端配置文件</span><br><span class="line">        &#123;</span><br><span class="line">          "extends": "../../tsconfig.json", // 继承基础配置</span><br><span class="line">          "compilerOptions": &#123;</span><br><span class="line">            "outDir": "../../dist/client", // 指定输出目录</span><br><span class="line">          &#125;,</span><br><span class="line">          "references": [ // 指定依赖的工程</span><br><span class="line">            &#123;<span class="attr">"path"</span>: <span class="string">"./common"</span>&#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">    - common // 前后端通用依赖工程</span><br><span class="line">      - index.ts  // 前后端通用文件</span><br><span class="line">      - tsconfig.json // 前后端通用代码配置文件</span><br><span class="line">        &#123;</span><br><span class="line">          "extends": "../../tsconfig.json", // 继承基础配置</span><br><span class="line">          "compilerOptions": &#123;</span><br><span class="line">            "outDir": "../../dist/client", // 指定输出目录</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    - server // 服务端项目</span><br><span class="line">      - index.ts // 服务端项目文件</span><br><span class="line">      - tsconfig.json // 服务端项目配置文件</span><br><span class="line">        &#123;</span><br><span class="line">          "extends": "../../tsconfig.json", // 继承基础配置</span><br><span class="line">          "compilerOptions": &#123;</span><br><span class="line">            "outDir": "../../dist/server", // 指定输出目录</span><br><span class="line">          &#125;,</span><br><span class="line">          "references": [ // 指定依赖的工程</span><br><span class="line">            &#123;<span class="attr">"path"</span>: <span class="string">"./common"</span>&#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">  - tsconfig.json // 前后端项目通用基础配置</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">        <span class="attr">"target"</span>: <span class="string">"es5"</span>,</span><br><span class="line">        <span class="attr">"module"</span>: <span class="string">"commonjs"</span>,</span><br><span class="line">        <span class="attr">"strict"</span>: <span class="literal">true</span>,</span><br><span class="line">        "composite": true, // 增量编译</span><br><span class="line">        "declaration": true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><p>如此配置之后，可单独构建前后端项目</p></li><li><p>构建前端项目</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc -v src/client</span><br></pre></td></tr></table></figure></li><li><p>构建后端项目</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc -b src/server</span><br></pre></td></tr></table></figure></li><li><p>输出目录</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Project</span><br><span class="line"> - dist </span><br><span class="line">  - client</span><br><span class="line">    - index.js</span><br><span class="line">    - index.d.ts</span><br><span class="line">  - common</span><br><span class="line">    - index.js</span><br><span class="line">    - index.d.ts</span><br><span class="line">  - server</span><br><span class="line">    - index.js</span><br><span class="line">    - index.d.ts</span><br></pre></td></tr></table></figure></li></ul><h1 id="添加配置-redux-状态管理"><a href="#添加配置-redux-状态管理" class="headerlink" title="添加配置 redux(状态管理)"></a>添加配置 redux(状态管理)</h1><blockquote><p>应用整体全局状态以 <code>对象树</code> 的方式存于 <code>单个store</code></p><ul><li>唯一改变状态树的方式是 <code>创建 action（描述发生了什么）、并 dispatch 给 store</code></li><li>需要指定状态树如何响应 action 来进行更新，可以编写 <code>纯reducer</code> 函数，这些函数根据旧 state 和 action 来计算新 state</li></ul></blockquote><h2 id="安装-redux"><a href="#安装-redux" class="headerlink" title="安装 redux"></a>安装 redux</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add @reduxjs/toolkit react-redux</span><br></pre></td></tr></table></figure><h2 id="配置-入口文件"><a href="#配置-入口文件" class="headerlink" title="配置 入口文件"></a>配置 入口文件</h2><ul><li><p><code>src</code> 目录下新建 redux 入口文件 <code>store/index.ts</code></p></li><li><p>配置 <code>index.ts</code> 文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createSlice, configureStore &#125; <span class="keyword">from</span> <span class="string">'@reduxjs/toolkit'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> counterSlice = createSlice(&#123;</span><br><span class="line">  name: <span class="string">'counter'</span>,</span><br><span class="line">  initialState: &#123;</span><br><span class="line">    value: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  reducers: &#123;</span><br><span class="line">    incremented: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</span><br><span class="line">      state.value += <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    decremented: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</span><br><span class="line">      state.value -= <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123; incremented, decremented &#125; = counterSlice.actions</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = configureStore(&#123;</span><br><span class="line">  reducer: counterSlice.reducer</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/** 订阅 */</span></span><br><span class="line">store.subscribe(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(store.getState());</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/**触发 */</span></span><br><span class="line">store.dispatch(incremented())</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br><span class="line"></span><br><span class="line"><span class="comment">// type RootState = ReturnType&lt;typeof store.getState&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// type AppDispatch = typeof store.dispatch</span></span><br></pre></td></tr></table></figure></li><li><p>项目入口文件中引入 <code>react-redux</code> 包中的 Provider ，将以上写好的 store 传递给 Provider 组件的 store 参数</p><ul><li>引入 store 文件只需要引入到 store 文件夹即可，会自动在该目录下寻找 <code>index.ts</code> 文件的</li><li>传入store，App 根组件及其所有子组件都可以共享这个store</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import React from &apos;react&apos;;</span><br><span class="line">import ReactDOM from &apos;react-dom/client&apos;;</span><br><span class="line">import &apos;./index.css&apos;;</span><br><span class="line">import App from &apos;./App&apos;;</span><br><span class="line">import reportWebVitals from &apos;./reportWebVitals&apos;;</span><br><span class="line">import &#123; Provider &#125; from &apos;react-redux&apos;</span><br><span class="line">import store from &apos;./store&apos;</span><br><span class="line"></span><br><span class="line">const root = ReactDOM.createRoot(</span><br><span class="line">  document.getElementById(&apos;root&apos;) as HTMLElement</span><br><span class="line">);</span><br><span class="line">root.render(</span><br><span class="line">  &lt;React.StrictMode&gt;</span><br><span class="line">    &lt;Provider store=&#123;store&#125;&gt;</span><br><span class="line">      &lt;App /&gt;</span><br><span class="line">    &lt;/Provider&gt;</span><br><span class="line">  &lt;/React.StrictMode&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">// If you want to start measuring performance in your app, pass a function</span><br><span class="line">// to log results (for example: reportWebVitals(console.log))</span><br><span class="line">// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals</span><br><span class="line">reportWebVitals();</span><br></pre></td></tr></table></figure></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li><code>react-redux</code> 库中的 useSelector()</li></ul><h2 id="关于-redux-与-redux-Toolkit"><a href="#关于-redux-与-redux-Toolkit" class="headerlink" title="关于 redux 与 redux Toolkit"></a>关于 redux 与 redux Toolkit</h2><p><strong>Redux Toolkit 简化了编写 redux 逻辑和设置 store 的过程</strong> </p><h3 id="redux-设置"><a href="#redux-设置" class="headerlink" title="redux 设置"></a>redux 设置</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">'redux'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">counterReducer</span>(<span class="params">state = &#123; value: 0 &#125;, action</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">switch</span> (action.type) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'counter/incremented'</span>: <span class="keyword">return</span> &#123; value: state.value + <span class="number">1</span> &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'counter/decremented'</span>: <span class="keyword">return</span> &#123; value: state.value - <span class="number">1</span> &#125;</span><br><span class="line">    <span class="keyword">default</span>: <span class="keyword">return</span> state</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> store = createStore(counterReducer)</span><br><span class="line"></span><br><span class="line">store.subscribe(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(store.getState());</span><br><span class="line">&#125;)</span><br><span class="line">store.dispatch(&#123; <span class="keyword">type</span>: <span class="string">'counter/incremented'</span> &#125;)</span><br><span class="line">store.dispatch(&#123; <span class="keyword">type</span>: <span class="string">'counter/incremented'</span> &#125;)</span><br><span class="line">store.dispatch(&#123; <span class="keyword">type</span>: <span class="string">'counter/decremented'</span> &#125;)</span><br></pre></td></tr></table></figure><h3 id="redux-toolkit-设置"><a href="#redux-toolkit-设置" class="headerlink" title="redux toolkit 设置"></a>redux toolkit 设置</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createSlice, configureStore &#125; <span class="keyword">from</span> <span class="string">'@reduxjs/toolkit'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> counterSlice = createSlice(&#123;</span><br><span class="line">  name: <span class="string">'counter'</span>,</span><br><span class="line">  initialState: &#123;</span><br><span class="line">    value: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  reducers: &#123;</span><br><span class="line">    incremented: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</span><br><span class="line">      state.value += <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    decremented: <span class="function"><span class="params">state</span> =&gt;</span> &#123;</span><br><span class="line">      state.value -= <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123; incremented, decremented &#125; = counterSlice.actions</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = configureStore(&#123;</span><br><span class="line">  reducer: counterSlice.reducer</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/** 订阅 */</span></span><br><span class="line">store.subscribe(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(store.getState());</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/**触发 */</span></span><br><span class="line">store.dispatch(incremented())</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;项目构建&quot;&gt;&lt;a href=&quot;#项目构建&quot; class=&quot;headerlink&quot; title=&quot;项目构建&quot;&gt;&lt;/a&gt;项目构建&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;初始化 &lt;code&gt;ts-react-demo&lt;/code&gt; 项目&lt;/li&gt;
&lt;/ul&gt;&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yarn create react-app ts-react-demo --template typescript&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;切换到项目目录&lt;/li&gt;
&lt;/ul&gt;&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd ts-react-demo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;启动项目&lt;/li&gt;
&lt;/ul&gt;&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yarn start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&quot;tsconfig-json-配置文件详解&quot;&gt;&lt;a href=&quot;#tsconfig-json-配置文件详解&quot; class=&quot;headerlink&quot; title=&quot;tsconfig.json 配置文件详解&quot;&gt;&lt;/a&gt;&lt;code&gt;tsconfig.json&lt;/code&gt; 配置文件详解&lt;/h1&gt;&lt;h2 id=&quot;文件选项&quot;&gt;&lt;a href=&quot;#文件选项&quot; class=&quot;headerlink&quot; title=&quot;文件选项&quot;&gt;&lt;/a&gt;文件选项&lt;/h2&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>将构建配置抽离成 npm 包的意义</title>
    <link href="https://yanadev.github.io/2022/06/28/webpack%20%E4%B9%8B%20%E6%9E%84%E5%BB%BA%E5%8C%85%E8%AE%BE%E8%AE%A1/"/>
    <id>https://yanadev.github.io/2022/06/28/webpack%20%E4%B9%8B%20%E6%9E%84%E5%BB%BA%E5%8C%85%E8%AE%BE%E8%AE%A1/</id>
    <published>2022-06-27T18:56:03.000Z</published>
    <updated>2022-08-15T11:23:16.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="将构建配置抽离成-npm-包的意义"><a href="#将构建配置抽离成-npm-包的意义" class="headerlink" title="将构建配置抽离成 npm 包的意义"></a>将构建配置抽离成 npm 包的意义</h1><ul><li>通用性<ul><li>业务开发这无需关注构建配置</li><li>统一团队构建脚本</li></ul></li><li>可维护性<ul><li>构建配置合理的拆分（开发、生产、ssr环境）</li><li>README文档 changelog 文档等</li></ul></li><li>质量<ul><li>冒烟测试、单元测试、测试覆盖等</li><li>持续集成</li></ul></li></ul><h1 id="可选方案"><a href="#可选方案" class="headerlink" title="可选方案"></a>可选方案</h1><ul><li>通过多个配置文件管理不同环境的配置<ul><li>通过webpack –config参数来控制</li></ul></li><li>将构建配置设计成一个库</li><li>抽成一个工具进行管理</li><li>将所有配置都放在一个文件，通过 –env 参数控制分支选择</li></ul><a id="more"></a><h1 id="构建配置包设计"><a href="#构建配置包设计" class="headerlink" title="构建配置包设计"></a>构建配置包设计</h1><h2 id="通过多个配置文件管理不同环境的-webpack-配置"><a href="#通过多个配置文件管理不同环境的-webpack-配置" class="headerlink" title="通过多个配置文件管理不同环境的 webpack 配置"></a>通过多个配置文件管理不同环境的 webpack 配置</h2><ul><li>基础环境 webpack.base.js </li><li>开发环境 webpack.dev.js</li><li>生产环境 webpack.prod.js</li><li>ssr 环境 webpack.ssr.js</li><li>…</li></ul><h2 id="抽离成一个-npm-包统一管理"><a href="#抽离成一个-npm-包统一管理" class="headerlink" title="抽离成一个 npm 包统一管理"></a>抽离成一个 npm 包统一管理</h2><ul><li>规范<ul><li>git commit 日志 </li><li>README</li><li>ESlint规范</li><li>Semver 规范</li></ul></li><li>质量<ul><li>冒烟测试</li><li>单元测试</li><li>测试覆盖率</li><li>CI</li></ul></li></ul><h2 id="操作方法：通过-webpack-merge-组合配置"><a href="#操作方法：通过-webpack-merge-组合配置" class="headerlink" title="操作方法：通过 webpack-merge 组合配置"></a>操作方法：通过 webpack-merge 组合配置</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>)</span><br><span class="line">...</span><br><span class="line">merge(</span><br><span class="line">&#123; a[<span class="number">1</span>], <span class="attr">b</span>: <span class="number">5</span>, <span class="attr">c</span>: <span class="number">20</span> &#125;,</span><br><span class="line">    &#123; a[<span class="number">2</span>], <span class="attr">b</span>: <span class="number">10</span>, <span class="attr">d</span>: <span class="number">421</span> &#125;</span><br><span class="line">)</span><br><span class="line">&#123; <span class="attr">a</span>: [<span class="number">1</span>, <span class="number">2</span>], <span class="attr">b</span>: <span class="number">10</span>, <span class="attr">c</span>: <span class="number">20</span>, <span class="attr">d</span>: <span class="number">421</span> &#125;</span><br></pre></td></tr></table></figure><p>合并配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = merge( baseConfig, devConfig )</span><br></pre></td></tr></table></figure><h1 id="功能模块设计与目录结构"><a href="#功能模块设计与目录结构" class="headerlink" title="功能模块设计与目录结构"></a>功能模块设计与目录结构</h1><p>![image-20220629004741996](webpack 之 构建包设计/image-20220629004741996.png)</p><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><ul><li>lib 放置源代码</li><li>test 放置测试代码</li></ul><p>![image-20220629005021061](webpack 之 构建包设计/image-20220629005021061.png)</p><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><ol><li>新建 <code>builder-webpack</code> 目录</li><li><code>cd builder-webpack</code> 进入目录</li><li><code>yarn init</code> 初始化项目</li><li>新建 <code>lib</code> 目录，其下新建四个文件<ul><li>webpack.base.js</li><li>webpack.dev.js</li><li>webpack.prod.js</li><li>webpack.ssr.js</li></ul></li></ol><h2 id="配置-webpack-base-js-文件"><a href="#配置-webpack-base-js-文件" class="headerlink" title="配置 webpack.base.js 文件"></a>配置 webpack.base.js 文件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> FriendlyErrorsWebpackPlugin = <span class="built_in">require</span>(<span class="string">'friendly-errors-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackExternalsPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-externals-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> setMPA = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> entry = &#123;&#125;;</span><br><span class="line">  <span class="keyword">let</span> htmlWebpackPlugins = [];</span><br><span class="line">  <span class="keyword">let</span> HtmlWebpackExternalsPlugins = [];</span><br><span class="line">  <span class="keyword">let</span> url = path.join(__dirname, <span class="string">'/src/*/index.jsx'</span>).replaceAll(<span class="string">'\\'</span>, <span class="string">'/'</span>);</span><br><span class="line">  <span class="keyword">const</span> entryFiles = glob.sync(url);</span><br><span class="line">  <span class="built_in">Object</span>.keys(entryFiles).map(<span class="function"><span class="params">index</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> entryFile = entryFiles[index];</span><br><span class="line">    <span class="keyword">let</span> match = entryFile.match(<span class="regexp">/src\/(.*)\/index.jsx/</span>);</span><br><span class="line">    <span class="keyword">const</span> pageName = match &amp;&amp; match[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (pageName) &#123;</span><br><span class="line">      entry[pageName] = entryFile;</span><br><span class="line">      <span class="comment">// 每个入口文件设置 基础库的cdn</span></span><br><span class="line">      HtmlWebpackExternalsPlugins.push(<span class="keyword">new</span> HtmlWebpackExternalsPlugin(&#123;</span><br><span class="line">        externals: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="built_in">module</span>: <span class="string">'react'</span>,</span><br><span class="line">            entry: <span class="string">'https://unpkg.com/react@18/umd/react.development.js'</span>,</span><br><span class="line">            global: <span class="string">'React'</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="built_in">module</span>: <span class="string">'react-dom'</span>,</span><br><span class="line">            entry: <span class="string">'https://unpkg.com/react-dom@18/umd/react-dom.development.js'</span>,</span><br><span class="line">            global: <span class="string">'ReactDOM'</span></span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        files: [<span class="string">`<span class="subst">$&#123;pageName&#125;</span>.html`</span>]</span><br><span class="line">      &#125;));</span><br><span class="line">      <span class="comment">// 入口文件生成模板</span></span><br><span class="line">      htmlWebpackPlugins.push(</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">          template: path.join(__dirname, <span class="string">`/src/<span class="subst">$&#123;pageName&#125;</span>/index.html`</span>),</span><br><span class="line">          filename: <span class="string">`<span class="subst">$&#123;pageName&#125;</span>.html`</span>,</span><br><span class="line">          chunks: [pageName],</span><br><span class="line">          inject: <span class="literal">true</span>,</span><br><span class="line">          minify: &#123;</span><br><span class="line">            html5: <span class="literal">true</span>,</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">            preserveLineBreaks: <span class="literal">false</span>,</span><br><span class="line">            minifyCSS: <span class="literal">true</span>,</span><br><span class="line">            minifyJS: <span class="literal">true</span>,</span><br><span class="line">            removeComments: <span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123; entry, htmlWebpackPlugins, HtmlWebpackExternalsPlugins &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; entry, htmlWebpackPlugins, HtmlWebpackExternalsPlugins &#125; = setMPA();</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: entry,</span><br><span class="line">  output:&#123;</span><br><span class="line">    filename: <span class="string">'[name].js'</span>,</span><br><span class="line">    path: path.join(__dirname, <span class="string">'dist'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(js|jsx)$/</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        use: [<span class="string">'babel-loader'</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          MiniCssExtractPlugin.loader,</span><br><span class="line">          <span class="string">'css-loader'</span>,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              postcssOptions: &#123;</span><br><span class="line">                plugins: [<span class="string">'autoprefixer'</span>]</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">'less-loader'</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          MiniCssExtractPlugin.loader,</span><br><span class="line">          <span class="string">'css-loader'</span>,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              postcssOptions: &#123;</span><br><span class="line">                plugins: [<span class="string">'autoprefixer'</span>]</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(png|svg|jpeg|jpg|gif|ico)$/i</span>,</span><br><span class="line">        type: <span class="string">'asset'</span>,</span><br><span class="line">        generator: &#123;</span><br><span class="line">          filename: <span class="string">"static/img/[name].[hash:7][ext]"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> CleanWebpackPlugin(),</span><br><span class="line">    <span class="comment">/* 命令行信息显示优化 */</span></span><br><span class="line">    <span class="keyword">new</span> FriendlyErrorsWebpackPlugin(),</span><br><span class="line">    <span class="comment">/* 打包捕获 error */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hooks.done.tap(<span class="string">'done'</span>, stats =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (stats.compilation.errors &amp;&amp; stats.compilation.errors.length &amp;&amp; process.argv.indexOf(<span class="string">'--watch'</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">'build error'</span>);</span><br><span class="line">          process.exit(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/* CSS 提取成一个单独的文件 */</span></span><br><span class="line">    <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">      filename: <span class="string">'[name]_[hash:8].css'</span></span><br><span class="line">    &#125;),</span><br><span class="line">  ]</span><br><span class="line">    .concat(htmlWebpackPlugins)</span><br><span class="line">    .concat(HtmlWebpackExternalsPlugins),</span><br><span class="line">  stats: <span class="string">'errors-only'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="安装-webpack-merge-配置-webpack-dev-js"><a href="#安装-webpack-merge-配置-webpack-dev-js" class="headerlink" title="安装 webpack-merge,配置 webpack.dev.js"></a>安装 webpack-merge,配置 webpack.dev.js</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add webpack-merge -D</span><br></pre></td></tr></table></figure><p>在 webpack.dev.js 中引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;merge&#125; = requrie(<span class="string">'webpack-merge'</span>)</span><br><span class="line"><span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">'./webpack.base'</span>)</span><br><span class="line"><span class="keyword">const</span> devConfig = &#123;&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = merge(baseConfig, devConfig)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;merge&#125; = requrie(<span class="string">'webpack-merge'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">'./webpack.base'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> devConfig = &#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> webpack.HotModuleReplacementPlugin(),</span><br><span class="line">  ],</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    port: <span class="number">3000</span>,</span><br><span class="line">    compress: <span class="literal">false</span>,</span><br><span class="line">    <span class="keyword">static</span>: &#123;</span><br><span class="line">      directory: path.join(process.cwd(), <span class="string">'dist'</span>),</span><br><span class="line">      publicPath: <span class="string">'/'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    client: &#123;</span><br><span class="line">      overlay: &#123;</span><br><span class="line">        errors: <span class="literal">true</span>,</span><br><span class="line">        warnings: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    stats: <span class="string">'errors-only'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  devtools: <span class="string">'cheap-source-map'</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">module</span>.exports = merge(baseConfig, devConfig);</span><br></pre></td></tr></table></figure><h2 id="配置-webpack-prod-js"><a href="#配置-webpack-prod-js" class="headerlink" title="配置 webpack.prod.js"></a>配置 webpack.prod.js</h2><p>同样是使用 <code>webpack-merge</code> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>);</span><br><span class="line"><span class="keyword">const</span> CssMinimizerWebpackPlugin = <span class="built_in">require</span>(<span class="string">'css-minimizer-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackExternalsPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-externals-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">'./webpack.base'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> prodConfig = &#123;</span><br><span class="line">  mode: <span class="string">'production'</span>,</span><br><span class="line">  <span class="comment">/* 设置提取的公共文件包的大小 */</span></span><br><span class="line">  optimization: &#123;</span><br><span class="line">   <span class="comment">/* 压缩 css */</span></span><br><span class="line">    minimize: <span class="literal">true</span>,</span><br><span class="line">    minimizer: [</span><br><span class="line">      <span class="keyword">new</span> CssMinimizerWebpackPlugin()</span><br><span class="line">    ],</span><br><span class="line">    splitChunks: &#123;</span><br><span class="line">      minSize: <span class="number">0</span>,</span><br><span class="line">      cacheGroups: &#123;</span><br><span class="line">        commons: &#123;</span><br><span class="line">          name: <span class="string">'commons'</span>,</span><br><span class="line">          chunks: <span class="string">'all'</span>,</span><br><span class="line">          minChunks: <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="comment">/* 速度优化: 引入基础包的 cdn */</span></span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackExternalsPlugin(&#123;</span><br><span class="line">      externals: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">module</span>: <span class="string">'react'</span>,</span><br><span class="line">          entry: <span class="string">'https://unpkg.com/react@18/umd/react.development.js'</span>,</span><br><span class="line">          global: <span class="string">'React'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">module</span>: <span class="string">'react-dom'</span>,</span><br><span class="line">          entry: <span class="string">'https://unpkg.com/react-dom@18/umd/react-dom.development.js'</span>,</span><br><span class="line">          global: <span class="string">'ReactDOM'</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = merge(baseConfig, prodConfig);</span><br></pre></td></tr></table></figure><blockquote><p><code>optimize-css-assets-webpack-plugin</code> 插件配合 <code>cssnano</code> css 处理器来<u><strong>压缩处理配置中 ExtractTextPlugin 实例导出的文件的文件名运行，而不是 源css文件的文件名，默认为 <code>/\.css$/g</code></strong></u></p></blockquote><ul><li>assetNameRegExp 一个正则表达式，指示应优化的最小化的资源的名称<ul><li>提供的正则表达式针对配置中 <code>ExtractTextPlugin</code> 实例导出的文件的文件名运行，而不是源css 文件的文件名，默认是 <code>/\.css$/g</code></li></ul></li><li>cssProcessor 用于优化最小化 css 的 <code>css 处理器</code>，默认是 <code>cssnano</code><ul><li>这应该是一个跟随 <code>cssnano.processor</code> 接口的函数（接收 css 和 选项参数并返回一个 Promise）</li></ul></li><li>cssProcessorOptions 传递给 cssProcessor 的选项，默认为 {}</li><li>cssProcessorPluginOptions 传递给 CSSProcessor 的插件选项，默认为 {}</li><li>canPrint 一个布尔值，指示插件是否可以将信息打印到控制台，默认为 true</li></ul><h2 id="配置-webpack-ssr-js"><a href="#配置-webpack-ssr-js" class="headerlink" title="配置 webpack.ssr.js"></a>配置 webpack.ssr.js</h2><p>拷贝一份 <code>webpack.prod.js</code>，需要设置忽略解析 css</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="built_in">module</span>:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test:<span class="regexp">/\.css$/</span>,</span><br><span class="line">                use:[</span><br><span class="line">                    <span class="string">'ignore-loader'</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:<span class="regexp">/\.less$/</span>,</span><br><span class="line">                use:[</span><br><span class="line">                    <span class="string">'ignore-loader'</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>);</span><br><span class="line"><span class="keyword">const</span> CssMinimizerWebpackPlugin = <span class="built_in">require</span>(<span class="string">'css-minimizer-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackExternalsPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-externals-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">'./webpack.base'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> prodConfig = &#123;</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [<span class="string">'ignore-loader'</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [<span class="string">'ignore-loader'</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  mode: <span class="string">'production'</span>,</span><br><span class="line">  <span class="comment">/* 设置提取的公共文件包的大小 */</span></span><br><span class="line">  optimization: &#123;</span><br><span class="line">   <span class="comment">/* 压缩 css */</span></span><br><span class="line">    minimize: <span class="literal">true</span>,</span><br><span class="line">    minimizer: [</span><br><span class="line">      <span class="keyword">new</span> CssMinimizerWebpackPlugin()</span><br><span class="line">    ],</span><br><span class="line">    splitChunks: &#123;</span><br><span class="line">      minSize: <span class="number">0</span>,</span><br><span class="line">      cacheGroups: &#123;</span><br><span class="line">        commons: &#123;</span><br><span class="line">          name: <span class="string">'commons'</span>,</span><br><span class="line">          chunks: <span class="string">'all'</span>,</span><br><span class="line">          minChunks: <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="comment">/* 速度优化: 引入基础包的 cdn */</span></span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackExternalsPlugin(&#123;</span><br><span class="line">      externals: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">module</span>: <span class="string">'react'</span>,</span><br><span class="line">          entry: <span class="string">'https://unpkg.com/react@18/umd/react.development.js'</span>,</span><br><span class="line">          global: <span class="string">'React'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">module</span>: <span class="string">'react-dom'</span>,</span><br><span class="line">          entry: <span class="string">'https://unpkg.com/react-dom@18/umd/react-dom.development.js'</span>,</span><br><span class="line">          global: <span class="string">'ReactDOM'</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = merge(baseConfig, prodConfig);</span><br></pre></td></tr></table></figure><h1 id="其他文件"><a href="#其他文件" class="headerlink" title="其他文件"></a>其他文件</h1><ul><li>根目录新建 README.md 文件</li><li>.gitignore 设置 git 忽略文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/node_modules</span><br><span class="line">/logs</span><br></pre></td></tr></table></figure><h1 id="通过-ESLint-规范构建脚本"><a href="#通过-ESLint-规范构建脚本" class="headerlink" title="通过 ESLint 规范构建脚本"></a>通过 ESLint 规范构建脚本</h1><p>使用 <code>eslint-config-airbnb-base</code></p><p> <code>eslint --fix</code>  可自动处理空格</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    "parser": "babal-eslint",</span><br><span class="line">    "extends": "airbnb-base",</span><br><span class="line">    "env": &#123;</span><br><span class="line">        "browser": true,</span><br><span class="line">        "node": true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>安装 <code>eslint</code> 、<code>@babel/eslint-parser</code>、<code>@babel/core</code>、<code>eslint-plugin-import</code>、<code>eslint-config-airbnb-base</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add eslint @babel/eslint-parser @babel/core eslint-plugin-import eslint-config-airbnb-base -D</span><br></pre></td></tr></table></figure><ul><li>配置 <code>eslint</code> 配置文件 <code>.eslintrc.js</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="string">"parser"</span>: <span class="string">"@babel/eslint-parser"</span>,</span><br><span class="line">  <span class="string">"parserOptions"</span>: &#123;</span><br><span class="line">    <span class="string">"requireConfigFile"</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"extends"</span>: <span class="string">"airbnb-base"</span>,</span><br><span class="line">  <span class="string">"env"</span>: &#123;</span><br><span class="line">    <span class="string">"browser"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"node"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><code>package.json</code> 设置 <code>scripts</code> 脚本</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"fix"</span>: <span class="string">"eslint ./lib --fix"</span>,</span><br><span class="line">        <span class="attr">"eslint"</span>: <span class="string">"eslint ./lib"</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用（根据 eslint 提示对代码进行调整）</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run eslint</span><br></pre></td></tr></table></figure><p><code>yarn run fix</code> 可自动更正一些格式问题</p><h1 id="冒烟测试（预测试）"><a href="#冒烟测试（预测试）" class="headerlink" title="冒烟测试（预测试）"></a>冒烟测试（预测试）</h1><p>指 <strong><u>对提交测试的软件在进行详细深入的测试之前进行的预测试</u></strong></p><p><strong>主要目的</strong>是 <strong><u>暴露导致软件需要重新发布的基本功能失效等严重问题</u></strong></p><h2 id="关注问题"><a href="#关注问题" class="headerlink" title="关注问题"></a>关注问题</h2><ul><li><p>构建是否成功</p></li><li><p>每次构件完成 build 目录是否有内容输出</p><ul><li>是否有 JS、CSS 等静态资源文件</li><li>是否有 HTML 文件</li></ul></li></ul><blockquote><p>每次都手动执行，比较繁琐，可通过一些工具（mocha）来完成这一步骤</p></blockquote><h2 id="检测构建（清空dist、判断是否构建成功）"><a href="#检测构建（清空dist、判断是否构建成功）" class="headerlink" title="检测构建（清空dist、判断是否构建成功）"></a>检测构建（清空dist、判断是否构建成功）</h2><blockquote><p> 在示例项目中原型构建，看是否有报错</p></blockquote><ul><li><p>根目录下创建 test 目录</p></li><li><p>test/smoke/index.js 再次书写冒烟测试相关的代码</p></li><li><p>需要判断否写构建是否正常运作，需要有一个模板项目</p></li><li><p>新建 test/smoke/template 目录下创建模板项目</p><ul><li>拷贝一个项目到 template 目录下，删除 该项目相关的webpack 配置（webpack.prod.js 等文件）</li></ul></li><li><p>需要 <code>rimraf</code> 这个库来处理删除 <code>dist</code> 目录这个操作</p><ul><li><p>每次构建之前否需要将 <code>dist</code> 目录清空</p></li><li><p>执行删除操作之后，会执行一个回调函数 </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add rimraf -D</span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>test/smoke/index.js</code> </p><ul><li>首先删除 dist 目录，清除上次构建内容</li><li>引入配置文件 webpack.prod.js 文件</li><li>webpack 方法接收一个配置文件，后执行回调函数，在回调函数中捕获错误信息，若构建有问题，打印错误信息</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">const</span> rimraf = requir(<span class="string">'rimraf'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 需要现将目录切换到 template  */</span></span><br><span class="line">process.chdir(path.join(__dirname, <span class="string">'template'</span>));</span><br><span class="line"></span><br><span class="line">rimraf(<span class="string">'./dist'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> prodConfig = <span class="built_in">require</span>(<span class="string">'../../lib/webpack.prod'</span>);</span><br><span class="line">  webpack(prodConfig, (err, stats) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">      process.exit(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(stats.toString(&#123;</span><br><span class="line">      colors: <span class="literal">true</span>,</span><br><span class="line">      modules: <span class="literal">false</span>,</span><br><span class="line">      children: <span class="literal">false</span></span><br><span class="line">    &#125;));</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>执行 node  index.js 文件</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node ./test/smoke/index.js</span><br></pre></td></tr></table></figure><ul><li>模板项目中路径均使用 __dirname（以template为根） 来配置路径，需要使用 <code>process.cwd()</code> 来获取整个项目的根路径<ul><li>webpack.base.js 中定义一个全局变量 projectRoot 来替换 __dirname</li></ul></li></ul><p><strong>webpack.prod.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; merge &#125; = <span class="built_in">require</span>(<span class="string">'webpack-merge'</span>);</span><br><span class="line"><span class="keyword">const</span> CssMinimizerWebpackPlugin = <span class="built_in">require</span>(<span class="string">'css-minimizer-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackExternalsPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-externals-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">'./webpack.base'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> prodConfig = &#123;</span><br><span class="line">  mode: <span class="string">'production'</span>,</span><br><span class="line">  <span class="comment">/* 设置提取的公共文件包的大小 */</span></span><br><span class="line">  optimization: &#123;</span><br><span class="line">    <span class="comment">/* 压缩 css */</span></span><br><span class="line">    minimize: <span class="literal">true</span>,</span><br><span class="line">    minimizer: [</span><br><span class="line">      <span class="keyword">new</span> CssMinimizerWebpackPlugin()</span><br><span class="line">    ],</span><br><span class="line">    splitChunks: &#123;</span><br><span class="line">      minSize: <span class="number">0</span>,</span><br><span class="line">      cacheGroups: &#123;</span><br><span class="line">        commons: &#123;</span><br><span class="line">          name: <span class="string">'commons'</span>,</span><br><span class="line">          chunks: <span class="string">'all'</span>,</span><br><span class="line">          minChunks: <span class="number">2</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 速度优化: 引入基础包的 cdn */</span></span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackExternalsPlugin(&#123;</span><br><span class="line">      externals: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">module</span>: <span class="string">'react'</span>,</span><br><span class="line">          entry: <span class="string">'https://unpkg.com/react@18/umd/react.development.js'</span>,</span><br><span class="line">          global: <span class="string">'React'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">module</span>: <span class="string">'react-dom'</span>,</span><br><span class="line">          entry: <span class="string">'https://unpkg.com/react-dom@18/umd/react-dom.development.js'</span>,</span><br><span class="line">          global: <span class="string">'ReactDOM'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = merge(baseConfig, prodConfig);</span><br></pre></td></tr></table></figure><p><strong>webpack.base.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> FriendlyErrorsWebpackPlugin = <span class="built_in">require</span>(<span class="string">'friendly-errors-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> glob = <span class="built_in">require</span>(<span class="string">'glob'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> projectRoot = process.cwd();</span><br><span class="line"><span class="comment">/* /builder-webpack/test/smoke/template/ */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> setMPA = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> entry = &#123;&#125;;</span><br><span class="line">  <span class="keyword">const</span> htmlWebpackPlugins = [];</span><br><span class="line">  <span class="keyword">const</span> url = path.join(projectRoot, <span class="string">'/src/*/index.jsx'</span>).replaceAll(<span class="string">'\\'</span>, <span class="string">'/'</span>);</span><br><span class="line">  <span class="keyword">const</span> entryFiles = glob.sync(url);</span><br><span class="line">  <span class="built_in">Object</span>.keys(entryFiles).map(<span class="function">(<span class="params">index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> entryFile = entryFiles[index];</span><br><span class="line">    <span class="keyword">const</span> match = entryFile.match(<span class="regexp">/src\/(.*)\/index.jsx/</span>);</span><br><span class="line">    <span class="keyword">const</span> pageName = match &amp;&amp; match[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (pageName) &#123;</span><br><span class="line">      entry[pageName] = entryFile;</span><br><span class="line">      <span class="comment">// 入口文件生成模板</span></span><br><span class="line">      htmlWebpackPlugins.push(</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">          template: path.join(projectRoot, <span class="string">`/src/<span class="subst">$&#123;pageName&#125;</span>/index.html`</span>),</span><br><span class="line">          filename: <span class="string">`<span class="subst">$&#123;pageName&#125;</span>.html`</span>,</span><br><span class="line">          chunks: [pageName],</span><br><span class="line">          inject: <span class="literal">true</span>,</span><br><span class="line">          minify: &#123;</span><br><span class="line">            html5: <span class="literal">true</span>,</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">            preserveLineBreaks: <span class="literal">false</span>,</span><br><span class="line">            minifyCSS: <span class="literal">true</span>,</span><br><span class="line">            minifyJS: <span class="literal">true</span>,</span><br><span class="line">            removeComments: <span class="literal">false</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> htmlWebpackPlugins;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123; entry, htmlWebpackPlugins &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; entry, htmlWebpackPlugins &#125; = setMPA();</span><br><span class="line"><span class="built_in">console</span>.log(entry);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: entry,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'[name].js'</span>,</span><br><span class="line">    path: path.join(projectRoot, <span class="string">'dist'</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(js|jsx)$/</span>,</span><br><span class="line">        exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        use: [<span class="string">'babel-loader'</span>],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          MiniCssExtractPlugin.loader,</span><br><span class="line">          <span class="string">'css-loader'</span>,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              postcssOptions: &#123;</span><br><span class="line">                plugins: [<span class="string">'autoprefixer'</span>],</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">'less-loader'</span>,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        use: [</span><br><span class="line">          MiniCssExtractPlugin.loader,</span><br><span class="line">          <span class="string">'css-loader'</span>,</span><br><span class="line">          &#123;</span><br><span class="line">            loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">            options: &#123;</span><br><span class="line">              postcssOptions: &#123;</span><br><span class="line">                plugins: [<span class="string">'autoprefixer'</span>],</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.(png|svg|jpeg|jpg|gif|ico)$/i</span>,</span><br><span class="line">        type: <span class="string">'asset'</span>,</span><br><span class="line">        generator: &#123;</span><br><span class="line">          filename: <span class="string">'static/img/[name].[hash:7][ext]'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> CleanWebpackPlugin(),</span><br><span class="line">    <span class="comment">/* 命令行信息显示优化 */</span></span><br><span class="line">    <span class="keyword">new</span> FriendlyErrorsWebpackPlugin(),</span><br><span class="line">    <span class="comment">/* 打包捕获 error */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">doneErrorPlugin</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.hooks.done.tap(<span class="string">'done'</span>, (stats) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (stats.compilation.errors &amp;&amp; stats.compilation.errors.length &amp;&amp; process.argv.indexOf(<span class="string">'--watch'</span>) === <span class="number">-1</span>) &#123;</span><br><span class="line">          process.exit(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/* CSS 提取成一个单独的文件 */</span></span><br><span class="line">    <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">      filename: <span class="string">'[name]_[hash:8].css'</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">  ]</span><br><span class="line">    .concat(htmlWebpackPlugins),</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    alias: &#123;</span><br><span class="line">      <span class="string">'@'</span>: path.join(projectRoot, <span class="string">'/'</span>),</span><br><span class="line">      <span class="string">'@server'</span>: path.join(projectRoot, <span class="string">'/server'</span>),</span><br><span class="line">      <span class="string">'@src'</span>: path.join(projectRoot, <span class="string">'/src'</span>),</span><br><span class="line">      <span class="string">'@comp'</span>: path.join(projectRoot, <span class="string">'/src/components'</span>),</span><br><span class="line">      <span class="string">'@images'</span>: path.join(projectRoot, <span class="string">'/src/assets/images'</span>),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  stats: <span class="string">'errors-only'</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="创建测试文件"><a href="#创建测试文件" class="headerlink" title="创建测试文件"></a>创建测试文件</h2><ul><li><p><code>/test/smoke/</code>目录下新建两个测试文件</p><ul><li>html-test.js 检测是否生成 HTML 文件</li><li>css-js-test.js 检测是否生成 css、js 文件</li></ul></li><li><p>安装 mocha</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add mocha -D</span><br></pre></td></tr></table></figure><ul><li>安装 glob-all</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add glob-all -D</span><br></pre></td></tr></table></figure><ul><li><code>html-test.js</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> glob = <span class="built_in">require</span>(<span class="string">'glob-all'</span>);</span><br><span class="line"></span><br><span class="line">describe(<span class="string">'Checking generated html files'</span>, () =&gt; &#123;</span><br><span class="line">  it(<span class="string">'should generate html files'</span>, done =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> files = glob.sync([</span><br><span class="line">      <span class="string">'./dist/index.html'</span>,</span><br><span class="line">      <span class="string">'./dist/search.html'</span>,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (files.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      done();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'no html files generate'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><code>css-js-test.js</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> glob = <span class="built_in">require</span>(<span class="string">'glob-all'</span>);</span><br><span class="line"></span><br><span class="line">describe(<span class="string">'Checking generated css js files'</span>, () =&gt; &#123;</span><br><span class="line">  it(<span class="string">'should generate css js files'</span>, done =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> files = glob.sync([</span><br><span class="line">      <span class="string">'./dist/index_*.js'</span>,</span><br><span class="line">      <span class="string">'./dist/index_*.css'</span>,</span><br><span class="line">      <span class="string">'./dist/search_*.js'</span>,</span><br><span class="line">      <span class="string">'./dist/News_*.js'</span>,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (files.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      done();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'no css js files generate'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>在 index.js 中<ul><li>新建 mocha 实例</li><li>使用 实例方法 <code>addFile()</code> 引入以上两个测试文件</li><li>使用 实例方法 <code>run()</code> 运行 mocha</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">const</span> rimraf = <span class="built_in">require</span>(<span class="string">'rimraf'</span>);</span><br><span class="line"><span class="keyword">const</span> Mocha = <span class="built_in">require</span>(<span class="string">'mocha'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置过期时间 */</span></span><br><span class="line"><span class="keyword">const</span> mocha = <span class="keyword">new</span> Mocha(&#123;</span><br><span class="line">  timeout: <span class="string">'10000ms'</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 需要现将目录切换到 template  */</span></span><br><span class="line">process.chdir(path.join(__dirname, <span class="string">'template'</span>));</span><br><span class="line"></span><br><span class="line">rimraf(<span class="string">'./dist'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> prodConfig = <span class="built_in">require</span>(<span class="string">'../../lib/webpack.prod'</span>);</span><br><span class="line">  webpack(prodConfig, (err, stats) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">      process.exit(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(stats.toString(&#123;</span><br><span class="line">      colors: <span class="literal">true</span>,</span><br><span class="line">      modules: <span class="literal">false</span>,</span><br><span class="line">      children: <span class="literal">false</span></span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">+    <span class="built_in">console</span>.log(<span class="string">'Webpack build success, begin run test'</span>);</span><br><span class="line"></span><br><span class="line">+    mocha.addFile(path.join(__dirname, <span class="string">'html-test.js'</span>));</span><br><span class="line">+    mocha.addFile(path.join(__dirname, <span class="string">'css-js-test.js'</span>));</span><br><span class="line"></span><br><span class="line">+    mocha.run();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>![image-20220630025133363](webpack 之 构建包设计/image-20220630025133363.png)</p><h1 id="单元测试与测试覆盖率"><a href="#单元测试与测试覆盖率" class="headerlink" title="单元测试与测试覆盖率"></a>单元测试与测试覆盖率</h1><p>冒烟测试保证了 <strong>构建包的基本功能可用</strong></p><p><strong>细节部分的把控</strong>需要单元测试来完成</p><h2 id="可选方案-1"><a href="#可选方案-1" class="headerlink" title="可选方案"></a>可选方案</h2><ul><li><p>单纯测试框架，需要断言库（chai / should.js / expect / better-assert）</p><ul><li>mocha 框架</li><li>ava 框架</li></ul></li><li><p>集成框架，开箱即用</p><ul><li>Jasmine 框架</li><li>Jest 框架</li></ul></li><li><p>极简 API</p></li></ul><h2 id="编写单元测试用例"><a href="#编写单元测试用例" class="headerlink" title="编写单元测试用例"></a>编写单元测试用例</h2><ul><li>技术选型:  Mocha + Chai</li><li>测试代码:  describe, it, expect</li><li>测试命令:  mocha add.test.js</li></ul><hr><ol><li><p>test 目录下新建 unit 目录用来编写测试用例</p><ul><li>创建对应的测试文件 webpack-base-test.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">describe(<span class="string">'webpack.base.js test case'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">'../../lib/webpack.base'</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(baseConfig);</span><br><span class="line">  it(<span class="string">'entry'</span>, () =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>test 目录下新建 index.js 作为单元测试的入口文件（<strong>主要用来引入对应的单元测试用例</strong>）</p><ul><li>每次执行测试用例之前需要进入到模板项目 <code>template</code> 中去</li><li>因此使用 <code>process.chdir()</code> 切换路径到 template 目录</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line">process.chdir(path.join(__dirname, <span class="string">'smoke/template'</span>));</span><br><span class="line"></span><br><span class="line">describe(<span class="string">'builder-webpack test case'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="built_in">require</span>(<span class="string">'./unit/webpack-base-test'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p><code>package.json</code> 新建 <code>scripts</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"./node_modules/.bin/_mocha"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行 <code>yarn run test</code> 时就会自动访问 <code>test</code> 目录下 <code>index.js</code> 入口文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run test</span><br></pre></td></tr></table></figure><p>![image-20220702040017966](webpack 之 构建包设计/image-20220702040017966.png)<br>![image-20220702040033551](webpack 之 构建包设计/image-20220702040033551.png)<br>![image-20220702040047582](webpack 之 构建包设计/image-20220702040047582.png)</p></li><li><p>为判断 <code>每次构建是否影响 entry</code> 使用断言库 <code>assert</code></p></li><li><p>安装 assert</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add assert -D</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> assert = <span class="built_in">require</span>(<span class="string">'assert'</span>);</span><br><span class="line"></span><br><span class="line">describe(<span class="string">'webpack.base.js test case'</span>, () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> baseConfig = <span class="built_in">require</span>(<span class="string">'../../lib/webpack.base'</span>);</span><br><span class="line">  <span class="comment">// console.log(baseConfig);</span></span><br><span class="line">  it(<span class="string">'entry'</span>, () =&gt; &#123;</span><br><span class="line">    assert.equal(baseConfig.entry.index, <span class="string">'D:/Z-workSpace/React/ssr-react/builder-webpack/test/smoke/template/src/index/index.jsx'</span>);</span><br><span class="line">    assert.equal(baseConfig.entry.search, <span class="string">'D:/Z-workSpace/React/ssr-react/builder-webpack/test/smoke/template/src/search/index.jsx'</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>![image-20220702040746579](webpack 之 构建包设计/image-20220702040746579.png)</p><p>此时测试用例已经跑通了</p></li></ol><p>​        </p><h2 id="测试覆盖率"><a href="#测试覆盖率" class="headerlink" title="测试覆盖率"></a>测试覆盖率</h2><p>推荐使用 <code>nyc</code></p><ul><li>安装</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add nyc -D</span><br></pre></td></tr></table></figure><ul><li>修改 scripts 脚本</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"scripts"</span>: &#123;</span><br><span class="line">        <span class="string">"test"</span>: <span class="string">"mocha"</span>,</span><br><span class="line">        <span class="string">"coverage"</span>: <span class="string">"npx nyc mocha"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>![image-20220702043048723](webpack 之 构建包设计/image-20220702043048723.png)</p><h1 id="单元测试与冒烟测试"><a href="#单元测试与冒烟测试" class="headerlink" title="单元测试与冒烟测试"></a>单元测试与冒烟测试</h1><blockquote><p>单元测试和测试覆盖率一般是在构建前还是构建后完成？</p></blockquote><ul><li>针对<code>基础组件</code>或者<code>构建包</code>，通过<code>单元测试和测试覆盖率</code> 保证组件质量，这需要在<code>发版之前严格遵守</code></li><li>对业务而言，每次 <code>commit</code> 就会进行业务代码的构建。同时异步触发单元测试和测试覆盖率检查，无先后顺序</li></ul><h1 id="持续集成"><a href="#持续集成" class="headerlink" title="持续集成"></a>持续集成</h1><p>![image-20220702043533415](webpack 之 构建包设计/image-20220702043533415.png)</p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>快速发现错误</li><li>防止分支大幅偏离主干</li></ul><h2 id="核心措施"><a href="#核心措施" class="headerlink" title="核心措施"></a>核心措施</h2><p>代码集成到主干之前，必须通过自动化测试。<strong>只要有一个测试用例失败，就不能集成</strong></p><h2 id="接入-github-action"><a href="#接入-github-action" class="headerlink" title="接入 github action"></a>接入 <code>github action</code></h2><ul><li>首先创建一个 github 项目，命名为 <code>builder-webpack</code><br>  ![image-20220702175323087](webpack 之 构建包设计/image-20220702175323087.png)</li></ul><ul><li><p>项目根目录下创建 <code>.github/workflow/test.yml</code> 编写 yml 脚本设置自动化测试即可</p></li><li><p>git 链接远程仓库</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆远程仓库到一个干净的目录</span></span><br><span class="line">git clone &lt;远程仓库地址&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入项目</span></span><br><span class="line">cd builder-webpack[项目名称]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前目录绝对路径</span></span><br><span class="line">pwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将源码复制到该目录下（-r 表示递归，对多个文件操作）</span></span><br><span class="line">cp -r [被复制目录 ./***/ ] [当前目录 ./]</span><br><span class="line"></span><br><span class="line">cd ../../</span><br><span class="line">cp -r ../ssr-react/builder-webpack/ ./</span><br></pre></td></tr></table></figure></li><li><p>编写 <code>github action</code> 自动化测试脚本 <code>test.yml</code></p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is a basic workflow to help you get started with Actions</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">CI</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Controls when the workflow will run</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="comment"># Triggers the workflow on push or pull request events but only for the "main" branch</span></span><br><span class="line"><span class="attr">  push:</span></span><br><span class="line"><span class="attr">    branches:</span> <span class="string">[</span> <span class="string">"main"</span> <span class="string">]</span></span><br><span class="line"><span class="attr">  pull_request:</span></span><br><span class="line"><span class="attr">    branches:</span> <span class="string">[</span> <span class="string">"main"</span> <span class="string">]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Allows you to run this workflow manually from the Actions tab</span></span><br><span class="line"><span class="attr">  workflow_dispatch:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A workflow run is made up of one or more jobs that can run sequentially or in parallel</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="comment"># This workflow contains a single job called "build"</span></span><br><span class="line"><span class="attr">  build:</span></span><br><span class="line">    <span class="comment"># The type of runner that the job will run on</span></span><br><span class="line"><span class="attr">    runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Steps represent a sequence of tasks that will be executed as part of the job</span></span><br><span class="line"><span class="attr">    steps:</span></span><br><span class="line">      <span class="comment"># Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it</span></span><br><span class="line"><span class="attr">      - uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">            </span><br><span class="line"><span class="attr">      - name:</span> <span class="string">setup</span> <span class="string">node.js</span> <span class="string">environment</span></span><br><span class="line"><span class="attr">        uses:</span> <span class="string">actions/setup-node@v3.3.0</span></span><br><span class="line"><span class="attr">        with:</span></span><br><span class="line"><span class="attr">          node-version:</span> <span class="string">"18.X"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">install</span> <span class="string">dep</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">yarn</span> <span class="string">install</span> <span class="bullet">-D</span></span><br><span class="line">        </span><br><span class="line"><span class="attr">      - name:</span> <span class="string">switch</span> <span class="string">to</span> <span class="string">template</span> <span class="string">project</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">cd</span> <span class="string">./test/smoke/template</span></span><br><span class="line">        </span><br><span class="line"><span class="attr">      - name:</span> <span class="string">install</span> <span class="string">template</span> <span class="string">project</span> <span class="string">dep</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">yarn</span> <span class="string">install</span> <span class="bullet">-D</span></span><br><span class="line">        </span><br><span class="line"><span class="attr">      - name:</span> <span class="string">run</span> <span class="string">test</span> <span class="string">scripts</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">yarn</span> <span class="string">run</span> <span class="string">test</span></span><br></pre></td></tr></table></figure></li><li><p>提交代码到远程仓库</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">'feat: builder github action ci'</span></span><br><span class="line">git push origin [branch_name]</span><br></pre></td></tr></table></figure></li><li><p>由于之前是在本地测试，entry 入口是本地目录，推送到 github 之后需要修改 <code>webpack-base-test.js</code> 单元测试脚本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">assert.equal(baseConfig.entry.index, <span class="string">'/home/runner/work/builder-webpack/builder-webpack/test/smoke/template/src/index/index.jsx'</span>);</span><br><span class="line">    assert.equal(baseConfig.entry.search, <span class="string">'/home/runner/work/builder-webpack/builder-webpack/test/smoke/template/src/search/index.jsx'</span>);</span><br></pre></td></tr></table></figure><p>具体构建信息可在 github 项目 action 中查看</p><p>![image-20220703185011059](webpack 之 构建包设计/image-20220703185011059.png)</p><p>![image-20220703184921762](webpack 之 构建包设计/image-20220703184921762.png)<br>![image-20220703185044212](webpack 之 构建包设计/image-20220703185044212.png)</p></li><li><p><code>test.yml</code> 设置依赖缓存，减少每次构建安装依赖的时间</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">CI</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  push:</span></span><br><span class="line"><span class="attr">    branches:</span> <span class="string">[</span> <span class="string">"main"</span> <span class="string">]</span></span><br><span class="line"><span class="attr">  pull_request:</span></span><br><span class="line"><span class="attr">    branches:</span> <span class="string">[</span> <span class="string">"main"</span> <span class="string">]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">  workflow_dispatch:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">  test:</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">    runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"><span class="attr">    steps:</span></span><br><span class="line">      <span class="comment"># Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it</span></span><br><span class="line"><span class="attr">      - uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">          </span><br><span class="line">          </span><br><span class="line"><span class="attr">      - name:</span> <span class="string">setup</span> <span class="string">node.js</span> <span class="string">environment</span></span><br><span class="line"><span class="attr">        uses:</span> <span class="string">actions/setup-node@v3.3.0</span></span><br><span class="line"><span class="attr">        with:</span></span><br><span class="line"><span class="attr">          node-version:</span> <span class="string">"18.X"</span></span><br><span class="line">          </span><br><span class="line"><span class="attr">      - name:</span> <span class="string">Cache</span> <span class="string">node_modules</span></span><br><span class="line"><span class="attr">        id:</span> <span class="string">cache-node-modules</span></span><br><span class="line"><span class="attr">        uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line"><span class="attr">        with:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">node_modules</span></span><br><span class="line"><span class="attr">          key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-$&#123;&#123;</span> <span class="string">matrix.node-version</span> <span class="string">&#125;&#125;-nodeModules-$&#123;&#123;</span> <span class="string">hashFiles('package.json')</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">          restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $<span class="template-variable">&#123;&#123; runner.os &#125;&#125;</span>-$<span class="template-variable">&#123;&#123; matrix.node-version &#125;&#125;</span>-nodeModules-</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span><span class="attr">      - name:</span> <span class="string">install</span> <span class="string">dep</span></span><br><span class="line"><span class="attr">        if:</span> <span class="string">steps.cache-node-modules.outputs.cache-hit</span> <span class="string">!=</span> <span class="string">'true'</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">yarn</span> <span class="string">install</span> <span class="bullet">-D</span></span><br><span class="line">        </span><br><span class="line"><span class="attr">      - name:</span> <span class="string">switch</span> <span class="string">to</span> <span class="string">template</span> <span class="string">project</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">cd</span> <span class="string">./test/smoke/template</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="attr">      - name:</span> <span class="string">Cache</span> <span class="string">node_modules</span></span><br><span class="line"><span class="attr">        id:</span> <span class="string">cache-node-modules-template</span></span><br><span class="line"><span class="attr">        uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line"><span class="attr">        with:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">node_modules</span></span><br><span class="line"><span class="attr">          key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-$&#123;&#123;</span> <span class="string">matrix.node-version</span> <span class="string">&#125;&#125;-nodeModules-$&#123;&#123;</span> <span class="string">hashFiles('package.json')</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">          restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $<span class="template-variable">&#123;&#123; runner.os &#125;&#125;</span>-$<span class="template-variable">&#123;&#123; matrix.node-version &#125;&#125;</span>-nodeModules-</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string"></span><span class="attr">      - name:</span> <span class="string">install</span> <span class="string">template</span> <span class="string">project</span> <span class="string">dep</span></span><br><span class="line"><span class="attr">        if:</span> <span class="string">steps.cache-node-modules-template.outputs.cache-hit</span> <span class="string">!=</span> <span class="string">'true'</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">yarn</span> <span class="string">install</span> <span class="bullet">-D</span></span><br><span class="line">        </span><br><span class="line"><span class="attr">      - name:</span> <span class="string">run</span> <span class="string">test</span> <span class="string">scripts</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">yarn</span> <span class="string">run</span> <span class="string">test</span></span><br></pre></td></tr></table></figure><p>![image-20220703191837410](webpack 之 构建包设计/image-20220703191837410.png)</p></li></ul><h1 id="发布构建包到-npm-社区"><a href="#发布构建包到-npm-社区" class="headerlink" title="发布构建包到 npm 社区"></a>发布构建包到 npm 社区</h1><ul><li>修改 <code>package.json</code> 中 name 字节（确保 <code>npm 社区</code> 中该包名没有被使用过）</li><li>升级版本<ul><li>补丁版本号 <code>npm version patch</code></li><li>小版本号 <code>npm version minor</code></li><li>大版本号 <code>npm version major</code></li></ul></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录 npm</span></span><br><span class="line">npm login</span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级版本</span></span><br><span class="line">npm version minor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发布构建包</span></span><br><span class="line">npm publish</span><br></pre></td></tr></table></figure><p>​    </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;将构建配置抽离成-npm-包的意义&quot;&gt;&lt;a href=&quot;#将构建配置抽离成-npm-包的意义&quot; class=&quot;headerlink&quot; title=&quot;将构建配置抽离成 npm 包的意义&quot;&gt;&lt;/a&gt;将构建配置抽离成 npm 包的意义&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;通用性&lt;ul&gt;
&lt;li&gt;业务开发这无需关注构建配置&lt;/li&gt;
&lt;li&gt;统一团队构建脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可维护性&lt;ul&gt;
&lt;li&gt;构建配置合理的拆分（开发、生产、ssr环境）&lt;/li&gt;
&lt;li&gt;README文档 changelog 文档等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;质量&lt;ul&gt;
&lt;li&gt;冒烟测试、单元测试、测试覆盖等&lt;/li&gt;
&lt;li&gt;持续集成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;h1 id=&quot;可选方案&quot;&gt;&lt;a href=&quot;#可选方案&quot; class=&quot;headerlink&quot; title=&quot;可选方案&quot;&gt;&lt;/a&gt;可选方案&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;通过多个配置文件管理不同环境的配置&lt;ul&gt;
&lt;li&gt;通过webpack –config参数来控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;将构建配置设计成一个库&lt;/li&gt;
&lt;li&gt;抽成一个工具进行管理&lt;/li&gt;
&lt;li&gt;将所有配置都放在一个文件，通过 –env 参数控制分支选择&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="npm" scheme="https://yanadev.github.io/categories/npm/"/>
    
      <category term="构建包" scheme="https://yanadev.github.io/categories/npm/%E6%9E%84%E5%BB%BA%E5%8C%85/"/>
    
      <category term="webpack" scheme="https://yanadev.github.io/categories/npm/%E6%9E%84%E5%BB%BA%E5%8C%85/webpack/"/>
    
    
      <category term="webpack" scheme="https://yanadev.github.io/tags/webpack/"/>
    
      <category term="npm" scheme="https://yanadev.github.io/tags/npm/"/>
    
      <category term="构建包" scheme="https://yanadev.github.io/tags/%E6%9E%84%E5%BB%BA%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>webpack 之打包组件或者基础库</title>
    <link href="https://yanadev.github.io/2022/06/08/webpack%20%E4%B9%8B%20%E6%89%93%E5%8C%85%E7%BB%84%E4%BB%B6%E6%88%96%E8%80%85%E5%9F%BA%E7%A1%80%E5%BA%93/"/>
    <id>https://yanadev.github.io/2022/06/08/webpack%20%E4%B9%8B%20%E6%89%93%E5%8C%85%E7%BB%84%E4%BB%B6%E6%88%96%E8%80%85%E5%9F%BA%E7%A1%80%E5%BA%93/</id>
    <published>2022-06-07T18:56:03.000Z</published>
    <updated>2022-08-15T11:25:15.230Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实现大整数加法库的打包"><a href="#实现大整数加法库的打包" class="headerlink" title="实现大整数加法库的打包"></a>实现大整数加法库的打包</h1><ul><li>需要打包压缩版和非压缩版</li><li>支持 AMD / CJS / ESM 模块引入</li></ul><h1 id="打包要求"><a href="#打包要求" class="headerlink" title="打包要求"></a>打包要求</h1><p>打包输出的库名称</p><ul><li>未压缩版 large-number.js</li><li>压缩版 large-number.min.js </li></ul><p>![image-20220606023625006](webpack 之 打包组件或者基础库/image-20220606023625006.png)</p><a id="more"></a><h1 id="支持的方式"><a href="#支持的方式" class="headerlink" title="支持的方式"></a>支持的方式</h1><p>![image-20220606023705307](webpack 之 打包组件或者基础库/image-20220606023705307.png)</p><p>![image-20220606023734892](webpack 之 打包组件或者基础库/image-20220606023734892.png)</p><h1 id="如何将库暴露出去"><a href="#如何将库暴露出去" class="headerlink" title="如何将库暴露出去"></a>如何将库暴露出去</h1><ul><li>library 指定库的全局变量</li><li>libraryTarget 支持库引入的方式</li></ul><h1 id="指定对-min-压缩"><a href="#指定对-min-压缩" class="headerlink" title="指定对 .min 压缩"></a>指定对 .min 压缩</h1><p>通过 include 设置只压缩 min.js 结尾的文件</p><h1 id="设置入口文件"><a href="#设置入口文件" class="headerlink" title="设置入口文件"></a>设置入口文件</h1><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir large-number</span><br><span class="line">cd large-number</span><br><span class="line">yarn init</span><br><span class="line">yarn add webpack webpack-cli -D</span><br></pre></td></tr></table></figure><h2 id="打开项目"><a href="#打开项目" class="headerlink" title="打开项目"></a>打开项目</h2><ul><li><p>创建 webpack.config.js</p></li><li><p>创建目录 src/index.js</p></li><li><p>实现功能</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// export default</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 1. 分别获取 a 和 b 下标范围（a、b均为字符，返回的也是字符  ）</span></span><br><span class="line"><span class="comment">   * 2. 按位加法计算（小学数学）</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> i = a.length - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">let</span> j = b.length - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">let</span> carry = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> ret = <span class="string">''</span>;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 3. 当 a、b 的位数不为 0</span></span><br><span class="line"><span class="comment">   * 4. carry 表示 进位数</span></span><br><span class="line"><span class="comment">   * 5. ret 表示结果</span></span><br><span class="line"><span class="comment">   * 6. x、y 各表示 a、b 个位数上的值；sum 表示两次求和的值 </span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">while</span> (i &gt;= <span class="number">0</span> || j &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> sum;</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">      x = a[i] - <span class="string">'0'</span>; <span class="comment">// 转化为数字</span></span><br><span class="line">      i--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">      y = b[j] - <span class="string">'0'</span>; <span class="comment">// 转化为数字</span></span><br><span class="line">      j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/** 7. 首次进位为 0 */</span></span><br><span class="line">    sum = x + y + carry;</span><br><span class="line">    <span class="comment">/** 8. 判断两个数相加结果是否超过 10，来判断是否进一位 */</span></span><br><span class="line">    <span class="keyword">if</span> (sum &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">      carry = <span class="number">1</span>;</span><br><span class="line">      sum -= <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      carry = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ret = sum + ret;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/** 9. 循环结束之后，若还有进位，需要将进位加到 ret 上 */</span></span><br><span class="line">  <span class="keyword">if</span> (carry) &#123;</span><br><span class="line">    ret = carry + ret;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="string">'999'</span>, <span class="string">'1'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="string">'1'</span>, <span class="string">'999'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="string">'123'</span>, <span class="string">'321'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="string">'321'</span>, <span class="string">'123'</span>));</span><br></pre></td></tr></table></figure><ul><li>编写打包代码 webpack.config.js<ul><li>设置两个入口文件</li><li>设置输出文件<ul><li>文件名</li><li>包名 library</li><li>包支持的类型 libraryTarget<ul><li>umd 支持cjs、es module、AMD、scripts 引入</li></ul></li><li>libraryExport 设置输出模式<ul><li>default则使用的使用不用再 <code>包名.default</code> </li></ul></li></ul></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line"></span><br><span class="line">  entry: &#123;</span><br><span class="line">    <span class="string">"large-number"</span>: <span class="string">'src/index.js'</span>,</span><br><span class="line">    <span class="string">"large-number.min"</span>: <span class="string">'src/index.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  ouput: &#123;</span><br><span class="line">    filename: <span class="string">'[name].js'</span>,</span><br><span class="line">    library: <span class="string">'largeNumber'</span>,</span><br><span class="line">    libraryTarget: <span class="string">'umd'</span>,</span><br><span class="line">    libraryExport: <span class="string">'default'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>手动配置一下脚本，方便调试 package.json</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"build"</span>: <span class="string">"webpack"</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>npm run build</li></ul><p>![image-20220606032232148](webpack 之 打包组件或者基础库/image-20220606032232148.png)</p><ul><li>设置仅仅针对 <code>*.min</code> 文件进行压缩<ul><li>production 模式下会默认使用 terser-webpack-plugin </li><li>此处设置 mode 为 none </li><li>需要手动安装 terser-webpack-plugin</li></ul></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add terser-webpack-plugin -D</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> TerserWebpackPlugin = <span class="built_in">require</span>(<span class="string">'terser-webpack-plugin'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line"></span><br><span class="line">  entry: &#123;</span><br><span class="line">    <span class="string">'large-number'</span>: <span class="string">'./src/index.js'</span>,</span><br><span class="line">    <span class="string">'large-number.min'</span>: <span class="string">'./src/index.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">'[name].js'</span>,</span><br><span class="line">    library: <span class="string">'largeNumber'</span>,</span><br><span class="line">    libraryTarget: <span class="string">'umd'</span>,</span><br><span class="line">    libraryExport: <span class="string">'default'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  mode: <span class="string">'none'</span>,</span><br><span class="line">  optimization: &#123;</span><br><span class="line">    minimize: <span class="literal">true</span>,</span><br><span class="line">    minimizer: [</span><br><span class="line">      <span class="keyword">new</span> TerserWebpackPlugin(&#123;</span><br><span class="line">        include: <span class="regexp">/\.min\.js$/</span></span><br><span class="line">      &#125;)</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>![image-20220606032955840](webpack 之 打包组件或者基础库/image-20220606032955840.png)</p><ul><li>设置入口文件，package.json 中设置 <code>main 字段</code> 为 <code>index.js</code></li></ul><p>![image-20220606033125814](webpack 之 打包组件或者基础库/image-20220606033125814.png)</p><ul><li>根目录下创建 index.js，做相应设置</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (process.env.NODE_ENV === <span class="string">'production'</span>) &#123;</span><br><span class="line">  <span class="built_in">module</span>.exports = <span class="built_in">require</span>(<span class="string">'./dist/large-number.min.js'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">module</span>.exports = <span class="built_in">require</span>(<span class="string">'./dist/large-number.js'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>再给包增加一段描述</li><li>发布之前最好将 ReadMe 文档完善</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"large-number"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">+  "description": "大整数算法",</span><br><span class="line">  "main": "index.js",</span><br><span class="line">  "author": "yanammm",</span><br><span class="line">  "license": "MIT",</span><br><span class="line">  "scripts": &#123;</span><br><span class="line">    "build": "webpack",</span><br><span class="line">+    "prepublish": "webpack"</span><br><span class="line">  &#125;,</span><br><span class="line">  "devDependencies": &#123;</span><br><span class="line">    "terser-webpack-plugin": "^5.3.3",</span><br><span class="line">    "webpack": "^5.73.0",</span><br><span class="line">    "webpack-cli": "^4.9.2"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>需要一个 npm 账号</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;实现大整数加法库的打包&quot;&gt;&lt;a href=&quot;#实现大整数加法库的打包&quot; class=&quot;headerlink&quot; title=&quot;实现大整数加法库的打包&quot;&gt;&lt;/a&gt;实现大整数加法库的打包&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;需要打包压缩版和非压缩版&lt;/li&gt;
&lt;li&gt;支持 AMD / CJS / ESM 模块引入&lt;/li&gt;
&lt;/ul&gt;&lt;h1 id=&quot;打包要求&quot;&gt;&lt;a href=&quot;#打包要求&quot; class=&quot;headerlink&quot; title=&quot;打包要求&quot;&gt;&lt;/a&gt;打包要求&lt;/h1&gt;&lt;p&gt;打包输出的库名称&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;未压缩版 large-number.js&lt;/li&gt;
&lt;li&gt;压缩版 large-number.min.js &lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;![image-20220606023625006](webpack 之 打包组件或者基础库/image-20220606023625006.png)&lt;/p&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="https://yanadev.github.io/categories/webpack/"/>
    
      <category term="CJS" scheme="https://yanadev.github.io/categories/webpack/CJS/"/>
    
      <category term="AMD" scheme="https://yanadev.github.io/categories/webpack/CJS/AMD/"/>
    
      <category term="ESM" scheme="https://yanadev.github.io/categories/webpack/CJS/AMD/ESM/"/>
    
    
      <category term="webpack" scheme="https://yanadev.github.io/tags/webpack/"/>
    
      <category term="CJS" scheme="https://yanadev.github.io/tags/CJS/"/>
    
      <category term="AMD" scheme="https://yanadev.github.io/tags/AMD/"/>
    
      <category term="ESM" scheme="https://yanadev.github.io/tags/ESM/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yanadev.github.io/2022/05/29/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAreact%20+%20webpack%E9%A1%B9%E7%9B%AE/"/>
    <id>https://yanadev.github.io/2022/05/29/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAreact%20+%20webpack%E9%A1%B9%E7%9B%AE/</id>
    <published>2022-05-28T18:18:59.091Z</published>
    <updated>2022-06-05T18:21:17.557Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir my-react</span><br><span class="line">cd my-react</span><br><span class="line">npm init</span><br></pre></td></tr></table></figure><h1 id="安装-webpack"><a href="#安装-webpack" class="headerlink" title="安装 webpack"></a>安装 webpack</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack webpack-cli --save-dev</span><br></pre></td></tr></table></figure><h1 id="最简单的案例"><a href="#最简单的案例" class="headerlink" title="最简单的案例"></a>最简单的案例</h1><ul><li>创建配置文件 <code>webpack.config.js</code> 文件</li><li><code>src</code> 目录下创建 <code>index.js</code> 、 <code>HelloWorld.js</code> 文件<ul><li>index.js 文件中引入 HelloWorld 函数直接打印出来</li></ul></li></ul><a id="more"></a><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// webpack.config.js</span><br><span class="line">'use strict';</span><br><span class="line"></span><br><span class="line">const path = require('path');</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  entry: '/src/index.js',</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.join(__dirname, 'dist'),</span><br><span class="line">    filename: 'bundle.js'</span><br><span class="line">  &#125;,</span><br><span class="line">  mode: 'production'</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// index.js 入口文件</span><br><span class="line">import &#123; HelloWorld &#125; from "./HelloWord";</span><br><span class="line"></span><br><span class="line">document.write(HelloWorld);</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// HelloWorld.js </span><br><span class="line">export function HelloWorld() &#123;</span><br><span class="line">  return 'HelloWorld';</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>直接使用 node_modules 下webpack，直接执行表示不选择配置文件，直接默认 <code>webpack.config.js</code></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./node_modules/.bin/webpack</span><br></pre></td></tr></table></figure><ul><li>获得 <code>/dist/bundle.js</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(()=&gt;&#123;"use strict";document.write((function()&#123;return"HelloWorld"&#125;))&#125;)();</span><br></pre></td></tr></table></figure><ul><li>为方便查看效果，在 <code>dist</code> 目录下创建一个 index.html 文件<ul><li>手动引入 bundle.js 文件</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">+    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./bundle.js"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="通过-npm-script-运行-webpack"><a href="#通过-npm-script-运行-webpack" class="headerlink" title="通过 npm script 运行 webpack"></a>通过 npm script 运行 webpack</h1><p><strong>模块局部安装会在 node_modules/.bin 目录下创建软链接</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"my-react"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"react react-dom react-router-dom"</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">"yanadev"</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">+  "scripts": &#123;</span><br><span class="line">+    "build": "webpack"</span><br><span class="line">+  &#125;,</span><br><span class="line">  "devDependencies": &#123;</span><br><span class="line">    "webpack": "^5.72.1",</span><br><span class="line">    "webpack-cli": "^4.9.2"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在执行 <code>npm run build</code> 之前需要手动删除 <code>dist</code> 目录</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf dist</span><br></pre></td></tr></table></figure><ul><li>执行打包命令 <code>npm run build</code></li></ul><p>![image-20220529023841696](从零搭建react + webpack项目/image-20220529023841696.png)</p><h1 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h1><h2 id="Entry-指定打包入口"><a href="#Entry-指定打包入口" class="headerlink" title="Entry 指定打包入口"></a>Entry 指定打包入口</h2><p>依赖图的入口是 entry，对非代码的依赖也会不断加入到依赖图中</p><p>![image-20220529024044258](从零搭建react + webpack项目/image-20220529024044258.png)</p><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><ul><li>单入口：<code>entry:String</code> </li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    entry: './path/to/entry/file.js' </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>多入口：<code>entry: Object</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        app: './src/app.js',</span><br><span class="line">        adminApp: './src/adminApp.js'</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Output-编译后文件地址"><a href="#Output-编译后文件地址" class="headerlink" title="Output 编译后文件地址"></a>Output 编译后文件地址</h2><ul><li>单入口配置</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">modue.exports = &#123;</span><br><span class="line">    entry:'./path/to/entry/file.js' ,</span><br><span class="line">    output:&#123;</span><br><span class="line">        filename: 'bundle.js',</span><br><span class="line">        path: __dirname + '/dist'</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>多入口配置（<strong>通过占位符确保文件名的唯一</strong>）</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        app: './src/app.js',</span><br><span class="line">        search: './src/search.js'</span><br><span class="line">    &#125;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: '[name].js',</span><br><span class="line">        path: __dirname + '/dist'</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Loaders-函数，接收源文件，返回转换结果"><a href="#Loaders-函数，接收源文件，返回转换结果" class="headerlink" title="Loaders 函数，接收源文件，返回转换结果"></a>Loaders 函数，接收源文件，返回转换结果</h2><p><strong><code>webpack</code> 开箱即用的只支持 <code>json</code> 和 <code>json</code></strong> </p><p>通过 loaders 支持其他文件类型并转化为有效模块，并可添加到依赖图中 </p><h3 id="常用-loaders"><a href="#常用-loaders" class="headerlink" title="常用 loaders"></a>常用 loaders</h3><ul><li>babel-loader 转换 ES6、7等新特性语法</li><li>css-loader 支持 css 文件加载和解析</li><li>less-loader 支持 less 文件转换成 css</li><li>ts-loader 将 ts 转换为 js</li><li>file-loader  图片文字等打包</li><li>raw-loader 将文件以字符形式导入</li><li>thread-loader 多进程打包 js 和 css</li></ul><h3 id="用法-rules"><a href="#用法-rules" class="headerlink" title="用法 rules:[]"></a>用法 rules:[]</h3><ul><li>注意执行顺序<strong>从下到上</strong>（根据出栈顺序执行）</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">const path = require('path')</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    module: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;test:/\txt$/, use: 'raw-loader'&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Plugins-整个构建过程"><a href="#Plugins-整个构建过程" class="headerlink" title="Plugins 整个构建过程"></a>Plugins 整个构建过程</h2><p>bundle 文件优化、资源管理和环境变量注入</p><h3 id="常见-plugins"><a href="#常见-plugins" class="headerlink" title="常见 plugins"></a>常见 plugins</h3><ul><li>CommonsChunkPlugin 将chunks相同模块提取成 公共js</li><li>CleanWebpackPlugin 清理构建目录</li><li>ExtractTextWebpackPlugin 将 css 从 bundle 文件里提取成一个单独css文件</li><li>CopyWepackPlugin 将文件或者文件夹拷贝到输出目录</li><li>HtmlWebpackPlugin 创建 html 去承载输出的 bundle 文件</li><li>UglifyjsWebpackPlugins 压缩 js</li><li>ZipWebpackPlugin 将打包的资源生成一个 zip 包</li></ul><h3 id="plugins-用法"><a href="#plugins-用法" class="headerlink" title="plugins 用法"></a>plugins 用法</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">const path = require('path')</span><br><span class="line">module.exports = &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">        new HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: './src/index/html'</span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mode-指定构建环境"><a href="#Mode-指定构建环境" class="headerlink" title="Mode 指定构建环境"></a>Mode 指定构建环境</h2><ul><li>production</li><li>development</li><li>none</li></ul><p>设置 mode 可使用 webpack 内置函数，默认值为 production</p><h3 id="Mode-内置函数功能"><a href="#Mode-内置函数功能" class="headerlink" title="Mode 内置函数功能"></a>Mode 内置函数功能</h3><p>![image-20220529025804276](从零搭建react + webpack项目/image-20220529025804276.png)</p><h2 id="资源解析：ES6（）babel-loader"><a href="#资源解析：ES6（）babel-loader" class="headerlink" title="资源解析：ES6（）babel-loader"></a>资源解析：ES6（）babel-loader</h2><p>配置文件为 <code>.babelrc</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    module: &#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;test: /\.js$/, use: 'babel-loader'&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>.babelrc</code> <strong>增加 babel preset 配置</strong></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"presets"</span>:[</span><br><span class="line">        <span class="string">"@babel/preset-env"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"plugins"</span>:[</span><br><span class="line">        <span class="string">"@bebel/proposal-class-properties"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="资源解析：React-JSX"><a href="#资源解析：React-JSX" class="headerlink" title="资源解析：React JSX"></a>资源解析：React JSX</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"presets"</span>: [</span><br><span class="line">        <span class="string">"@babel/preset-env"</span>,</span><br><span class="line">        <span class="string">"@babel/preset-react"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"plugins"</span>:[</span><br><span class="line">        <span class="string">"@babel/proposal-class-properties"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="资源解析：CSS"><a href="#资源解析：CSS" class="headerlink" title="资源解析：CSS"></a>资源解析：CSS</h2><ul><li>css-loader 加载 css 文件，并转换成 commonjs 对象</li><li>style-loader 将样式通过 <style> 标签插入到 head 中</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">               test: /\.css$/,</span><br><span class="line">               use:[</span><br><span class="line">                   'style-loader',</span><br><span class="line">                   'css-loader'</span><br><span class="line">               ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="资源解析：less-和-sass"><a href="#资源解析：less-和-sass" class="headerlink" title="资源解析：less 和 sass"></a>资源解析：less 和 sass</h2><ul><li>less-loader 将 less 转换为 css</li><li>sass-loader 将 sass 转换为 css</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test:/\.less$/,</span><br><span class="line">                use:[</span><br><span class="line">                    'style-loader',</span><br><span class="line">                    'css-loader',</span><br><span class="line">                    'less-loader'</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test:/\.sass$/,</span><br><span class="line">                use:[</span><br><span class="line">                    'style-loader',</span><br><span class="line">                    'css-loader',</span><br><span class="line">                    'sass-loader'</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="资源解析：图片、字体"><a href="#资源解析：图片、字体" class="headerlink" title="资源解析：图片、字体"></a>资源解析：图片、字体</h2><ul><li>file-loader 处理文件</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test: /\.(png|svg|jpg|jpeg|gif)$/,</span><br><span class="line">                use: [</span><br><span class="line">                    'file-loader'</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>file-loader 处理字体</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test: /\.(woff|woff2|eot|ttf|otf)$/,</span><br><span class="line">                use: [</span><br><span class="line">                    'file-loader'</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>url-loader 也可以处理图片和字体，*<em>可设置较小资源自动转 base64 *</em></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test:/\.(png|svg|jpg|gif)$/,</span><br><span class="line">                use:[</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader:'url-loader',</span><br><span class="line">                        options:&#123;</span><br><span class="line">                            limit: 10240</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="webpack-文件监听"><a href="#webpack-文件监听" class="headerlink" title="webpack 文件监听"></a>webpack 文件监听</h1><p><strong>文件监听，即发现源码变化时，自动构建新的输出文件,<u>唯一的缺陷就是需要手动刷新浏览器</u></strong></p><p>启动文件监听两种方式：</p><ul><li>启动 webpack 命令，加上 –watch</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"scripts"</span>: &#123;</span><br><span class="line">        <span class="string">"build"</span>: <span class="string">"webpack "</span>,</span><br><span class="line">        + <span class="string">"watch"</span>: <span class="string">"webpack --watch"</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置 webpack.config.js 中设置 <code>watch: true</code></li></ul><h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><p>轮询判断文件的最后编辑时间是否变化</p><p>某个文件发生变化变化，并不会立刻告诉监听者，而是先缓存起来，等 <code>aggregateTimeout</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    watch: true,</span><br><span class="line">    watchOptions: &#123;</span><br><span class="line">        ignored: /node_modules/, // 默认为空，支持正则匹配</span><br><span class="line">        aggregateTimeout: 300, // 监听到变化之后会等 300ms 再去执行，默认 300ms</span><br><span class="line">        poll: 1000// 判断文件是否发生变化是 通过不断循环系统指定文件是否发生变化，默认每秒问 1000 次</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="热更新：wepack-dev-server"><a href="#热更新：wepack-dev-server" class="headerlink" title="热更新：wepack-dev-server"></a>热更新：wepack-dev-server</h2><p><strong>WDS</strong>（<code>webpack-dev-server</code>）：</p><ul><li>不刷新浏览器</li><li>不输出文件，而是放在内存中</li><li>使用 <strong>HotModuleReplacementPlugin</strong> 插件</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"build"</span>: <span class="string">"webpack "</span>,</span><br><span class="line">        + ”dev": "webpack-dev-server --open"</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="热更新：webpack-dev-middleware"><a href="#热更新：webpack-dev-middleware" class="headerlink" title="热更新：webpack-dev-middleware"></a>热更新：webpack-dev-middleware</h2><p><strong>WDM</strong>（<code>webpack-dev-middleware</code>）：</p><ul><li>将webpack输出文件传输给服务器</li><li>适用于灵活的定制场景</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>)</span><br><span class="line"><span class="keyword">const</span> WebpackDevMiddleware = <span class="built_in">require</span>(<span class="string">'webpack-dev-middleware'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">'./webpack.config.js'</span>)</span><br><span class="line"><span class="keyword">const</span> compiler = webpack(config)</span><br><span class="line"></span><br><span class="line">app.use(</span><br><span class="line">webpackDevMiddleware(</span><br><span class="line">    compiler,</span><br><span class="line">        &#123;</span><br><span class="line">            publicPath: config.output.publicPath</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">app.listen(</span><br><span class="line"><span class="number">3000</span>,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Example app listening on port 3000!\n'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="原理分析-1"><a href="#原理分析-1" class="headerlink" title="原理分析"></a>原理分析</h3><ul><li><p><strong>Webpack Compile</strong>：将 JS 编译成 Bundle</p></li><li><p><strong>HMR Server</strong>：将热更新的文件输出给 HMR Runtime</p></li><li><p><strong>Bundle server</strong>：提供文件在浏览器访问</p></li><li><p><strong>HMR Runtime</strong>：会被注入到浏览器，更新文件的变化</p></li><li><p><strong>bundle.js</strong>：构建输出的文件</p></li></ul><p>![image-20220530020819641](从零搭建react + webpack项目/image-20220530020819641.png)</p><h2 id="文件指纹"><a href="#文件指纹" class="headerlink" title="文件指纹"></a>文件指纹</h2><p>打包后输出的文件名的后缀</p><h3 id="如何生成"><a href="#如何生成" class="headerlink" title="如何生成"></a>如何生成</h3><ul><li><p><strong>Hash</strong>：和整个项目的构建相关，只要项目文件改动，整个项目构建的 hash 值就会更改</p></li><li><p><strong>Chunkhash</strong>：和 webpack 打包相关的 chunk 有关，不同的 entry 生成不同的 chunkhash</p></li><li><p><strong>Contenthash</strong>：根据文件内容来定义 hash，文件内容不变，则 contenthash 不变</p></li></ul><h3 id="设置文件指纹：JS"><a href="#设置文件指纹：JS" class="headerlink" title="设置文件指纹：JS"></a>设置文件指纹：JS</h3><p>设置 output 的 filename，使用 [<code>chunkhash</code>]    </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        app: './src/app.js',</span><br><span class="line">        search: './src/search.js'</span><br><span class="line">    &#125;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        + filename: '[name][chunkhash:8].js',</span><br><span class="line">        path: __dirname + '/dist'</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="文件指纹设置：CSS"><a href="#文件指纹设置：CSS" class="headerlink" title="文件指纹设置：CSS"></a>文件指纹设置：CSS</h3><p>设置 MiniCssExtractPlugin 的 filename，使用 [contenthash]</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        app: './src/app.js',</span><br><span class="line">        search: './src/search.js'</span><br><span class="line">    &#125;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: '[name][chunkhash:8].js',</span><br><span class="line">        path: __dirname + '/dist'</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        + new MiniCssExtractPlugin(&#123;</span><br><span class="line">        + filename: `[name][contenthash:8].css</span><br><span class="line">        + &#125;);</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="文件指纹设置：图片"><a href="#文件指纹设置：图片" class="headerlink" title="文件指纹设置：图片"></a>文件指纹设置：图片</h3><table><thead><tr><th>占位符名称</th><th>含义</th></tr></thead><tbody><tr><td>[ext]</td><td>资源后缀名</td></tr><tr><td>[name]</td><td>文件名称</td></tr><tr><td>[path]</td><td>文件的相对路径</td></tr><tr><td>[folder]</td><td>文件所在的文件夹</td></tr><tr><td>[contenthash]</td><td>文件的内容 hash，默认是 md5 生成</td></tr><tr><td>[hash]</td><td>文件内容的 hash，默认是 md5 生成</td></tr><tr><td>[emoji]</td><td>一个随机的指代文件内容的 emojo</td></tr></tbody></table><h2 id="代码压缩"><a href="#代码压缩" class="headerlink" title="代码压缩"></a>代码压缩</h2><h3 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h3><p>内置了 <code>uglifyjs-webpack-plugin</code></p><h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><p>使用 <code>optimize-css-assets-webpack-plugin</code> ，同时使用 <code>cssnano</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        app: './src/app.js',</span><br><span class="line">        search: './src/search.js'</span><br><span class="line">    &#125;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: '[name][chunkhash:8].js',</span><br><span class="line">        path: __dirname + '/dist'</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        new OptimizeCSSAssetsPugin(&#123;</span><br><span class="line">            assetNameRegExp: /\.css$/g,</span><br><span class="line">            cssProcessor: require('cssnano')</span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><p>修改 <code>html-webpack-plugin</code> ，设置压缩参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            template: path.join(__dirname, <span class="string">'src/search.html'</span>),</span><br><span class="line">            filename: <span class="string">'search.html'</span>,</span><br><span class="line">            chunks: [<span class="string">'search'</span>],</span><br><span class="line">            inject: <span class="literal">true</span>,</span><br><span class="line">            minify: &#123;</span><br><span class="line">                html5: <span class="literal">true</span>,</span><br><span class="line">                collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">                preserveLineBreaks: <span class="literal">false</span>,</span><br><span class="line">                minifyCSS: <span class="literal">true</span>,</span><br><span class="line">                minifyJS: <span class="literal">true</span>,</span><br><span class="line">                removeComments: <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="多入口、js-文件指纹打包"><a href="#多入口、js-文件指纹打包" class="headerlink" title="多入口、js 文件指纹打包"></a>多入口、js 文件指纹打包</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// search.js</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'search page'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; HelloWorld &#125; <span class="keyword">from</span> <span class="string">"./HelloWord"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(HelloWorld);</span><br><span class="line"></span><br><span class="line"><span class="comment">// HelloWorld.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">HelloWorld</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'HelloWorld'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: &#123;</span><br><span class="line">    index: <span class="string">'/src/index.js'</span>,</span><br><span class="line">    search: <span class="string">'./src/search.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    filename: <span class="string">'[name]_[contenthash:8].js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  mode: <span class="string">'production'</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>![image-20220530023124720](从零搭建react + webpack项目/image-20220530023124720.png)</p><h2 id="解析-ES6-和-react-jsx-语法"><a href="#解析-ES6-和-react-jsx-语法" class="headerlink" title="解析 ES6 和 react jsx 语法"></a>解析 ES6 和 react jsx 语法</h2><ul><li>安装 babel-loader 等开发依赖（-D / –save-dev）</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @babel/core @babel/preset-env babel-loader -D</span><br></pre></td></tr></table></figure><ul><li>新建 <code>.babelrc</code> 文件</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"presets"</span>: [</span><br><span class="line">    <span class="string">"@babel/preset-env"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置 loader </li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123; test: /\.js$/, use: 'babel-loader' &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改 index.js 文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; HelloWorld &#125; <span class="keyword">from</span> <span class="string">"./HelloWord"</span>;</span><br><span class="line"><span class="keyword">const</span> sy = <span class="keyword">new</span> <span class="built_in">Symbol</span>(<span class="string">'sy'</span>);</span><br><span class="line"><span class="built_in">document</span>.write(HelloWorld + sy);</span><br></pre></td></tr></table></figure><ul><li>执行 <code>npm run build</code></li></ul><p>![image-20220530024551646](从零搭建react + webpack项目/image-20220530024551646.png)</p><ul><li>安装 react react-dom @babel/preset-react -D</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install react react-dom @babel/preset-react -D</span><br></pre></td></tr></table></figure><ul><li>配置 <code>.babelrc</code> 文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"presets"</span>: [</span><br><span class="line">    <span class="string">"@babel/preset-env"</span>,</span><br><span class="line">    <span class="string">"@babel/preset-react"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改 search.js 文件:引入 React ，使用 React 渲染 Sreach 组件到 root 结点上</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Search</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="xml">      This is a sreach page</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/&gt;</span>;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">ReactDOM.render(<span class="tag">&lt;<span class="name">Search</span> /&gt;</span>, document.getElementById('root'));</span></span><br></pre></td></tr></table></figure><ul><li><p>执行 <code>npm run build</code></p></li><li><p>dist 目录下手动创建 index.html 文件，引入 search_xxx.js 文件（<strong>注意： root 结点一定要在 script 脚本之前</strong>）</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./search_978f2253.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>![image-20220530025559437](从零搭建react + webpack项目/image-20220530025559437.png)</p><h2 id="解析-css、less、sass"><a href="#解析-css、less、sass" class="headerlink" title="解析 css、less、sass"></a>解析 css、less、sass</h2><ul><li>安装 style-loader css-loader</li><li>css-loader 加载 css 文件，并转换为 commonjs 对象</li><li>style-loader 将样式通过 <style> 标签直接插入到 head 中</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install style-loader css-loader -D</span><br></pre></td></tr></table></figure><ul><li>配置 webpack.config.js 文件</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line"> module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123; test: /\.js$/, use: 'babel-loader' &#125;,</span><br><span class="line">+      &#123; test: /\.css$/, use: ['style-loader', 'css-loader'] &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>新建 search.css 文件</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.bg</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>search.js 中引入使用</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line">+<span class="keyword">import</span> <span class="string">'./search.css'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Search</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="xml">+      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"bg"</span>&gt;</span> This is a sreach page<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/&gt;</span>;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">ReactDOM.render(<span class="tag">&lt;<span class="name">Search</span> /&gt;</span>, document.getElementById('root'));</span></span><br></pre></td></tr></table></figure><ul><li>执行 <code>npm run build</code></li><li>dist 目录下手动创建 index.html 文件，引入 search.js 文件</li></ul><p>![image-20220530030715977](从零搭建react + webpack项目/image-20220530030715977.png)</p><ul><li>安装 less 、less-loader</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install less-loader less -D</span><br></pre></td></tr></table></figure><ul><li>创建 search.less 文件</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@bg:</span><span class="number">#ccc</span>;</span><br><span class="line"><span class="selector-class">.bg</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>:<span class="variable">@bg</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>引入到 search.js 中使用</li><li>配置 webpack.config.js 文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            ...</span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.less$/</span>, <span class="attr">use</span>: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>, <span class="string">'less-loader'</span>] &#125;,</span><br><span class="line">            ...</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>![image-20220530032351124](从零搭建react + webpack项目/image-20220530032351124.png)</p><h2 id="文字、图片解析"><a href="#文字、图片解析" class="headerlink" title="文字、图片解析"></a>文字、图片解析</h2><ul><li>安装 file-loader</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install file-loader -D</span><br></pre></td></tr></table></figure><ul><li>配置 file-loader</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">module</span>:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.(png|jpg|jpeg|svg|gif)$/</span>, <span class="attr">use</span>: <span class="string">'file-loader'</span> &#125;</span><br><span class="line">    ]   </span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>search.js 文件引入 图片文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./search.css'</span>;</span><br><span class="line">+<span class="keyword">import</span> logo <span class="keyword">from</span> <span class="string">'./image/1.jpg'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Search</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"bg"</span>&gt;</span> This is a sreach page<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">+      &lt;img src=&#123;logo&#125; alt="" /&gt;</span><br><span class="line">    &lt;/&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(&lt;Search /&gt;, document.getElementById('root'));</span><br></pre></td></tr></table></figure><p>![image-20220530031657228](从零搭建react + webpack项目/image-20220530031657228.png)</p><h2 id="热更新-webpack-dev-server"><a href="#热更新-webpack-dev-server" class="headerlink" title="热更新 webpack-dev-server"></a>热更新 webpack-dev-server</h2><ul><li>安装 webpack-dev-server</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack-dev-server -D</span><br></pre></td></tr></table></figure><ul><li><p><code>HotModuleReplacementPlugin</code> 插件 均为 内置插件，无需安装</p></li><li><p>配置 webpack.config.js (目前的版本已经不再需要手动引入 HotModuleReplacementPlugin 插件了)</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        port: <span class="number">3001</span>,</span><br><span class="line">        compress: <span class="literal">true</span>,</span><br><span class="line">        <span class="comment">// 设置从目录提供静态资源文件的选项，默认 为 'public'</span></span><br><span class="line">        <span class="keyword">static</span>: &#123;</span><br><span class="line">             <span class="keyword">static</span>: &#123;</span><br><span class="line">+                directory: path.join(process.cwd(), <span class="string">'public'</span>), <span class="comment">// 提供静态文件</span></span><br><span class="line">+                publicPath: <span class="string">'/'</span> <span class="comment">// 提供bundle 文件(热更新不需要磁盘 I/O，保存在内存中)</span></span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 设置浏览器是否显示错误、警告信息</span></span><br><span class="line">        client: &#123;</span><br><span class="line">          overlay: &#123;</span><br><span class="line">            errors: <span class="literal">true</span>,</span><br><span class="line">            warnings: <span class="literal">true</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>![image-20220530162830149](从零搭建react + webpack项目/image-20220530162830149.png)</p><h2 id="js、css、html压缩（css提取单独文件）"><a href="#js、css、html压缩（css提取单独文件）" class="headerlink" title="js、css、html压缩（css提取单独文件）"></a>js、css、html压缩（css提取单独文件）</h2><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><ul><li>webpack内置了 <code>Uglifyjs-webpack-plugin</code> 若需要改动，可手动配置</li></ul><h3 id="css压缩与提取"><a href="#css压缩与提取" class="headerlink" title="css压缩与提取"></a>css压缩与提取</h3><ul><li>webpack 5.x 版本使用 css-minimizer-webpack-plugin</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install css-minimizer-webpack-plugin --save-dev</span><br></pre></td></tr></table></figure><ul><li>配置 webpack.config.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> CssMinimizerWebpackPlugin = <span class="built_in">require</span>(<span class="string">'css-minimizer-webpack-plugin'</span>)</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    optimizetion:&#123;</span><br><span class="line">        minimizer:[</span><br><span class="line">            <span class="keyword">new</span> CssMinimizerWebpackPlugin()</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>安装 mini-css-extract-plugin 插件，使用该插件的 loader 将 css 文件抽离成单独的文件</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mini-css-extract-plugin -D</span><br></pre></td></tr></table></figure><ul><li>配置 webpack.config.js</li><li>注意：一旦使用 style-loader，就不能使用 mini-css-extract-plugin，二者是不同的运行机制<ul><li>style-loader 是创建 style 标签，将样式包裹并插入 head 中</li><li>mini-css-extract-plugin 是提取css到单独文件，使用 link 标签引入 </li></ul></li><li>使用 mini-css-extract-plugin.loader 处理样式文件解析过程</li><li>同时在 plugins 中生成一个实例对象配置对应样式文件的命名规则</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">...</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">...</span><br><span class="line">            <span class="comment">// &#123; test: /\.css$/, use: ['style-loader', 'css-loader'] &#125;,</span></span><br><span class="line">            <span class="comment">// &#123; test: /\.less$/, use: ['style-loader', 'css-loader', 'less-loader'] &#125;, // 创建 style 标签，插入 head</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="attr">use</span>: [MiniCssExtractPlugin.loader, <span class="string">'css-loader'</span>] &#125;,<span class="comment">// MiniCssExtractPlugin.loader创建 link 标签引入样式文件</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.less$/</span>, <span class="attr">use</span>: [MiniCssExtractPlugin.loader, <span class="string">'css-loader'</span>, <span class="string">'less-loader'</span>] &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="comment">// 指定单独提取出来的 css 文件的命名规则</span></span><br><span class="line">        <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">            filename: <span class="string">'[name]_[contenthash:8].css'</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ]</span><br><span class="line"> </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="html-1"><a href="#html-1" class="headerlink" title="html"></a>html</h3><ul><li>安装 html-webpack-plugin 为入口文件创建 html 文件（尤其是随着编译而改变 hash 的 webpack bundle 尤其有用</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install html-webpack-plugin -D</span><br></pre></td></tr></table></figure><ul><li>src 目录下创建两个空的 html 文件作为配置的 template </li><li>如果需要查看效果的话，需要在 search.html 中创建一个 root 结点</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- search.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Search<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Search<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>配置 webpack.config.js</li><li>目前有多少个入口，就需要手动创建多少个插件实例来创建 html 模板</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> CssMinimizerWebpackPlugin = <span class="built_in">require</span>(<span class="string">'css-minimizer-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">    index: <span class="string">'/src/index.js'</span>,</span><br><span class="line">    search: <span class="string">'./src/search.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    ...</span><br><span class="line">    mode: <span class="string">'development'</span>,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="comment">// 指定单独提取出来的 css 文件的命名规则</span></span><br><span class="line">        <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">          filename: <span class="string">'[name]_[contenthash:8].css'</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">          template: path.join(__dirname, <span class="string">'src/search.html'</span>),</span><br><span class="line">          filename: <span class="string">'search.html'</span>,</span><br><span class="line">          chunk: [<span class="string">'search'</span>],</span><br><span class="line">          inject: <span class="literal">true</span>,</span><br><span class="line">          minify: &#123;</span><br><span class="line">            html5: <span class="literal">true</span>,</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">            preserveLinkBreaks: <span class="literal">false</span>,</span><br><span class="line">            minifyCSS: <span class="literal">true</span>,</span><br><span class="line">            minifyJS: <span class="literal">true</span>,</span><br><span class="line">            removeComments: <span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">          template: path.join(__dirname, <span class="string">'src/index.html'</span>),</span><br><span class="line">          filename: <span class="string">'index.html'</span>,</span><br><span class="line">          chunks: [<span class="string">'index'</span>],</span><br><span class="line">          inject: <span class="literal">true</span>,</span><br><span class="line">          minify: &#123;</span><br><span class="line">            html5: <span class="literal">true</span>,</span><br><span class="line">            collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">            preserveLinkBreaks: <span class="literal">false</span>,</span><br><span class="line">            minifyCSS: <span class="literal">true</span>,</span><br><span class="line">            minifyJS: <span class="literal">true</span>,</span><br><span class="line">            removeComments: <span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="清理构建目录"><a href="#清理构建目录" class="headerlink" title="清理构建目录"></a>清理构建目录</h1><p>有两种方式：</p><ul><li>通过 npm scripts 清理构建目录</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ./dist &amp;&amp; webpack</span><br><span class="line">rimraf ./dist &amp;&amp; webpack</span><br></pre></td></tr></table></figure><ul><li>使用插件 clean-webpack-plugin<ul><li>默认会删除 output 指定的输出目录</li></ul></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install clean-webpack-plugin -D</span><br></pre></td></tr></table></figure><h1 id="CSS增强（兼容）"><a href="#CSS增强（兼容）" class="headerlink" title="CSS增强（兼容）"></a>CSS增强（兼容）</h1><h2 id="postcss-loader、autoprefixer-自动补齐-css3-前缀"><a href="#postcss-loader、autoprefixer-自动补齐-css3-前缀" class="headerlink" title="postcss-loader、autoprefixer 自动补齐 css3 前缀"></a>postcss-loader、autoprefixer 自动补齐 css3 前缀</h2><p>浏览器前缀：</p><ul><li>Trident (-ms)</li><li>Geko (-moz)</li><li>Webkit (-webkit)</li><li>Presto (-o)</li></ul><p>![image-20220531154407237](从零搭建react + webpack项目/image-20220531154407237.png)</p><ul><li>postcss-loader 确保在 css-loader 之前使用，放在 less-loader 之前问题也不大</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install postcss-loader autoprefixer postcss-preset-env -D</span><br></pre></td></tr></table></figure><ul><li>webpack 5 使用需要额安装 <em>postcss-preset-env</em></li></ul><ul><li>配置 package.json 的 浏览器兼容选项 browserslist</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"browserslist"</span>: &#123;</span><br><span class="line">    <span class="attr">"production"</span>: [</span><br><span class="line">      <span class="string">"&gt;0.2%"</span>,</span><br><span class="line">      <span class="string">"not dead"</span>,</span><br><span class="line">      <span class="string">"not op_mini all"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"development"</span>: [</span><br><span class="line">      <span class="string">"last 1 chrome version"</span>,</span><br><span class="line">      <span class="string">"last 1 firefox version"</span>,</span><br><span class="line">      <span class="string">"last 1 safari version"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置 webpack.prod.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> autoprefixer = <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line"><span class="built_in">module</span>:&#123;</span><br><span class="line">    rules:[</span><br><span class="line">        &#123;</span><br><span class="line">            test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">            use: [</span><br><span class="line">                MiniCssExtractPlugin.loader,</span><br><span class="line">                <span class="string">'css-loader'</span>,</span><br><span class="line">                <span class="string">'less-loader'</span>,</span><br><span class="line">                &#123;</span><br><span class="line">                loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">                options: &#123;</span><br><span class="line">                  postcssOptions: &#123;</span><br><span class="line">                    plugins: [<span class="string">"autoprefixer"</span>,<span class="string">"postcss-preset-env"</span>]</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>![image-20220531222950518](从零搭建react + webpack项目/image-20220531222950518.png)</p><h2 id="移动端-px-自动转-rem-（px2rem-loader-配合-lib-flexible-js）"><a href="#移动端-px-自动转-rem-（px2rem-loader-配合-lib-flexible-js）" class="headerlink" title="移动端 px 自动转 rem （px2rem-loader 配合 lib-flexible.js）"></a>移动端 px 自动转 rem （px2rem-loader 配合 lib-flexible.js）</h2><blockquote><p>二者必须配合使用</p><p>px2rem-loader 以构建的手段将 px 转换成了 rem</p><p>但是rem 和 px 的单位计算并不清楚，flexible 的最用是动态计算不同设备下的 rem 相对 px 的单位，即 <strong>计算根元素 html 结点的 font-size 的大小</strong></p></blockquote><ul><li>安装 px2rem-loader</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install px2rem-loader -D</span><br></pre></td></tr></table></figure><ul><li>使用(<strong>注意使用的时候，需要在 less-loader/sass-loader 之后 css-loader 之前使用，否则会报错 <u>链式调用，从右到左</u></strong>)</li><li>可以设置 exclude 忽略 node_modules 里面的模块</li><li>也可使用 /*no*/来设置某一行样式不进行 px2rem 转换 </li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="built_in">module</span>:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">                use:[</span><br><span class="line">                    ...</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader: <span class="string">'px2rem-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                            remUnit: <span class="number">75</span>,</span><br><span class="line">                            remPrecision: <span class="number">8</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    ...</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">                use: [</span><br><span class="line">                    <span class="comment">// 'style-loader',</span></span><br><span class="line">                    MiniCssExtractPlugin.loader,</span><br><span class="line">                    <span class="string">'css-loader'</span>,</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader: <span class="string">'postcss-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                            postcssOptions: &#123;</span><br><span class="line">                                plugins: [<span class="string">"autoprefixer"</span>]</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader: <span class="string">'px2rem-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                            remUnit: <span class="number">75</span>,</span><br><span class="line">                            remPrecision: <span class="number">8</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">'less-loader'</span>,</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>安装 lib-flexible.js </li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install lib-flexible -S</span><br></pre></td></tr></table></figure><ul><li>此处直接将 lib-flexible.js 文件中内容直接复制到 html 模板的 head 中（后续的资源内联可解决该问题）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Search<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">+    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">+        <span class="xml"><span class="comment">&lt;!-- flexible.js 文件信息拷贝至此 --&gt;</span></span></span></span><br><span class="line">+    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    Search 页面</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="资源内联"><a href="#资源内联" class="headerlink" title="资源内联"></a>资源内联</h1><h2 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h2><p>代码层面：</p><ul><li>页面框架的初始化脚本</li><li>上报相关打点</li><li>css 内联避免页面闪动</li></ul><p>请求层面：减少 HTTP 网络请求</p><ul><li>小图片或者字体内联（url-loader）</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li>html 和 js 内联使用 <code>raw-loader</code></li><li>css 内联有两个方案：<ul><li>借助 style-loader</li><li>html-inline-css-webpack-plugin 插件</li></ul></li></ul><h2 id="html-、js-内联"><a href="#html-、js-内联" class="headerlink" title="html 、js 内联"></a>html 、js 内联</h2><ul><li>安装 raw-loader </li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install raw-loader -D</span><br></pre></td></tr></table></figure><ul><li>安装 lib-flexible.js 库</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install lib-flexible -S</span><br></pre></td></tr></table></figure><ul><li><p>在使用了 html-webpack-plugin 生成 html 模板的情况下，默认使用的 ejs 模板引擎 ，支持 <strong>&lt;%= %&gt;</strong></p></li><li><p>修改 webpack.prod.js</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.export = &#123;</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                resourceQuery: <span class="regexp">/raw/</span>,</span><br><span class="line">                type: <span class="string">'asset/source'</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>/public 目录下创建 meta.html 静态文件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"viewport-fit=cover,width=device-width,initial-scale=1,user-scalable=no"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"telephone=no"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"now,now直播,直播,腾讯直播,QQ直播,美女直播,附近直播,才艺直播,小视频,个人直播,美女视频,在线直播,手机直播"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"name"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">itemprop</span>=<span class="string">"name"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"NOW直播—腾讯旗下全民视频社交直播平台"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">itemprop</span>=<span class="string">"description"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"NOW直播，腾讯旗下全民高清视频直播平台，汇集中外大咖，最in网红，草根偶像，明星艺人，校花，小鲜肉，逗逼段子手，各类美食、音乐、旅游、时尚、健身达人与你24小时不间断互动直播，各种奇葩刺激的直播玩法，让你跃跃欲试，你会发现，原来人人都可以当主播赚钱！"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"image"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">itemprop</span>=<span class="string">"image"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"https://pub.idqqimg.com/pc/misc/files/20170831/60b60446e34b40b98fa26afcc62a5f74.jpg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"baidu-site-verification"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"G4ovcyX25V"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"no"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"IE=Edge,chrome=1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"dns-prefetch"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">"//11.url.cn/"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"dns-prefetch"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">"//open.mobile.qq.com/"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>将资源内联进 <strong>index.ejs(插件生成的模板)</strong> <u><strong>内联 js 和 html</strong></u></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%=</span> <span class="attr">require</span>('<span class="attr">..</span>/<span class="attr">public</span>/<span class="attr">meta.html</span>?<span class="attr">raw</span>')</span></span><br><span class="line"><span class="tag">        %&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">title</span>&gt;</span>Index<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">&lt;%= <span class="built_in">require</span>(<span class="string">'../node_modules/lib-flexible/flexible.js?raw'</span>)</span></span><br><span class="line">          %&gt;<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="css-内联"><a href="#css-内联" class="headerlink" title="css 内联"></a>css 内联</h2><ul><li>安装 lib-flexible (手淘的 lib-flexible 库：页面渲染时计算根元素的 font-size 值)</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install lib-flexible -S</span><br></pre></td></tr></table></figure><ul><li>安装 mini-css-extract-plugin 和 html-inline-css-webpack-plugin</li><li>mini-css-extract-plugin 先将 css 文件抽成一个单独文件</li><li>再使用 html-inline-css-webpack-plugin 将 css 文件内联到模板 html 里面（<strong>注意 html-webpack-plugin 要在前面</strong>）有模板之后才能注入</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mini-css-extract-plugin html-inline-css-webpack-plugin -D</span><br></pre></td></tr></table></figure><ul><li>配置 webpack.prod.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> HtmlInlineCssWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-inline-css-webpack-plugin'</span>).default;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  ...</span><br><span class="line">  mode: <span class="string">'production'</span>,</span><br><span class="line">  plugins: [</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">      filename: <span class="string">'[name]_[contenthash:8].css'</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: path.join(__dirname, <span class="string">'/src/index.html'</span>),</span><br><span class="line">      filename: <span class="string">'index.html'</span>,</span><br><span class="line">      chunks: [<span class="string">'index'</span>],</span><br><span class="line">      inject: <span class="literal">true</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      template: path.join(__dirname, <span class="string">'/src/search.html'</span>),</span><br><span class="line">      filename: <span class="string">'search.html'</span>,</span><br><span class="line">      chunks: [<span class="string">'search'</span>],</span><br><span class="line">      inject: <span class="literal">true</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> HtmlInlineCssWebpackPlugin()</span><br><span class="line">  ],</span><br><span class="line">  ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="多页面打包通用方案"><a href="#多页面打包通用方案" class="headerlink" title="多页面打包通用方案"></a>多页面打包通用方案</h1><h2 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h2><p><strong>每个页面对应一个 entry，一个 html-webpack-plugin</strong></p><p><strong>缺点：每次增删页面都需要改 webpack 配置</strong></p><h2 id="动态获取-entry-和-设置-html-webpack-plugin-数量（利用-glob-sync）"><a href="#动态获取-entry-和-设置-html-webpack-plugin-数量（利用-glob-sync）" class="headerlink" title="动态获取 entry 和 设置 html-webpack-plugin 数量（利用 glob.sync）"></a>动态获取 entry 和 设置 html-webpack-plugin 数量（利用 glob.sync）</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> glob = <span class="built_in">require</span>(<span class="string">'glob'</span>)</span><br><span class="line">entry: glob.sync( path.join(__dirname, <span class="string">'./src/*/index.js'</span>) )</span><br></pre></td></tr></table></figure><ul><li><p>重新设置目录结构</p></li><li><p>每个入口文件以 <code>src/ 入口文件名 / index.js</code> 形式创建</p></li><li><p>使用 * 号正则匹配所有符合的目录（获取入口文件列表）</p></li><li><p>安装 glob</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install glob -D</span><br></pre></td></tr></table></figure><ul><li>自定义函数处理 MPA （Multi Page web Application 多页面应用）<ul><li>该函数处理<strong>生成 html-webpack-plugin 模板 和 入口文件对象</strong></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">setMPA = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> entry = &#123;&#125;</span><br><span class="line">    <span class="keyword">let</span> HtmlWebpackPlugins = []</span><br><span class="line">    <span class="comment">/* 具体逻辑 */</span></span><br><span class="line">    <span class="keyword">return</span> &#123; entry, HtmlWebpackPlugins &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">glob.sync( path.join(__dirname, <span class="string">'./src/*/index.js'</span>) )<span class="comment">// 同步方法获取符合条件的目录列表</span></span><br><span class="line"><span class="comment">// 由于在 windows 中获取的绝对路径是 \ 形式的，需要手动转换一下</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="built_in">require</span>(<span class="string">'clean-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> autoprefixer = <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlInlineCssWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-inline-css-webpack-plugin'</span>).default;</span><br><span class="line"></span><br><span class="line">+<span class="keyword">const</span> glob = <span class="built_in">require</span>(<span class="string">'glob'</span>);</span><br><span class="line"></span><br><span class="line">+<span class="keyword">const</span> setMPA = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> entry = &#123;&#125;;</span><br><span class="line">  <span class="keyword">let</span> htmlWebpackPlugins = [];</span><br><span class="line">  <span class="keyword">let</span> url = path.join(__dirname, <span class="string">'src/*/index.js'</span>).replaceAll(<span class="string">"\\"</span>,</span><br><span class="line">    <span class="string">'/'</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> entryFiles = glob.sync(url);</span><br><span class="line">  <span class="built_in">Object</span>.keys(entryFiles)</span><br><span class="line">    .map(<span class="function"><span class="params">index</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 匹配路由</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">const</span> entryFile = entryFiles[index];</span><br><span class="line">      <span class="comment">// src/(.*)/index.js   // . 匹配除了新行之外的所有, * 表示 0或0个以上</span></span><br><span class="line">      <span class="keyword">const</span> match = entryFile.match(<span class="regexp">/src\/(.*)\/index.js/</span>);</span><br><span class="line">      <span class="comment">// [</span></span><br><span class="line">      <span class="comment">//   'src/search/index.js',</span></span><br><span class="line">      <span class="comment">//   'search',</span></span><br><span class="line">      <span class="comment">//   index: 30,</span></span><br><span class="line">      <span class="comment">//   input: 'D:/Z-workSpace/React/my-react/src/search/index.js',</span></span><br><span class="line">      <span class="comment">//   groups: undefined</span></span><br><span class="line">      <span class="comment">// ]</span></span><br><span class="line">      <span class="keyword">const</span> pageName = match &amp;&amp; match[<span class="number">1</span>];</span><br><span class="line">      entry[pageName] = entryFile;</span><br><span class="line">      htmlWebpackPlugins.push(</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">          template: path.join(__dirname, <span class="string">`/src/<span class="subst">$&#123;pageName&#125;</span>/index.html`</span>),</span><br><span class="line">          filename: <span class="string">`<span class="subst">$&#123;pageName&#125;</span>.html`</span>,</span><br><span class="line">          chunks: [pageName],</span><br><span class="line">          inject: <span class="literal">true</span></span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    entry, htmlWebpackPlugins</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">+<span class="keyword">let</span> &#123; entry, htmlWebpackPlugins &#125; = setMPA();</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">+  <span class="comment">// entry: &#123;</span></span><br><span class="line">+  <span class="comment">//   index: '/src/index.js',</span></span><br><span class="line">+  <span class="comment">//   search: './src/search.js'</span></span><br><span class="line">+  <span class="comment">// &#125;,</span></span><br><span class="line">+  entry,</span><br><span class="line">  output: &#123;</span><br><span class="line">    path: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    filename: <span class="string">'[name]_[contenthash:8].js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  mode: <span class="string">'production'</span>,</span><br><span class="line">  plugins: [</span><br><span class="line">    autoprefixer,</span><br><span class="line">    <span class="keyword">new</span> CleanWebpackPlugin(),</span><br><span class="line">    <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">      filename: <span class="string">'[name]_[contenthash:8].css'</span></span><br><span class="line">    &#125;),</span><br><span class="line">+    <span class="comment">// new HtmlWebpackPlugin(&#123;</span></span><br><span class="line">+    <span class="comment">//   template: path.join(__dirname, '/src/index.html'),</span></span><br><span class="line">+    <span class="comment">//   filename: 'index.html',</span></span><br><span class="line">+    <span class="comment">//   chunks: ['index'],</span></span><br><span class="line">+    <span class="comment">//   inject: true</span></span><br><span class="line">+    <span class="comment">// &#125;),</span></span><br><span class="line">+    <span class="comment">// new HtmlWebpackPlugin(&#123;</span></span><br><span class="line">+    <span class="comment">//   template: path.join(__dirname, '/src/search.html'),</span></span><br><span class="line">+    <span class="comment">//   filename: 'search.html',</span></span><br><span class="line">+    <span class="comment">//   chunks: ['search'],</span></span><br><span class="line">+    <span class="comment">//   inject: true</span></span><br><span class="line">+    <span class="comment">// &#125;),</span></span><br><span class="line">+    <span class="keyword">new</span> HtmlInlineCssWebpackPlugin()</span><br><span class="line">+  ].concat(...htmlWebpackPlugins),</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="使用-sourcemap-定位源码"><a href="#使用-sourcemap-定位源码" class="headerlink" title="使用 sourcemap 定位源码"></a>使用 sourcemap 定位源码</h1><ul><li>eval 使用 eval 包裹模块代码</li><li>source map 产生 .map 文件</li><li>cheap 不包含列信息</li><li>inline 将 .map 作为 DataURL 嵌入，不单独生成 .map 文件</li><li>module 包含 loader 的 sourcemap</li></ul><p>![image-20220602180806610](从零搭建react + webpack项目/image-20220602180806610.png)</p><ul><li>设置 devtool 即可（webpack.dev.js 一般开发环境下开启可定位源码位置）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    devtool: <span class="string">'source-map'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>出于对性能的考虑，在生产环境推荐不使用 source map，这样有最好的打包性能。</p><p>开发环境开启，线上环境关闭</p><ul><li>如果想使用，可以使用分析不出来业务逻辑的 source map 类型。</li><li>线上排查问题的时候可以将 source map 上传到错误监控系统。</li><li>生产环境：<code>devtool: source-map;</code> 拥有高质量的 source map</li><li>开发环境推荐使用：<code>devtool: eval-cheap-module-source-map</code></li></ul><h1 id="配置路径别名"><a href="#配置路径别名" class="headerlink" title="配置路径别名"></a>配置路径别名</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    ...</span><br><span class="line">    resolve: &#123;</span><br><span class="line">        alias: &#123;</span><br><span class="line">          <span class="string">'@'</span>: path.join(__dirname, <span class="string">'/'</span>),</span><br><span class="line">          <span class="string">'@src'</span>: path.join(__dirname, <span class="string">'/src'</span>),</span><br><span class="line">          <span class="string">'@public'</span>: path.join(__dirname, <span class="string">'/public'</span>),</span><br><span class="line">          <span class="string">'@image'</span>: path.join(__dirname, <span class="string">'/src/image'</span>),</span><br><span class="line">          <span class="string">'@asset'</span>: path.join(__dirname, <span class="string">'/src/asset'</span>),</span><br><span class="line">          <span class="string">'@comp'</span>: path.join(__dirname, <span class="string">'/src/components'</span>),</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="提取页面公共资源"><a href="#提取页面公共资源" class="headerlink" title="提取页面公共资源"></a>提取页面公共资源</h1><h2 id="基础库分离"><a href="#基础库分离" class="headerlink" title="基础库分离"></a>基础库分离</h2><ul><li>思路<ul><li>将 react 、react-dom 基础包通过 cdn 引入，不打入 bundle 中</li></ul></li><li>方法<ul><li>使用 <code>html-webpack-externals-plugin</code> 分离基础库</li><li>webpack 内置的 <code>SplitChunksPlugin</code>，替代 <code>COmmonsChunkPlugin</code> 插件<ul><li>chunks 参数说明<ul><li>async 一步引入的库进行分离（默认）</li><li>initial 同步引入的库进行分离</li><li>all 所有引入的库进行分离（推荐）</li></ul></li></ul></li></ul></li></ul><h3 id="html-webpack-externals-plugin-设置基础库-cdn"><a href="#html-webpack-externals-plugin-设置基础库-cdn" class="headerlink" title="html-webpack-externals-plugin 设置基础库 cdn"></a>html-webpack-externals-plugin 设置基础库 cdn</h3><ul><li>安装 <code>html-webpack-externals-plugin</code> 设置分离基础库的 cdn </li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install html-webpack-externals-plugin -D</span><br></pre></td></tr></table></figure><ul><li>设置需要分离的基础库及其 cdn 地址</li><li>entry 设置 cdn 地址</li><li>module 表示模块名</li><li>global 表示导出的全局名称</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">modules.exports = &#123;</span><br><span class="line">    plugins:[</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackExternalsPlugin(&#123;</span><br><span class="line">          externals: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">module</span>: <span class="string">'react'</span>,</span><br><span class="line">              entry: <span class="string">'https://unpkg.com/react@16/umd/react.development.js'</span>,</span><br><span class="line">              global: <span class="string">'React'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">module</span>: <span class="string">'react-dom'</span>,</span><br><span class="line">              entry: <span class="string">'https://unpkg.com/react-dom@16/umd/react-dom.development.js'</span>,</span><br><span class="line">              global: <span class="string">'ReactDOM'</span></span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;),</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>![image-20220604034324926](从零搭建react + webpack项目/image-20220604034324926.png)</p><p>![image-20220604034412464](从零搭建react + webpack项目/image-20220604034412464.png)</p><p>![image-20220604184009180](从零搭建react + webpack项目/image-20220604184009180.png)</p><h3 id="splitChunksPlugin-代码分割"><a href="#splitChunksPlugin-代码分割" class="headerlink" title="splitChunksPlugin 代码分割"></a>splitChunksPlugin 代码分割</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">optimization: &#123;</span><br><span class="line">    splitChunks: &#123;</span><br><span class="line">        chunks: <span class="string">"async"</span>,</span><br><span class="line">        minSize: <span class="number">30000</span>,</span><br><span class="line">        minChunks: <span class="number">1</span>,</span><br><span class="line">        maxAsyncRequests: <span class="number">5</span>,</span><br><span class="line">        maxInitialRequests: <span class="number">3</span>,</span><br><span class="line">        automaticNameDelimiter: <span class="string">'~'</span>,</span><br><span class="line">        name: <span class="literal">true</span>,</span><br><span class="line">        cacheGroups: &#123;</span><br><span class="line">            vendors: &#123;</span><br><span class="line">                test: <span class="regexp">/[\\/]node_modules[\\/]/</span>,</span><br><span class="line">                priority: <span class="number">-10</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">default</span>: &#123;</span><br><span class="line">                minChunks: <span class="number">2</span>,</span><br><span class="line">                priority: <span class="number">-20</span>,</span><br><span class="line">                reuseExistingChunk: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">  optimization: &#123;</span><br><span class="line">    splitChunks: &#123;</span><br><span class="line">      <span class="comment">// async：异步引入的库进行分离（默认），  initial： 同步引入的库进行分离， all：所有引入的库进行分离（推荐）</span></span><br><span class="line">      chunks: <span class="string">'async'</span>, </span><br><span class="line">      minSize: <span class="number">30000</span>, <span class="comment">// 抽离的公共包最小的大小，单位字节</span></span><br><span class="line">      maxSize: <span class="number">0</span>, <span class="comment">// 最大的大小</span></span><br><span class="line">      minChunks: <span class="number">1</span>, <span class="comment">// 资源使用的次数(在多个页面使用到)， 大于1， 最小使用次数</span></span><br><span class="line">      maxAsyncRequests: <span class="number">5</span>,  <span class="comment">// 并发请求的数量</span></span><br><span class="line">      maxInitialRequests: <span class="number">3</span>, <span class="comment">// 入口文件做代码分割最多能分成3个js文件</span></span><br><span class="line">      automaticNameDelimiter: <span class="string">'~'</span>, <span class="comment">// 文件生成时的连接符</span></span><br><span class="line">      automaticNameMaxLength: <span class="number">30</span>, <span class="comment">// 自动自动命名最大长度</span></span><br><span class="line">      name: <span class="literal">true</span>, <span class="comment">//让cacheGroups里设置的名字有效</span></span><br><span class="line">      cacheGroups: &#123; <span class="comment">//当打包同步代码时,上面的参数生效</span></span><br><span class="line">        vendors: &#123;</span><br><span class="line">          test: <span class="regexp">/[\\/]node_modules[\\/]/</span>,  <span class="comment">//检测引入的库是否在node_modlues目录下的</span></span><br><span class="line">          priority: <span class="number">-10</span>, <span class="comment">//值越大,优先级越高.模块先打包到优先级高的组里</span></span><br><span class="line">          filename: <span class="string">'vendors.js'</span><span class="comment">//把所有的库都打包到一个叫vendors.js的文件里</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">default</span>: &#123;</span><br><span class="line">          minChunks: <span class="number">2</span>, <span class="comment">// 上面有</span></span><br><span class="line">          priority: <span class="number">-20</span>,  <span class="comment">// 上面有</span></span><br><span class="line">          reuseExistingChunk: <span class="literal">true</span> <span class="comment">//如果一个模块已经被打包过了,那么再打包时就忽略这个上模块</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>CacheGroups<ul><li>minChunks 模块被引用多少次才对模块进行代码分割</li><li>test 正则匹配条件</li><li>priority 缓存组的优先级</li><li>reuseExistingChunk 如果模块被打包了，遇到相同的模块不会再打包，复用之前的默块</li></ul></li><li>chunks 类型<ul><li>async 异步导入</li><li>sync  同步导入</li><li>all 二者均</li></ul></li><li>maxAsyncRequests 同时加载的模块数量（<strong>包含入口文件及其入口依赖文件所导入模块</strong>）</li><li>maxInitialRequests 入口文件进行分割最多分割出多少个模块（超出部分不进行代码分割）<strong>对入口文件中直接导入的包数量的统计</strong></li><li>automaticNameDelimiter 文件名连接符（<strong>默认 ~</strong>）</li><li>name 起的文件名起效 <strong>默认值 true</strong></li></ul><p>缓存组中的属性</p><blockquote><p>为什么需要缓存组？</p><p><strong>cacheGroups 只对同步引入模块有约束作用</strong>，且同步导入的模块要进行代码分割必须配置相关的缓存组</p><p>异步导入的模块不管有没有缓存组都会对每个异步导入的模块单独生成一个 js 模块</p></blockquote><p>有设置缓存组的话，会将同一个缓存组的模块代码打包同一个模js 文件中；若没有缓存组，是没有办法将两个模块打包到同一个文件中的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    optimization: &#123;</span><br><span class="line">        splitChunks: &#123;</span><br><span class="line">          minSize: <span class="number">0</span>,</span><br><span class="line">          cacheGroups: &#123;</span><br><span class="line">            commons: &#123;</span><br><span class="line">              name: <span class="string">'commons'</span>,</span><br><span class="line">              chunks: <span class="string">'all'</span>,</span><br><span class="line">              minChunks: <span class="number">2</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="tree-shaking-摇树优化"><a href="#tree-shaking-摇树优化" class="headerlink" title="tree shaking 摇树优化"></a>tree shaking 摇树优化</h1><p>一个模块可能有多个方法，但其中只有某个方法用到，整个文件就会被打包到 bundle 文件中，tree shaking 就是只把用到的方法打包的 bundle 中，没有用到的会在 uglify 阶段被擦除掉</p><h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><p>默认支持，<code>.babelrc</code> 文件中设置 <code>modules: false</code> 即可使用</p><p>.production mode 情况下默认开启</p><p><strong>必须是 ES6，不支持 cjs</strong></p><blockquote><p>即如果要将 es6 转成 es5，同时又开启 tree-shaking，需要在 <code>.babelrc</code> 中设置 modules 为 false</p><p>不然，babel 会默认将 es6 语法转化成 commonjs ，这样就不能进行 tree-shaking</p></blockquote><ul><li>设置 modules: false</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"presets"</span>: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"@babel/preset-env"</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"modules"</span>: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"@babel/preset-react"</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"modules"</span>: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>不设置 modules: false</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"presets"</span>: [</span><br><span class="line">    <span class="string">"@babel/preset-env"</span>,</span><br><span class="line">    <span class="string">"@babel/preset-react"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="scope-hoisting"><a href="#scope-hoisting" class="headerlink" title="scope hoisting"></a>scope hoisting</h1><p>将所有模块的代码按照引用顺序放在一个函数作用域里，使用重命名一些变量以避免变量名冲突</p><p><strong>通过 scope hoisting 可减少声明代码和内存开销</strong></p><h1 id="懒加载脚本"><a href="#懒加载脚本" class="headerlink" title="懒加载脚本"></a>懒加载脚本</h1><ul><li><p>CommonJS： <code>require.ensure</code></p></li><li><p>ES6：动态 import （目前没有原生支持，需要 babel 转换）</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @babel/plugin-syntax-dynamic-import --save-dev</span><br></pre></td></tr></table></figure><ul><li>配置 <code>.babelrc</code>  文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">"plugins"</span>:[</span><br><span class="line">        <span class="string">"@babel/plugin-syntax-dynamic-import"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="regexp">/src/i</span>ndex/index.js --&gt;</span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createRoot &#125; <span class="keyword">from</span> <span class="string">'react-dom/client'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">      Test: <span class="literal">null</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">this</span>.handleClick = <span class="keyword">this</span>.handleClick.bind(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  handleClick() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'hello'</span>);</span><br><span class="line">    <span class="keyword">import</span>(<span class="string">'./test.js'</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; name &#125; = res.default;</span><br><span class="line">      <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">        Test: <span class="function"><span class="params">()</span> =&gt;</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>name<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; Test &#125; = <span class="keyword">this</span>.state;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="xml">      &#123;/* <span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is index pages!!!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">      &lt;img src=&#123;logo&#125; alt="" /&gt; */&#125;</span><br><span class="line">      &#123;Test ? &lt;Test&gt;&lt;/Test&gt; : '------'&#125;</span><br><span class="line">      &lt;button onClick=&#123;this.handleClick&#125;&gt;btn&lt;/button&gt;</span><br><span class="line">    &lt;/&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const container = document.getElementById('root');</span><br><span class="line">const root = createRoot(container);</span><br><span class="line">root.render(&lt;Index /&gt;);</span><br></pre></td></tr></table></figure><ul><li>点击按钮会发起一个请求</li></ul><p>![image-20220605165114798](从零搭建react + webpack项目/image-20220605165114798.png)</p><h1 id="使用-ESlint"><a href="#使用-ESlint" class="headerlink" title="使用 ESlint"></a>使用 ESlint</h1><h2 id="行业里面优秀的-ESlint-规范实践"><a href="#行业里面优秀的-ESlint-规范实践" class="headerlink" title="行业里面优秀的 ESlint 规范实践"></a>行业里面优秀的 ESlint 规范实践</h2><ul><li><p>Airbnb</p><ul><li>eslint-config-airbnb</li><li>selint-config-airbnb-base</li></ul></li><li><p>腾讯</p><ul><li>alloyteam 团队<ul><li>eslint-config-alloy[<a href="https://github.com/AlloyTeam/eslint-config-alloy]">https://github.com/AlloyTeam/eslint-config-alloy]</a></li></ul></li><li>ivweb 团队<ul><li>eslint-config-ivweb[<a href="https://github.com/feflow/eslint-config-ivweb]">https://github.com/feflow/eslint-config-ivweb]</a></li></ul></li></ul></li></ul><h2 id="指定团队-ESLint-规范"><a href="#指定团队-ESLint-规范" class="headerlink" title="指定团队 ESLint 规范"></a>指定团队 ESLint 规范</h2><ul><li>不重复造轮子<ul><li>基于 eslint:recommend 配置并改进</li></ul></li><li>能够帮助发现代码错误的规则，全部开启</li><li>帮助保持团队的代码风格统一，而不是限制开发体验</li></ul><table><thead><tr><th>规则名</th><th>错误级别</th><th>说明</th></tr></thead><tbody><tr><td>for-direction</td><td>error</td><td>for 循环方向要求必须正确</td></tr><tr><td>getter-return</td><td>error</td><td>getter必须有返回值，并且禁止返回值为 undefined，如 <code>return;</code></td></tr><tr><td>no-await-in-loop</td><td>off</td><td>允许在循环里面使用 await</td></tr><tr><td>no-console</td><td>off</td><td>允许在代码里面使用 console</td></tr><tr><td>no-prototype-builtins</td><td>warn</td><td>直接调用对象原型链上的方法</td></tr><tr><td>valid-jsdoc</td><td>off</td><td>函数注释一定要遵守 jsdoc 规则</td></tr><tr><td>no-template-curly-in-string</td><td>warn</td><td>在字符串里面出现（和）进行警告</td></tr><tr><td>accessor-pairs</td><td>warn</td><td>getter 和 setter 没有成对出现时给出警告</td></tr><tr><td>array-callback-return</td><td>error</td><td>对于数据相关操作函数如 reduce、map、filter 等，callback 必须有 return</td></tr><tr><td>block-scoped-var</td><td>error</td><td>把  var 关键字看成块级作用域，放置变量提升导致的 bug</td></tr><tr><td>class-methods-use-this</td><td>error</td><td>要求在 class 中合理使用 this，如果某个方法没有使用 this，应该声明为静态方法</td></tr><tr><td>complexity</td><td>off</td><td>关闭代码复杂度限制</td></tr><tr><td>default-case</td><td>error</td><td>switch-case 语句里面一定需要 default 分支</td></tr></tbody></table><h2 id="如何执行落地？"><a href="#如何执行落地？" class="headerlink" title="如何执行落地？"></a>如何执行落地？</h2><p>![image-20220605180239619](从零搭建react + webpack项目/image-20220605180239619.png)</p><ul><li><p>和 CI/CD 系统集成(<strong><u>webpack 与 CI/CD</u></strong>)</p><ul><li><p>本地开发阶段增加，增加 prcommit 钩子</p><ul><li><p>安装 husky <code>npm install husky --save-dev</code>    </p></li><li><p>增加 npm script 通过 <code>lint-staged</code> 增量检查修改的文件</p></li></ul></li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">"sciprts" :&#123;</span><br><span class="line">    "precommit": "lingt-staged"</span><br><span class="line">&#125;,</span><br><span class="line">"lint-staged": &#123;</span><br><span class="line">    "linters": &#123;</span><br><span class="line">        "*.&#123;js,scss&#125;": ["eslint --fix", "git add"]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>和 webpack 集成（<strong><u>webpack 与 ESLint</u></strong>）<ul><li>使用 <code>eslint-loader</code> 构建时检查 JS 规范</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                exclude:<span class="regexp">/node_modules/</span>,</span><br><span class="line">                use:[</span><br><span class="line">                    <span class="string">'babel-loader'</span>,</span><br><span class="line">                    <span class="string">'eslint-loader'</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用（eslint-config-airbnb）"><a href="#使用（eslint-config-airbnb）" class="headerlink" title="使用（eslint-config-airbnb）"></a>使用（eslint-config-airbnb）</h2><ul><li>安装 eslint (此为 react 项目，若是其他项目需要根据文档进行对应配置)</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add eslint eslint-config-airbnb eslint-import-resolver-webpack eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react eslint-plugin-react-hooks eslint-webpack-plugin -D</span><br></pre></td></tr></table></figure><ul><li>安装解释器</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add babel-eslint -D</span><br></pre></td></tr></table></figure><ul><li>创建 eslint 配置文件 <code>.eslintrc.js</code><ul><li>extends 继承自一个或者多个（字符串或者数组）</li><li>env 配置指定环境，true 为启动</li><li>rules 可以修改规则</li><li>settings 部分是对 webpack alias 部分的补充（若不设置，会报错，eslint 找不到该目录）</li></ul></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install babel-elint -D</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="string">"extends"</span>: <span class="string">'airbnb'</span>,</span><br><span class="line">  <span class="string">"env"</span>: &#123;</span><br><span class="line">    <span class="string">"browser"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"es2021"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"parserOptions"</span>: &#123;</span><br><span class="line">    <span class="string">"ecmaVersion"</span>: <span class="number">12</span>,</span><br><span class="line">    <span class="string">"sourceType"</span>: <span class="string">"module"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"settings"</span>: &#123;</span><br><span class="line">    <span class="string">"import/resolver"</span>: &#123;</span><br><span class="line">      webpack: &#123;</span><br><span class="line">        config: path.join(__dirname, <span class="string">'./webpack.dev.js'</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>webpack 中设置</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="keyword">new</span> ESLintWebpackPlugin(&#123;</span><br><span class="line">            extensions: [<span class="string">"js"</span>, <span class="string">"jsx"</span>],</span><br><span class="line">            exclude: <span class="string">"node_modules"</span>,</span><br><span class="line">            fix: <span class="literal">true</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></style></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;初始化项目&quot;&gt;&lt;a href=&quot;#初始化项目&quot; class=&quot;headerlink&quot; title=&quot;初始化项目&quot;&gt;&lt;/a&gt;初始化项目&lt;/h1&gt;&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir my-react&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd my-react&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&quot;安装-webpack&quot;&gt;&lt;a href=&quot;#安装-webpack&quot; class=&quot;headerlink&quot; title=&quot;安装 webpack&quot;&gt;&lt;/a&gt;安装 webpack&lt;/h1&gt;&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install webpack webpack-cli --save-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&quot;最简单的案例&quot;&gt;&lt;a href=&quot;#最简单的案例&quot; class=&quot;headerlink&quot; title=&quot;最简单的案例&quot;&gt;&lt;/a&gt;最简单的案例&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;创建配置文件 &lt;code&gt;webpack.config.js&lt;/code&gt; 文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt; 目录下创建 &lt;code&gt;index.js&lt;/code&gt; 、 &lt;code&gt;HelloWorld.js&lt;/code&gt; 文件&lt;ul&gt;
&lt;li&gt;index.js 文件中引入 HelloWorld 函数直接打印出来&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>React 之 useEffect</title>
    <link href="https://yanadev.github.io/2022/05/29/React%20%E4%B9%8B%20useEffect/"/>
    <id>https://yanadev.github.io/2022/05/29/React%20%E4%B9%8B%20useEffect/</id>
    <published>2022-05-28T16:53:37.000Z</published>
    <updated>2022-05-28T17:12:26.527Z</updated>
    
    <content type="html"><![CDATA[<h1 id="useEffect"><a href="#useEffect" class="headerlink" title="useEffect"></a>useEffect</h1><p><strong>支持在不写 class 的情况下使用 state 以及其他 react 特性</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useEffect(fn[,key[] ] )</span><br><span class="line"><span class="comment">// 后一个参数是一个数组对象，当且仅当 数组中的对象更改时更新</span></span><br></pre></td></tr></table></figure><h1 id="无需清除的-effect"><a href="#无需清除的-effect" class="headerlink" title="无需清除的 effect"></a>无需清除的 effect</h1><p>在 React 更新 dom 之后运行一些额外的代码：</p><ul><li>发送网络请求</li><li>手动变更 dom</li><li>记录日志</li><li>…</li></ul><a id="more"></a><hr><ul><li>若使用 class 需要在 <strong>componentDidMount</strong> 和 <strong>componentDidUpdate</strong> 两个周期函数中编写 <strong>重复的代码</strong></li><li>使用 hook：<ul><li><code>useEffect(()=&gt;{ })</code> 即可在额按成渲染之后执行某些操作</li><li>默认情况下，每次渲染后都会执行</li><li>可在 useEffect 中获取到最新的 state 值 </li></ul></li></ul><h1 id="需要清除的-effect"><a href="#需要清除的-effect" class="headerlink" title="需要清除的 effect"></a>需要清除的 effect</h1><p>有一些副作用是需要清除的：</p><ul><li>订阅外部数据源</li></ul><hr><ul><li><p>class</p><ul><li>通常在 componentDidMount 中订阅</li><li>在 componentWillUnmount 中清除</li></ul></li><li><p>hook</p><ul><li>由于添加和删除订阅代码的紧密型，所以 useEffect 设计在同一个地方进行</li><li>若 effect 返回一个函数，React 会在执行清除操作的时候调用它</li><li>因此，在 useEffect 中调用订阅函数，返回删除订阅函数即可（组件卸载的时候会执行清除操作）</li></ul></li></ul><h1 id="使用注意"><a href="#使用注意" class="headerlink" title="使用注意"></a>使用注意</h1><p><strong>使用 Hook</strong> 其中一个目的就是要解决 <strong>class 中生命周期经常包含相关的逻辑</strong></p><p>Hook 允许我们根据代码的用途分离它们，而不是按照生命周期那样</p><p>React 按照 effect 声明的顺序一次调用组件中每一个 effect</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;useEffect&quot;&gt;&lt;a href=&quot;#useEffect&quot; class=&quot;headerlink&quot; title=&quot;useEffect&quot;&gt;&lt;/a&gt;useEffect&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;支持在不写 class 的情况下使用 state 以及其他 react 特性&lt;/strong&gt;&lt;/p&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;useEffect(fn[,key[] ] )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 后一个参数是一个数组对象，当且仅当 数组中的对象更改时更新&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&quot;无需清除的-effect&quot;&gt;&lt;a href=&quot;#无需清除的-effect&quot; class=&quot;headerlink&quot; title=&quot;无需清除的 effect&quot;&gt;&lt;/a&gt;无需清除的 effect&lt;/h1&gt;&lt;p&gt;在 React 更新 dom 之后运行一些额外的代码：&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;发送网络请求&lt;/li&gt;
&lt;li&gt;手动变更 dom&lt;/li&gt;
&lt;li&gt;记录日志&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="useEffect" scheme="https://yanadev.github.io/categories/useEffect/"/>
    
      <category term="React" scheme="https://yanadev.github.io/categories/useEffect/React/"/>
    
      <category term="react-router-dom" scheme="https://yanadev.github.io/categories/useEffect/React/react-router-dom/"/>
    
    
      <category term="React" scheme="https://yanadev.github.io/tags/React/"/>
    
      <category term="useEffect" scheme="https://yanadev.github.io/tags/useEffect/"/>
    
      <category term="react-router-dom" scheme="https://yanadev.github.io/tags/react-router-dom/"/>
    
  </entry>
  
  <entry>
    <title>React 之 react-router-dom</title>
    <link href="https://yanadev.github.io/2022/05/28/React%20%E4%B9%8B%20react-router-dom/"/>
    <id>https://yanadev.github.io/2022/05/28/React%20%E4%B9%8B%20react-router-dom/</id>
    <published>2022-05-28T09:01:37.000Z</published>
    <updated>2022-08-15T11:21:37.859Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 从 5 开始就放弃了原有的 react-router 库，统一命名为 react-router-dom</span><br><span class="line">npm install react-router-dom</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="全局路由模式"><a href="#全局路由模式" class="headerlink" title="全局路由模式"></a>全局路由模式</h2><ul><li><strong><code>HashRouter</code></strong> URL 使用<code>hash(#)</code> 来创建路由<ul><li><a href="http://www.example.com/#/" target="_blank" rel="noopener">www.example.com/#/</a></li></ul></li><li><strong><code>BrowserRouter</code></strong> 采用真实的 URL 资源</li></ul><a id="more"></a><p>入口文件 index.js 中引入路由</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom/client'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./index.css'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</span><br><span class="line">+<span class="keyword">import</span> &#123; BrowserRouter &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> root = ReactDOM.createRoot(<span class="built_in">document</span>.getElementById(<span class="string">'root'</span>));</span><br><span class="line">root.render(</span><br><span class="line">  &lt;React.StrictMode&gt;</span><br><span class="line">+    <span class="xml"><span class="tag">&lt;<span class="name">BrowserRouter</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="xml">+    <span class="tag">&lt;/<span class="name">BrowserRouter</span>&gt;</span></span></span><br><span class="line">  &lt;<span class="regexp">/React.StrictMode&gt;</span></span><br><span class="line"><span class="regexp">);</span></span><br></pre></td></tr></table></figure><h1 id="常用路由组件和hooks"><a href="#常用路由组件和hooks" class="headerlink" title="常用路由组件和hooks"></a>常用路由组件和hooks</h1><table><thead><tr><th>组件名</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td><routers></routers></td><td>一组路由</td><td>代替原来 Switch，所有子路由都用基础的 Router children 来表示</td></tr><tr><td><router></router></td><td>基础路由</td><td>Router 可嵌套，解决了原有 v5 中严格模式</td></tr><tr><td><link></td><td>导航组件</td><td>在实际页面中跳转使用</td></tr><tr><td><outlet></outlet></td><td>自适应渲染组件</td><td>根据实际路由 <code>url</code> 去自动选择组件</td></tr></tbody></table><table><thead><tr><th>hooks名</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>useParams</td><td>返回当前参数</td><td>根据路径读取参数</td></tr><tr><td>useNavigate</td><td>返回当前路由</td><td>代替原有 v5 中的 useHistory</td></tr><tr><td>useOutlet</td><td>返回根据路由生成的 element</td><td></td></tr><tr><td>useLocation</td><td>返回当前 location 对象</td><td></td></tr><tr><td>useRoutes</td><td>同 Routers 组件一样，只不过是在 js 中使用</td><td></td></tr><tr><td>useSearchParams</td><td>用来匹配 URL 中 <code>？</code> 后面的搜索参数</td><td></td></tr></tbody></table><h1 id="组件直接使用"><a href="#组件直接使用" class="headerlink" title="组件直接使用"></a>组件直接使用</h1><ul><li>Route 必须包裹在 Routes 里面使用（配置路由）</li><li>Link 相当于 a 标签，跳转对应页面</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Routes&gt;</span><br><span class="line">    &lt;Route path=<span class="string">"/"</span> element=&#123;&lt;Home /&gt;&#125; /&gt;</span><br><span class="line">    &lt;Route path=<span class="string">"/about"</span> element=&#123;&lt;About /&gt;&#125; /&gt;</span><br><span class="line">&lt;<span class="regexp">/Routes&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;Link to="/</span><span class="string">"&gt;home&lt;/Link&gt;</span></span><br><span class="line"><span class="string">&lt;Link to="</span>/about<span class="string">"&gt;about&lt;/Link&gt;</span></span><br></pre></td></tr></table></figure><h1 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h1><ul><li>Route 组件中包裹着多个 Route</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Routes&gt;</span><br><span class="line">  &lt;Route path=<span class="string">"user"</span> element=&#123;&lt;Users /&gt;&#125;&gt;</span><br><span class="line">    &lt;Route path=<span class="string">":id"</span> element=&#123;&lt;UserDetail /&gt;&#125; /&gt;</span><br><span class="line">    &lt;Route path=<span class="string">"create"</span> element=&#123;&lt;NewUser /&gt;&#125; /&gt;</span><br><span class="line">  &lt;<span class="regexp">/Route&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>Routes&gt;</span><br></pre></td></tr></table></figure><ul><li>index 指定默认路由（多个子路由情况下）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Routes&gt;</span><br><span class="line">  &lt;Route path=<span class="string">"/"</span> element=&#123;&lt;Layout /&gt;&#125;&gt;</span><br><span class="line">    &lt;Route index element=&#123;&lt;About /&gt;&#125; /&gt;</span><br><span class="line">    &lt;Route path=<span class="string">"user"</span> element=&#123;&lt;User /&gt;&#125; /&gt;</span><br><span class="line">    &lt;Route path=<span class="string">"about"</span> element=&#123;&lt;About /&gt;&#125; /&gt;</span><br><span class="line">  &lt;<span class="regexp">/Route&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>Routes&gt;</span><br></pre></td></tr></table></figure><ul><li>outlet 预留坑位渲染嵌套路由</li></ul><h1 id="路由通配符"><a href="#路由通配符" class="headerlink" title="路由通配符"></a>路由通配符</h1><ul><li>* 只能在 / 后面使用，不可在实际路径中间</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/home</span><br><span class="line">/home/admin</span><br><span class="line">/users/:id</span><br><span class="line">/users/:id/messages</span><br><span class="line">/files<span class="comment">/*</span></span><br><span class="line"><span class="comment">/files/:id/*</span></span><br></pre></td></tr></table></figure><ul><li><code>NotFound</code> 类路由，可以用 * 替代</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Routes&gt;</span><br><span class="line">  &lt;Route path=<span class="string">"/"</span> element=&#123;&lt;Home /&gt;&#125; /&gt;</span><br><span class="line">  &lt;Route path=<span class="string">"dashboard"</span> element=&#123;&lt;Dashboard /&gt;&#125; /&gt;</span><br><span class="line">  &lt;Route path=<span class="string">"*"</span> element=&#123;&lt;NotFound /&gt;&#125; /&gt;</span><br><span class="line">&lt;<span class="regexp">/Routes&gt;</span></span><br></pre></td></tr></table></figure><h1 id="获取参数-useParams-和-useSearchParams"><a href="#获取参数-useParams-和-useSearchParams" class="headerlink" title="获取参数 useParams 和 useSearchParams"></a>获取参数 <code>useParams</code> 和 <code>useSearchParams</code></h1><ul><li><code>useParams()</code> 直接返回 param 对象</li><li><code>useSearchParams()</code> 返回一个 <code>包含 searchParams 对象、setSearchParams 方法</code> 的对象<ul><li>可使用 <code>searchParams.get(key)</code> 获得参数</li><li><code>setSearchParams({key: value})</code> 来改变路由</li></ul></li></ul><h1 id="useNavigate"><a href="#useNavigate" class="headerlink" title="useNavigate"></a><code>useNavigate</code></h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//js写法</span></span><br><span class="line"><span class="keyword">let</span> navigate = useNavigate();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleClick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    navigate(<span class="string">"/home"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//组件写法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Navigate</span> <span class="attr">to</span>=<span class="string">"/home"</span> <span class="attr">replace</span> <span class="attr">state</span>=<span class="string">&#123;state&#125;</span> /&gt;</span>;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">//替代原有的go goBack和goForward</span></span><br><span class="line">&lt;button onClick=&#123;() =&gt; navigate(-2)&#125;&gt;</span><br><span class="line">    Go 2 pages back</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&lt;button onClick=&#123;() =&gt; navigate(-1)&#125;&gt;</span><br><span class="line">    Go back</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&lt;button onClick=&#123;() =&gt; navigate(1)&#125;&gt;</span><br><span class="line">Go forward</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&lt;button onClick=&#123;() =&gt; navigate(2)&#125;&gt;</span><br><span class="line">Go 2 pages forward</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="集中路由渲染"><a href="#集中路由渲染" class="headerlink" title="集中路由渲染"></a>集中路由渲染</h1><blockquote><p>需知：如要在父路由中显示嵌套路由中的子路由，需要引入 <code>react-router-dom</code> 库中的 <code>Outlet</code> 组件</p></blockquote><ul><li>入口文件 index.js 中引入 <code>BrowserRouter</code> ，启用全局路由 </li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom/client'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./index.css'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; BrowserRouter &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> root = ReactDOM.createRoot(<span class="built_in">document</span>.getElementById(<span class="string">'root'</span>));</span><br><span class="line">root.render(</span><br><span class="line">  &lt;React.StrictMode&gt;</span><br><span class="line">    &lt;BrowserRouter&gt;</span><br><span class="line">      &lt;App /&gt;</span><br><span class="line">    &lt;<span class="regexp">/BrowserRouter&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>React.StrictMode&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>新建 <code>src/router/index.js</code>，配置项目路由</li><li>引入 react 中的 lazy 方法，实现嵌套路由中的子组件的懒加载，减少首屏需要加载的数据量，避免首屏加载缓慢 </li><li>配合使用 Suspense 组件包裹在 lazy 方法返回值的 node，使用 fallback 属性，实现懒加载完毕后的消息提醒</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; lazy, Suspense &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">const</span> CityList = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../pages/CityList"</span>));</span><br><span class="line"><span class="keyword">const</span> AppLayout = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/AppLayout'</span>));</span><br><span class="line"><span class="keyword">const</span> Index = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">"../pages/Index"</span>));</span><br><span class="line"><span class="keyword">const</span> News = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/News'</span>));</span><br><span class="line"><span class="keyword">const</span> lazyLoad = <span class="function">(<span class="params">children</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Suspense</span> <span class="attr">fallback</span>=<span class="string">&#123;</span>&lt;&gt;</span>Loading<span class="tag">&lt;/&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="xml">    &#123;children&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">Suspense</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    element: <span class="xml"><span class="tag">&lt;<span class="name">AppLayout</span> /&gt;</span>,</span></span><br><span class="line"><span class="xml">    children: [</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        path: '/index',</span></span><br><span class="line"><span class="xml">        element: lazyLoad(<span class="tag">&lt;<span class="name">Index</span> /&gt;</span>)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        path: '/news',</span></span><br><span class="line"><span class="xml">        element: lazyLoad(<span class="tag">&lt;<span class="name">News</span> /&gt;</span>)</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    ]</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">  &#123;</span></span><br><span class="line"><span class="xml">    path: '/cityList',</span></span><br><span class="line"><span class="xml">    element: <span class="tag">&lt;<span class="name">CityList</span> /&gt;</span></span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">];</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">export &#123; routes &#125;;</span></span><br></pre></td></tr></table></figure><ul><li>根组件 App.js 中引入 <code>编写好的 routes</code> </li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// App.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRoutes &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; routes &#125; <span class="keyword">from</span> <span class="string">'./router/index'</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> useRoutes(routes);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><h2 id="懒加载（异步加载）"><a href="#懒加载（异步加载）" class="headerlink" title="懒加载（异步加载）"></a>懒加载（异步加载）</h2><ul><li>优化应用的启动速度，首屏加载的速度有明显提升（首屏不需要的组件，直到使用的那一刻才会加载）</li><li>导致了闪屏（加载对应页面需要等待一段时间，网络质量越差，该现象越明显）</li></ul><p>使用了react库中的 lazy 配合 Suspense（本质是 promise）</p><p>根组件 App.js 中使用 Suspense 组件包裹</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; lazy, Suspense &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> AppLayout = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/AppLayout'</span>));</span><br><span class="line"><span class="keyword">const</span> Home = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/Home'</span>));</span><br><span class="line"><span class="keyword">const</span> CityList = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/CityList'</span>));</span><br><span class="line"><span class="keyword">const</span> News = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/News'</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    element: <span class="xml"><span class="tag">&lt;<span class="name">AppLayout</span> /&gt;</span>,</span></span><br><span class="line"><span class="xml">    children: [</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        index: true,</span></span><br><span class="line"><span class="xml">        element: <span class="tag">&lt;<span class="name">Home</span> /&gt;</span></span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        path: 'news',</span></span><br><span class="line"><span class="xml">        element: <span class="tag">&lt;<span class="name">News</span> /&gt;</span></span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    ]</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">  &#123;</span></span><br><span class="line"><span class="xml">    path: '/citylist',</span></span><br><span class="line"><span class="xml">    element: <span class="tag">&lt;<span class="name">CityList</span> /&gt;</span></span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">];</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">export &#123; routes &#125;;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UI组件库: antd-mobile</span></span><br><span class="line"><span class="keyword">import</span> &#123; Button &#125; <span class="keyword">from</span> <span class="string">'antd-mobile'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; routes &#125; <span class="keyword">from</span> <span class="string">'./router/index'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRoutes &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Suspense &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> element = useRoutes(routes);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;Suspense fallback=&#123;&lt;&gt;loading&lt;<span class="regexp">/&gt;&#125;&gt;</span></span><br><span class="line"><span class="regexp">      &#123;element&#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>Suspense&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><h2 id="避免闪屏"><a href="#避免闪屏" class="headerlink" title="避免闪屏"></a>避免闪屏</h2><ul><li>父路由使用直接加载的方式载入</li><li>子路由使用懒加载的方式来载入</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* src/router/index.js */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; lazy, Suspense &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> AppLayout <span class="keyword">from</span> <span class="string">'../pages/AppLayout'</span>;</span><br><span class="line"><span class="keyword">const</span> Home = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/Home'</span>));</span><br><span class="line"><span class="keyword">const</span> CityList = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/CityList'</span>));</span><br><span class="line"><span class="keyword">const</span> News = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/News'</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> lazyLoad = <span class="function">(<span class="params">children</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Suspense</span> <span class="attr">fallback</span>=<span class="string">&#123;</span>&lt;&gt;</span>Loading...<span class="tag">&lt;/&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="xml">    &#123;children&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">Suspense</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    element: <span class="xml"><span class="tag">&lt;<span class="name">AppLayout</span> /&gt;</span>,</span></span><br><span class="line"><span class="xml">    children: [</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        index: true,</span></span><br><span class="line"><span class="xml">        element: lazyLoad(<span class="tag">&lt;<span class="name">Home</span> /&gt;</span>)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        path: 'news',</span></span><br><span class="line"><span class="xml">        element: lazyLoad(<span class="tag">&lt;<span class="name">News</span> /&gt;</span>)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        path: 'citylist',</span></span><br><span class="line"><span class="xml">        element: lazyLoad(<span class="tag">&lt;<span class="name">CityList</span> /&gt;</span>)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">    ]</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">];</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">export &#123; routes &#125;;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* /src/App.js */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UI组件库: antd-mobile</span></span><br><span class="line"><span class="keyword">import</span> &#123; Button &#125; <span class="keyword">from</span> <span class="string">'antd-mobile'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; routes &#125; <span class="keyword">from</span> <span class="string">'./router/index'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRoutes &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> element = useRoutes(routes);</span><br><span class="line">  <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><h2 id="路由监听（守卫）"><a href="#路由监听（守卫）" class="headerlink" title="路由监听（守卫）"></a>路由监听（守卫）</h2><ul><li><p><code>useEffect</code> 该 Hook 类似生命周期函数 <code>componentWillUnmount</code>、<code>componentDidMount</code> 和 <code>componentDidUpdate</code>（可看做是三者的结合）</p><ul><li>useEffect 支持你在<code>函数组件</code>（该概念区别于<code>类组件</code>）中执行副作用操作<ul><li>数据获取</li><li>设置订阅</li><li>手动更改 React 组件中的 DOM</li></ul></li><li>参数一：处理逻辑</li><li>参数二：依赖的数据源<code>[&#39;data&#39;]</code></li><li>该 Hook 解决了 <code>类组件中经常将不相关的逻辑放在同一个生命周期函数中，将相关的逻辑分离在多个不同的生命周期函数中</code> 的这个问题</li><li>通过使用多个 <code>useEffect</code> 来分离这些需要在各个生命周期函数中处理的逻辑</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UI组件库: antd-mobile</span></span><br><span class="line"><span class="keyword">import</span> &#123; Button &#125; <span class="keyword">from</span> <span class="string">'antd-mobile'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; routes &#125; <span class="keyword">from</span> <span class="string">'./router/index'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRoutes, useLocation &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Suspense, useEffect &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> location = useLocation();</span><br><span class="line">  useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(location.pathname, <span class="string">'enter: 路由前置守卫'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(location.pathname, <span class="string">'leave: 路由后置守卫'</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;, [location.pathname]);</span><br><span class="line">  <span class="keyword">let</span> element = useRoutes(routes);</span><br><span class="line">  <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure></li><li><p>useState 该 Hook ，通过数组解构可在 <code>函数组件</code> 中实现类似 <code>setState()</code> 的效果</p><ul><li><code>const [count, setCount] = useState(&#39;banana&#39;)</code></li><li>通过 <code>setCount(new value)</code> 来实现状态更新</li></ul></li><li><p>将 <code>路由监听操作</code> 封装成一个函数传递给 App.js 根组件</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* /src/router/index.js  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; lazy, Suspense &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; matchRoutes &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> AppLayout <span class="keyword">from</span> <span class="string">'../pages/AppLayout'</span>;</span><br><span class="line"><span class="keyword">import</span> NotFound <span class="keyword">from</span> <span class="string">'../pages/NotFound'</span>;</span><br><span class="line"><span class="keyword">const</span> Home = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/Home'</span>));</span><br><span class="line"><span class="keyword">const</span> CityList = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/CityList'</span>));</span><br><span class="line"><span class="keyword">const</span> News = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/News'</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> lazyLoad = <span class="function">(<span class="params">children</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Suspense</span> <span class="attr">fallback</span>=<span class="string">&#123;</span>&lt;&gt;</span>Loading...<span class="tag">&lt;/&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="xml">    &#123;children&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">Suspense</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    element: <span class="xml"><span class="tag">&lt;<span class="name">AppLayout</span> /&gt;</span>,</span></span><br><span class="line"><span class="xml">    children: [</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        index: true,</span></span><br><span class="line"><span class="xml">        element: lazyLoad(<span class="tag">&lt;<span class="name">Home</span> /&gt;</span>)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        path: 'news',</span></span><br><span class="line"><span class="xml">        element: lazyLoad(<span class="tag">&lt;<span class="name">News</span> /&gt;</span>)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        path: 'citylist',</span></span><br><span class="line"><span class="xml">        element: lazyLoad(<span class="tag">&lt;<span class="name">CityList</span> /&gt;</span>)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">    ]</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">  &#123;</span></span><br><span class="line"><span class="xml">    path: '/404',</span></span><br><span class="line"><span class="xml">    element: <span class="tag">&lt;<span class="name">NotFound</span> /&gt;</span></span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">];</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">const routerListener = (path, navigator) =&gt; &#123;</span></span><br><span class="line"><span class="xml">  return () =&gt; &#123;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    const isMatch = matchRoutes(routes, path);</span></span><br><span class="line"><span class="xml">    if (!isMatch) &#123;</span></span><br><span class="line"><span class="xml">      navigator('/404');</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    console.log(path, 'enter: routerEnterEvent');</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    return () =&gt; &#123;</span></span><br><span class="line"><span class="xml">      console.log(path, 'leave: routerLeaveEvent');</span></span><br><span class="line"><span class="xml">    &#125;;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  &#125;;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">export &#123; routes, routerListener &#125;;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* App.js */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UI组件库: antd-mobile</span></span><br><span class="line"><span class="keyword">import</span> &#123; Button &#125; <span class="keyword">from</span> <span class="string">'antd-mobile'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; routes, routerListener &#125; <span class="keyword">from</span> <span class="string">'./router/index'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRoutes, useLocation, useNavigate &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useEffect, useState &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> location = useLocation();</span><br><span class="line">  <span class="keyword">const</span> navigator = useNavigate();</span><br><span class="line">  <span class="keyword">let</span> [pathname, setPathname] = useState(location.pathname);</span><br><span class="line"></span><br><span class="line">  useEffect(</span><br><span class="line">    routerListener(pathname, navigator),</span><br><span class="line">    [pathname]</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> element = useRoutes(routes);</span><br><span class="line">  <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 从 5 开始就放弃了原有的 react-router 库，统一命名为 react-router-dom&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install react-router-dom&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h1&gt;&lt;h2 id=&quot;全局路由模式&quot;&gt;&lt;a href=&quot;#全局路由模式&quot; class=&quot;headerlink&quot; title=&quot;全局路由模式&quot;&gt;&lt;/a&gt;全局路由模式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;HashRouter&lt;/code&gt;&lt;/strong&gt; URL 使用&lt;code&gt;hash(#)&lt;/code&gt; 来创建路由&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.example.com/#/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;www.example.com/#/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;BrowserRouter&lt;/code&gt;&lt;/strong&gt; 采用真实的 URL 资源&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="路由" scheme="https://yanadev.github.io/categories/%E8%B7%AF%E7%94%B1/"/>
    
      <category term="react-router-dom" scheme="https://yanadev.github.io/categories/%E8%B7%AF%E7%94%B1/react-router-dom/"/>
    
      <category term="v6" scheme="https://yanadev.github.io/categories/%E8%B7%AF%E7%94%B1/react-router-dom/v6/"/>
    
      <category term="react" scheme="https://yanadev.github.io/categories/%E8%B7%AF%E7%94%B1/react-router-dom/v6/react/"/>
    
    
      <category term="react-router-dom" scheme="https://yanadev.github.io/tags/react-router-dom/"/>
    
      <category term="路由" scheme="https://yanadev.github.io/tags/%E8%B7%AF%E7%94%B1/"/>
    
      <category term="v6" scheme="https://yanadev.github.io/tags/v6/"/>
    
      <category term="react" scheme="https://yanadev.github.io/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>CSS 之 box-sizing 盒模型</title>
    <link href="https://yanadev.github.io/2022/05/28/CSS%20%E4%B9%8B%20box-sizing%20%E7%9B%92%E6%A8%A1%E5%9E%8B/"/>
    <id>https://yanadev.github.io/2022/05/28/CSS%20%E4%B9%8B%20box-sizing%20%E7%9B%92%E6%A8%A1%E5%9E%8B/</id>
    <published>2022-05-27T19:16:25.000Z</published>
    <updated>2022-05-27T19:17:28.759Z</updated>
    
    <content type="html"><![CDATA[<h1 id="content-box"><a href="#content-box" class="headerlink" title="content-box"></a>content-box</h1><p>元素的 width/height 不包含 padding、border，与标准盒子模型表现一致</p><h1 id="border-box"><a href="#border-box" class="headerlink" title="border-box"></a>border-box</h1><p>width/height 包含 padding、border，与（IE）怪异盒子模型表现一致</p><h1 id="inherit"><a href="#inherit" class="headerlink" title="inherit"></a>inherit</h1><p>指定 box-sizing 属性的值，从父元素继承</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;content-box&quot;&gt;&lt;a href=&quot;#content-box&quot; class=&quot;headerlink&quot; title=&quot;content-box&quot;&gt;&lt;/a&gt;content-box&lt;/h1&gt;&lt;p&gt;元素的 width/height 不包含 padding、borde
      
    
    </summary>
    
    
      <category term="box-sizing" scheme="https://yanadev.github.io/categories/box-sizing/"/>
    
      <category term="border-box" scheme="https://yanadev.github.io/categories/box-sizing/border-box/"/>
    
      <category term="content-box" scheme="https://yanadev.github.io/categories/box-sizing/border-box/content-box/"/>
    
      <category term="inherit" scheme="https://yanadev.github.io/categories/box-sizing/border-box/content-box/inherit/"/>
    
    
      <category term="box-sizing" scheme="https://yanadev.github.io/tags/box-sizing/"/>
    
      <category term="border-box" scheme="https://yanadev.github.io/tags/border-box/"/>
    
      <category term="content-box" scheme="https://yanadev.github.io/tags/content-box/"/>
    
      <category term="inherit" scheme="https://yanadev.github.io/tags/inherit/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yanadev.github.io/2022/05/26/React%20%E5%AE%9E%E6%88%98%20-%20%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://yanadev.github.io/2022/05/26/React%20%E5%AE%9E%E6%88%98%20-%20%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2022-05-25T20:05:30.846Z</published>
    <updated>2022-05-25T20:32:40.920Z</updated>
    
    <content type="html"><![CDATA[<h1 id="admins"><a href="#admins" class="headerlink" title="admins"></a>admins</h1><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center">id</td><td align="center">int(11)</td><td align="center">否</td><td align="center">管理员 id</td></tr><tr><td align="center">user_name</td><td align="center">varchar(255)</td><td align="center">是</td><td align="center">管理员名称</td></tr><tr><td align="center">user_pass</td><td align="center">varchar(255)</td><td align="center">是</td><td align="center">管理员密码</td></tr><tr><td align="center">createdAt</td><td align="center">datetime</td><td align="center">否</td><td align="center">创建时间</td></tr><tr><td align="center">updatedAt</td><td align="center">datetime</td><td align="center">否</td><td align="center">更新时间</td></tr></tbody></table><a id="more"></a><h1 id="areas"><a href="#areas" class="headerlink" title="areas"></a>areas</h1><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"># characteristic</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"># cities</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"># collections</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"># decorations</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"># devices</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"># houses</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"># orienteds</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"># roomtypes</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"># statuses</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"># subways</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"># users</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">字段名称</th><th align="center">数据类型</th><th align="center">是否可空</th><th align="center">字段描述</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;admins&quot;&gt;&lt;a href=&quot;#admins&quot; class=&quot;headerlink&quot; title=&quot;admins&quot;&gt;&lt;/a&gt;admins&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;字段名称&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;数据类型&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;是否可空&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;字段描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;id&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;int(11)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;否&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;管理员 id&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;user_name&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;varchar(255)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;是&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;管理员名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;user_pass&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;varchar(255)&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;是&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;管理员密码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;createdAt&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;datetime&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;否&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;创建时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;updatedAt&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;datetime&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;否&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;更新时间&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://yanadev.github.io/2022/05/26/React%20%E5%AE%9E%E6%88%98/"/>
    <id>https://yanadev.github.io/2022/05/26/React%20%E5%AE%9E%E6%88%98/</id>
    <published>2022-05-25T19:36:04.102Z</published>
    <updated>2022-07-04T18:30:14.823Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><ul><li>初始化项目</li><li>使用 antd-mobile 组件库</li><li>完成项目整体布局</li><li>首页轮播图</li><li>使用百度地图 API 完成定位功能</li><li>使用 react-virtualized 完成城市选择功能</li></ul><h1 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h1><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><ul><li>租房app - 移动 web 端</li><li>在线租房项目，实现类似链家等项目功能，解决用户租房需求</li><li>核心业务：<ul><li>在线找房</li><li>用户登录</li><li>房源发布</li><li>…</li></ul></li></ul><a id="more"></a><h2 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h2><ul><li>React 核心库：react、react-dom、react-router-dom</li><li>脚手架： create-react-app</li><li>数据请求：axios</li><li>UI 组件库： ant-mobile</li><li>其他组件库：react-virtualized、formik+yuk、react-spring 等</li><li>百度地图 API</li></ul><h2 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h2><ul><li>本地接口部署（数据库、接口）</li><li>使用脚手架初始化项目</li></ul><h3 id="本地接口部署-服务端"><a href="#本地接口部署-服务端" class="headerlink" title="本地接口部署(服务端)"></a>本地接口部署(服务端)</h3><h4 id="创建并导入数据，数据库名称-hkzf-（固定名称）"><a href="#创建并导入数据，数据库名称-hkzf-（固定名称）" class="headerlink" title="创建并导入数据，数据库名称 hkzf （固定名称）"></a>创建并导入数据，数据库名称 hkzf （固定名称）</h4><h4 id="双击创建连接，右键新建数据库"><a href="#双击创建连接，右键新建数据库" class="headerlink" title="双击创建连接，右键新建数据库"></a>双击创建连接，右键新建数据库</h4><p>![image-20220526034714704](React 实战/image-20220526034714704.png)</p><h4 id="输入数据库名称，选择字符集-utf-8"><a href="#输入数据库名称，选择字符集-utf-8" class="headerlink" title="输入数据库名称，选择字符集 utf-8"></a>输入数据库名称，选择字符集 utf-8</h4><p>![image-20220526034931579](React 实战/image-20220526034931579.png)</p><h4 id="右键运行-sql-文件，将写好的-sql-文件直接导入"><a href="#右键运行-sql-文件，将写好的-sql-文件直接导入" class="headerlink" title="右键运行 sql 文件，将写好的 sql 文件直接导入"></a>右键运行 sql 文件，将写好的 sql 文件直接导入</h4><p>![image-20220526040328551](React 实战/image-20220526040328551.png)</p><p>![image-20220526040503970](React 实战/image-20220526040503970.png)</p><p>![image-20220526041048979](React 实战/image-20220526041048979.png)</p><h4 id="打开-hkzf-v1-服务端项目，启动项目，若-数据库密码修改过的，需要在-config-mysql-js-中将-数据库密码修改，再-npm-start-启动项目"><a href="#打开-hkzf-v1-服务端项目，启动项目，若-数据库密码修改过的，需要在-config-mysql-js-中将-数据库密码修改，再-npm-start-启动项目" class="headerlink" title="打开 hkzf_v1 服务端项目，启动项目，若 数据库密码修改过的，需要在 /config/mysql.js 中将 数据库密码修改，再 npm start 启动项目"></a>打开 hkzf_v1 服务端项目，启动项目，若 数据库密码修改过的，需要在 /config/mysql.js 中将 数据库密码修改，再 <code>npm start</code> 启动项目</h4><p>![image-20220526043457589](React 实战/image-20220526043457589.png)</p><p>![image-20220526043516697](React 实战/image-20220526043516697.png)</p><h4 id="views-swagger-html-中修改一下库的链接"><a href="#views-swagger-html-中修改一下库的链接" class="headerlink" title="/views/swagger.html 中修改一下库的链接"></a>/views/swagger.html 中修改一下库的链接</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;script src="https://cdn.bootcss.com/swagger-ui/3.22.1/swagger-ui-bundle.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;script src="https://cdn.bootcss.com/swagger-ui/3.22.1/swagger-ui-standalone-preset.js"&gt; &lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcdn.net/ajax/libs/swagger-ui/3.22.1/swagger-ui-bundle.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcdn.net/ajax/libs/swagger-ui/3.22.1/swagger-ui-standalone-preset.js"</span>&gt;</span> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>![image-20220526044350045](React 实战/image-20220526044350045.png)</p><h3 id="项目启动完毕，访问本地-http-localhost-8080-端口即可查看接口文档"><a href="#项目启动完毕，访问本地-http-localhost-8080-端口即可查看接口文档" class="headerlink" title="项目启动完毕，访问本地 http://localhost:8080/ 端口即可查看接口文档"></a>项目启动完毕，访问本地 <code>http://localhost:8080/</code> 端口即可查看接口文档</h3><p>![image-20220704004820028](React 实战/image-20220704004820028.png)</p><h3 id="脚手架初始化本地项目"><a href="#脚手架初始化本地项目" class="headerlink" title="脚手架初始化本地项目"></a>脚手架初始化本地项目</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 脚手架初始化项目</span></span><br><span class="line">npx create-react-app hkzf_mobile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入项目根目录</span></span><br><span class="line">cd hkzf_mobile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动项目</span></span><br><span class="line">yarn run start</span><br></pre></td></tr></table></figure><p>![image-20220704153138415](React 实战/image-20220704153138415.png)</p><h1 id="初始项目结构"><a href="#初始项目结构" class="headerlink" title="初始项目结构"></a>初始项目结构</h1><ul><li>public 公共资源<ul><li>index.html 首页（必须）</li><li>manifest.json PWA 应用的元数据</li></ul></li><li>src 项目源码（功能代码）<ul><li>index.js 项目入口文件（必须）</li><li>App.js 项目根组件</li><li>App.test.js App 组件的测试文件</li><li>serviceWorker.js  用来实现 PWA（可选） </li></ul></li></ul><blockquote><p>PWA（Progressive Web Application），全称“渐进式网页应用”</p><p>即 <strong>可使网页通过某种方式达到离线使用</strong></p></blockquote><h1 id="调整项目结构（src目录）"><a href="#调整项目结构（src目录）" class="headerlink" title="调整项目结构（src目录）"></a>调整项目结构（src目录）</h1><ul><li><p>src</p><ul><li><p>App.js 根组件</p></li><li><p>index.css 全局样式</p></li><li><p>index.js 项目入口文件（渲染根组件、导入组件库等）</p></li><li><p>/assets 资源（图片、字体图标等）</p></li><li><p>/pages 页面</p></li><li><p>/components 公共组件</p></li><li><p>/utils 工具</p></li></ul></li></ul><p>![image-20220704153843877](React 实战/image-20220704153843877.png)</p><h1 id="连接远程仓库"><a href="#连接远程仓库" class="headerlink" title="连接远程仓库"></a>连接远程仓库</h1><ul><li>创建仓库</li><li><code>git remote add origin [仓库 ssh 链接]</code></li><li><code>git push -u origin [远程分支]</code><ul><li>若失败，执行 <code>git pull --allow-unrelated-histories origin main</code></li><li>自动合并，若存在冲突，需要手动选择本地仓库还是远程仓库</li></ul></li><li>项目目录调整完毕之后，保存更改后的文件（ctrl+s）</li><li>可查看本地提交状态 <code>git status</code></li><li>选择修改文件 <code>git add .</code></li><li>git commit -m ‘[输入你想要填写的提交信息]’</li><li>git push origin [需要推送的远程分支]</li></ul><p>![image-20220527041515608](React 实战/image-20220527041515608.png)</p><p>![image-20220527041534965](React 实战/image-20220527041534965.png)</p><p>![image-20220527041450958](React 实战/image-20220527041450958.png)</p><p>![image-20220527041927941](React 实战/image-20220527041927941.png)</p><h1 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h1><ul><li><p><code>package.json</code> 文件中已自定义脚本，可执行 对应脚本来启动项目</p><p>![image-20220704153951670](React 实战/image-20220704153951670.png)</p></li></ul><h1 id="项目准备-UI组件库"><a href="#项目准备-UI组件库" class="headerlink" title="项目准备 - UI组件库"></a>项目准备 - UI组件库</h1><h2 id="组件库-antd-mobile"><a href="#组件库-antd-mobile" class="headerlink" title="组件库 antd-mobile"></a>组件库 <code>antd-mobile</code></h2><blockquote><p>可依据对应版本的官方文档指引去安装</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add antd-mobile -D</span><br></pre></td></tr></table></figure><h2 id="自动引入实现按需加载"><a href="#自动引入实现按需加载" class="headerlink" title="自动引入实现按需加载"></a>自动引入实现按需加载</h2><p><strong><u>v5 版本不需要手动按需加载，构建工具的 tree-shaking 可将没有用到的组件剔除并最终打包</u></strong></p><ul><li><code>App.js</code> 根组件中导入使用即可（该组件库支持移动端，若是网页打开是一片空白）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// App.js 根组件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Button &#125; <span class="keyword">from</span> <span class="string">'antd-mobile'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=<span class="string">"App"</span>&gt;</span><br><span class="line">      React APP</span><br><span class="line">      &lt;Button color=<span class="string">'primary'</span> fill=<span class="string">'solid'</span>&gt;登录按钮&lt;<span class="regexp">/Button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><p>![image-20220704155446385](React 实战/image-20220704155446385.png)</p><h1 id="项目准备-配置路由"><a href="#项目准备-配置路由" class="headerlink" title="项目准备 - 配置路由"></a>项目准备 - 配置路由</h1><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><ul><li><p>安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add react-router-dom</span><br></pre></td></tr></table></figure></li><li><p>App.js 根组件中导入常用路由组件 <code>BrowserRouter</code>、<code>Routes</code>、<code>Route</code>、<code>Link</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 路由组件</span></span><br><span class="line"><span class="keyword">import</span> &#123; BrowserRouter <span class="keyword">as</span> Router, Route, Routes, Link &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br></pre></td></tr></table></figure></li><li><p>pages 目录下，创建两个组件 </p><ul><li><p>Home/index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Home</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="xml">      This is Home Pages</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/&gt;</span>;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>CityList/index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">CityList</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="xml">      This is CityList Page</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/&gt;</span>;</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>使用 Route 组件配置首页和城市选择页面（<code>所有的路由组件必须由 BrowserRouter 包裹</code>）</p><ul><li>Link 组件相当于 a 标签</li><li>Routes 包裹着多个 Route 组件，来配置路由路径，及对应的组件</li><li>使用 BrowserRouter 等高级 Router 来替代 Router，包裹所有的路由组件完成路由配置<ul><li>BrowserRouter <strong>一个使用 h5 history API 的 <router> （pushState、replaceState、popState 事件）</router></strong>，让 UI 与 URL 的同时，不需要发起对服务器的请求</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由组件</span></span><br><span class="line"><span class="keyword">import</span> &#123; BrowserRouter <span class="keyword">as</span> Router, Route, Routes, Link &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'./pages/Home/index'</span>;</span><br><span class="line"><span class="keyword">import</span> CityList <span class="keyword">from</span> <span class="string">'./pages/CityList/index'</span>;</span><br><span class="line"><span class="comment">// UI组件库: antd-mobile</span></span><br><span class="line"><span class="keyword">import</span> &#123; Button &#125; <span class="keyword">from</span> <span class="string">'antd-mobile'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;Router&gt;</span><br><span class="line">      &lt;div className=<span class="string">"App"</span>&gt;</span><br><span class="line">        React APP</span><br><span class="line">        &lt;Button color=<span class="string">'primary'</span> fill=<span class="string">'solid '</span>&gt;登录按钮&lt;<span class="regexp">/Button&gt;</span></span><br><span class="line"><span class="regexp">        &lt;br /</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Link to=<span class="string">"/home"</span>&gt;首页&lt;<span class="regexp">/Link&gt;</span></span><br><span class="line"><span class="regexp">        &lt;Link to="/</span>citylist<span class="string">"&gt;城市列表&lt;/Link&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &lt;Routes&gt;</span></span><br><span class="line"><span class="string">          &lt;Route path="</span>/<span class="string">" element=&#123;&lt;Home /&gt;&#125;&gt;&lt;/Route&gt;</span></span><br><span class="line"><span class="string">          &lt;Route path="</span>/home<span class="string">" element=&#123;&lt;Home /&gt;&#125;&gt;&lt;/Route&gt;</span></span><br><span class="line"><span class="string">          &lt;Route path="</span>/citylist<span class="string">" element=&#123;&lt;CityList /&gt;&#125;&gt;&lt;/Route&gt;</span></span><br><span class="line"><span class="string">        &lt;/Routes&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/Router&gt;</span></span><br><span class="line"><span class="string">  );</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">export default App;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="集中渲染路由"><a href="#集中渲染路由" class="headerlink" title="集中渲染路由"></a>集中渲染路由</h2><ul><li>src 目录下创建 router/index.js 作为路由的入口文件</li><li>通过使用 <code>react-router-dom</code>库的  <code>useRoutes()</code> 方法，来处理路由跳转</li><li>index.js 中使用 <code>数组的形式来配置路由</code>，将其传递给 <code>useRoutes()</code> 方法，传递给根组件渲染</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* router/index.js */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; lazy, Suspense &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; matchRoutes &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> AppLayout <span class="keyword">from</span> <span class="string">'../pages/AppLayout'</span>;</span><br><span class="line"><span class="keyword">import</span> NotFound <span class="keyword">from</span> <span class="string">'../pages/NotFound'</span>;</span><br><span class="line"><span class="keyword">const</span> Home = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/Home'</span>));</span><br><span class="line"><span class="keyword">const</span> CityList = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/CityList'</span>));</span><br><span class="line"><span class="keyword">const</span> News = lazy(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../pages/News'</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> lazyLoad = <span class="function">(<span class="params">children</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Suspense</span> <span class="attr">fallback</span>=<span class="string">&#123;</span>&lt;&gt;</span>Loading...<span class="tag">&lt;/&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="xml">    &#123;children&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">Suspense</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    element: <span class="xml"><span class="tag">&lt;<span class="name">AppLayout</span> /&gt;</span>,</span></span><br><span class="line"><span class="xml">    children: [</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        index: true,</span></span><br><span class="line"><span class="xml">        element: lazyLoad(<span class="tag">&lt;<span class="name">Home</span> /&gt;</span>)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        path: 'news',</span></span><br><span class="line"><span class="xml">        element: lazyLoad(<span class="tag">&lt;<span class="name">News</span> /&gt;</span>)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      &#123;</span></span><br><span class="line"><span class="xml">        path: 'citylist',</span></span><br><span class="line"><span class="xml">        element: lazyLoad(<span class="tag">&lt;<span class="name">CityList</span> /&gt;</span>)</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">    ]</span></span><br><span class="line"><span class="xml">  &#125;,</span></span><br><span class="line"><span class="xml">  &#123;</span></span><br><span class="line"><span class="xml">    path: '/404',</span></span><br><span class="line"><span class="xml">    element: <span class="tag">&lt;<span class="name">NotFound</span> /&gt;</span></span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">];</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">const routerListener = (path, navigator) =&gt; &#123;</span></span><br><span class="line"><span class="xml">  return () =&gt; &#123;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    const isMatch = matchRoutes(routes, path);</span></span><br><span class="line"><span class="xml">    if (!isMatch) &#123;</span></span><br><span class="line"><span class="xml">      navigator('/404');</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    console.log(path, 'enter: routerEnterEvent');</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    return () =&gt; &#123;</span></span><br><span class="line"><span class="xml">      console.log(path, 'leave: routerLeaveEvent');</span></span><br><span class="line"><span class="xml">    &#125;;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  &#125;;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">export &#123; routes, routerListener &#125;;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* src/App.js */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UI组件库: antd-mobile</span></span><br><span class="line"><span class="keyword">import</span> &#123; Button &#125; <span class="keyword">from</span> <span class="string">'antd-mobile'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; routes, routerListener &#125; <span class="keyword">from</span> <span class="string">'./router/index'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRoutes, useLocation, useNavigate &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useEffect, useState &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> location = useLocation();</span><br><span class="line">  <span class="keyword">const</span> navigator = useNavigate();</span><br><span class="line">  <span class="keyword">let</span> [pathname, setPathname] = useState(location.pathname);</span><br><span class="line"></span><br><span class="line">  useEffect(</span><br><span class="line">    routerListener(pathname, navigator),</span><br><span class="line">    [pathname]</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> element = useRoutes(routes);</span><br><span class="line">  <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><h2 id="项目两种布局"><a href="#项目两种布局" class="headerlink" title="项目两种布局"></a>项目两种布局</h2><ul><li>一种是不带 <code>TabBar</code> 页面的，直接使用路由切换页面即可</li><li>一种是页面底部带 <code>TabBar</code> 页面的，需要使用嵌套路由来实现了页面的切换</li></ul><h2 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h2><p><strong>嵌套路由：路由内部包含路由</strong></p><ul><li>用 Home 组件表示父路由内容</li><li>用 News 组件表示子路由内容</li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li>在 pages 目录下创建 News/index.js 组件</li><li>Home 组件中，添加一个 Route 作为子路由（嵌套路由）的出口</li><li>设置嵌套路由的 path ，格式 <strong>以父路由 path 开头（父组件展示，子组件才会展示）</strong></li></ul><h1 id="项目准备-项目全局样式调整"><a href="#项目准备-项目全局样式调整" class="headerlink" title="项目准备 - 项目全局样式调整"></a>项目准备 - 项目全局样式调整</h1><blockquote><p>统一全局样式，以便于后续调整</p></blockquote><ul><li>页面标题：在 index.html 中修改</li><li>基础样式：在 index.css 中修改</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// index.css</span><br><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'Microsoft YaHei'</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="tabbar-组件实现"><a href="#tabbar-组件实现" class="headerlink" title="tabbar 组件实现"></a>tabbar 组件实现</h1><h2 id="安装-less-和-less-loader"><a href="#安装-less-和-less-loader" class="headerlink" title="安装 less 和 less-loader"></a>安装 less 和 less-loader</h2><blockquote><p><strong><u>安装完毕记得重新启动项目</u></strong></p></blockquote><ul><li>安装 less 和 less-loader</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add less less-loader -D</span><br></pre></td></tr></table></figure><ul><li>释放项目配置文件</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run eject</span><br></pre></td></tr></table></figure><ul><li>复制一份 css 配置修改成 less</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    const lessRegex = /\.less$/;</span><br><span class="line">    const lessModuleRegex = /\.module\.less$/;</span><br><span class="line">    ...</span><br><span class="line">     /** less */</span><br><span class="line">            &#123;</span><br><span class="line">              test: lessRegex,</span><br><span class="line">              exclude: lessModuleRegex,</span><br><span class="line">              use: getStyleLoaders(</span><br><span class="line">                &#123;</span><br><span class="line">                  importLoaders: 3,</span><br><span class="line">                  sourceMap: isEnvProduction</span><br><span class="line">                    ? shouldUseSourceMap</span><br><span class="line">                    : isEnvDevelopment,</span><br><span class="line">                  modules: &#123;</span><br><span class="line">                    mode: 'icss',</span><br><span class="line">                  &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                'less-loader'</span><br><span class="line">              ),</span><br><span class="line">          </span><br><span class="line">              sideEffects: true,</span><br><span class="line">            &#125;,</span><br><span class="line">        </span><br><span class="line">            &#123;</span><br><span class="line">              test: lessModuleRegex,</span><br><span class="line">              use: getStyleLoaders(</span><br><span class="line">                &#123;</span><br><span class="line">                  importLoaders: 3,</span><br><span class="line">                  sourceMap: isEnvProduction</span><br><span class="line">                    ? shouldUseSourceMap</span><br><span class="line">                    : isEnvDevelopment,</span><br><span class="line">                  modules: &#123;</span><br><span class="line">                    mode: 'local',</span><br><span class="line">                    getLocalIdent: getCSSModuleLocalIdent,</span><br><span class="line">                  &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                'less-loader'</span><br><span class="line">              ),</span><br><span class="line">            &#125;,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="项目中配置-TS-环境"><a href="#项目中配置-TS-环境" class="headerlink" title="项目中配置 TS 环境"></a>项目中配置 TS 环境</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save typescript @types/node @types/react @types/react-dom @types/jest</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[toc]&lt;/p&gt;&lt;h1 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;初始化项目&lt;/li&gt;
&lt;li&gt;使用 antd-mobile 组件库&lt;/li&gt;
&lt;li&gt;完成项目整体布局&lt;/li&gt;
&lt;li&gt;首页轮播图&lt;/li&gt;
&lt;li&gt;使用百度地图 API 完成定位功能&lt;/li&gt;
&lt;li&gt;使用 react-virtualized 完成城市选择功能&lt;/li&gt;
&lt;/ul&gt;&lt;h1 id=&quot;项目&quot;&gt;&lt;a href=&quot;#项目&quot; class=&quot;headerlink&quot; title=&quot;项目&quot;&gt;&lt;/a&gt;项目&lt;/h1&gt;&lt;h2 id=&quot;项目介绍&quot;&gt;&lt;a href=&quot;#项目介绍&quot; class=&quot;headerlink&quot; title=&quot;项目介绍&quot;&gt;&lt;/a&gt;项目介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;租房app - 移动 web 端&lt;/li&gt;
&lt;li&gt;在线租房项目，实现类似链家等项目功能，解决用户租房需求&lt;/li&gt;
&lt;li&gt;核心业务：&lt;ul&gt;
&lt;li&gt;在线找房&lt;/li&gt;
&lt;li&gt;用户登录&lt;/li&gt;
&lt;li&gt;房源发布&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
